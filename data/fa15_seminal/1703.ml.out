------------------------------------------------------------------
File "1703.ml", line 20, characters 6-55:
This expression has type float but is here used with type int
Relevant code: ((1.0 *. (eval (e1, x, y))) +. (eval (e2, x, y)))
------------------------------------------------------------------
File "1703.ml", line 20, characters 56-57:
Try replacing
    /
with
    /; [[...]]
of type
    float -> float -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> (1.0 *. x)
                              | VarY -> (1.0 *. y)
                              | Sine e' -> (sin (pi *. (eval (e', x, y))))
                              | Cosine e' -> (cos (pi *. (eval (e', x, y))))
                              | Average (e1, e2) ->
                                (((1.0 *. (eval (e1, x, y))) +. (eval (e2, x, y)))
                                      /; [[...]] 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))) ;; 
==============================
