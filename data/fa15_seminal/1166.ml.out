------------------------------------------------------------------
File "1166.ml", line 5, characters 44-55:
This expression has type 'a * 'b * ('b * 'a) list list
but is here used with type 'a * 'b * ('b * 'a)
Relevant code: (d, k, [t])
------------------------------------------------------------------
File "1166.ml", line 5, characters 38-55:
Try replacing
    (if (k, d) = l then d else (assoc (d, k, [t])))
with
    (if (k, d) = l then d)
of type
    unit
within context
    let rec assoc (d, k, l) = (match [k, d] with 
                               | [] -> d
                               | h :: t -> (if (k, d) = l then d)) ;; 
==============================
File "1166.ml", line 5, characters 24-25:
Try replacing
    l
with
    h
of type
    'c * 'd
within context
    let rec assoc (d, k, l) = (match [k, d] with 
                               | [] -> d
                               | h :: t ->
                                 (if (k, d) = h then d else
                                     (assoc (d, k, [t])))) ;; 
==============================
