------------------------------------------------------------------
File "0613.ml", line 21, characters 10-71:
This expression has type (int * int) list but is here used with type int list
Relevant code: if value > 9 then (1, (value - 10)) :: a else (0, value) :: a
------------------------------------------------------------------
Triaged the following locations:
File "0613.ml", line 22, characters 4-120:
And modified the following location:
File "0613.ml", line 20, characters 10-111:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let value = (a1 + x1) + x2 in
      (if value > 9 then 1, value - 10 :: a else 0, value :: a)
with
    let value = (a1 + x1) + x2 in
      (if value > 9 then 1, value - 10 :: a else 0, value :: a);
    [[...]]
The actual replacement has type
    int list
within context
    fun l1
      l2 -> (let add (l1, l2) = let f a x = let (a1, a2) :: t = a in (match x with 
                                                                      | [] ->
                                                                        (if a1 = 0
                                                                            then
                                                                            []
                                                                            else
                                                                            [a1])
                                                                      |
                                                                        (x1, x2)
                                                                          :: t
                                                                        ->
                                                                        (let value =
                                                                              (a1
                                                                                    +
                                                                                    x1)
                                                                                + x2
                                                                              in
                                                                              (if
                                                                                  value
                                                                                    >
                                                                                    9
                                                                                  then
                                                                                  1,
                                                                                        value
                                                                                          -
                                                                                          10
                                                                                      ::
                                                                                      a
                                                                                  else
                                                                                  0,
                                                                                        value
                                                                                      ::
                                                                                      a);
                                                                            [[...]])) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0613.ml", line 22, characters 4-120:
And modified the following location:
File "0613.ml", line 18, characters 14-41:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (if a1 = 0 then [] else [a1])
with
    (if a1 = 0 then [] else [a1]); [[...]]
The actual replacement has type
    (int * int) list
within context
    fun l1
      l2 -> (let add (l1, l2) = let f a x = let (a1, a2) :: t = a in (match x with 
                                                                      | [] ->
                                                                        ((if a1 = 0
                                                                              then
                                                                              []
                                                                              else
                                                                              [a1]);
                                                                            [[...]])
                                                                      |
                                                                        (x1, x2)
                                                                          :: t
                                                                        ->
                                                                        (let value =
                                                                              (a1
                                                                                    +
                                                                                    x1)
                                                                                + x2
                                                                              in
                                                                              (if
                                                                                  value
                                                                                    >
                                                                                    9
                                                                                  then
                                                                                  1,
                                                                                        value
                                                                                          -
                                                                                          10
                                                                                      ::
                                                                                      a
                                                                                  else
                                                                                  0,
                                                                                        value
                                                                                      ::
                                                                                      a))) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0613.ml", line 22, characters 4-120:
And modified the following location:
File "0613.ml", line 16, characters 23-24:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a
with
    a; [[...]]
The actual replacement has type
    ('a * 'b) list
within context
    fun l1
      l2 ->
        (let add (l1, l2) =
            let f a x = let (a1, a2) :: t = a; [[...]] in (match x with 
                                                           | [] ->
                                                             (if a1 = 0 then [] else
                                                                 [a1])
                                                           | (x1, x2) :: t ->
                                                             (let value =
                                                                   (a1 + x1) + x2
                                                                   in
                                                                   (if value > 9
                                                                       then
                                                                       1, value - 10
                                                                           ::
                                                                           a
                                                                       else
                                                                       0, value ::
                                                                           a))) in [[...other program...]]
            in
            (removeZero (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0613.ml", line 22, characters 4-120:
And modified the following location:
File "0613.ml", line 15, characters 4-362:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = let (a1, a2) :: t = a in (match x with 
                                          | [] -> (if a1 = 0 then [] else [a1])
                                          | (x1, x2) :: t ->
                                            (let value = (a1 + x1) + x2 in
                                                  (if value > 9 then
                                                      1, value - 10 :: a
                                                      else
                                                      0, value ::
                                                          a))) in let base = [] in
      let args = (List.rev (List.combine l1 l2)) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'c
==============================
