------------------------------------------------------------------
File "2305.ml", line 16, characters 16-25:
This expression is not a function, it cannot be applied
Relevant code: "cos(pi*"
------------------------------------------------------------------
Triaged the following locations:
File "2305.ml", line 18, characters 6-70:
File "2305.ml", line 19, characters 19-52:
And modified the following location:
File "2305.ml", line 16, characters 16-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    "cos(pi*"
with
    "cos(pi*"; [[...]]
The actual replacement has type
    (expr -> string) ->
    expr -> string -> string
within context
    let rec exprToString e = (match e with 
                              | VarX -> "x"
                              | VarY -> "y"
                              | Sine e -> "sin(pi*" ^ ((exprToString e) ^ ")")
                              | Cosine e ->
                                (( "cos(pi*"; [[...]] ) exprToString e ")")
                              | Average (x, y) -> [[...other program...]]
                              | Times (x, y) -> [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "2305.ml", line 16, characters 16-44:
File "2305.ml", line 18, characters 6-70:
And modified the following location:
File "2305.ml", line 19, characters 19-31:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    exprToString
with
    exprToString; [[...]]
The actual replacement has type
    expr ->
    string ->
    (expr -> string) -> expr -> string
within context
    let rec exprToString e = (match e with 
                              | VarX -> "x"
                              | VarY -> "y"
                              | Sine e -> "sin(pi*" ^ ((exprToString e) ^ ")")
                              | Cosine e -> [[...other program...]]
                              | Average (x, y) -> [[...other program...]]
                              | Times (x, y) ->
                                ((exprToString; [[...]])
                                    e "*"  exprToString  e)) ;; 
==============================
