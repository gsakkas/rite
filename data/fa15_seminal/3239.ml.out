------------------------------------------------------------------
File "3239.ml", line 3, characters 60-61:
This expression has type ('a -> 'b) -> 'c -> 'a -> 'a -> 'b
but is here used with type ('a -> 'b) -> 'c -> 'a -> 'b
Relevant code: f
------------------------------------------------------------------
File "3239.ml", line 3, characters 8-11:
Try replacing
    fun a x c x -> (a x)
with
    fun x a c x -> (a x)
of type
    'd -> ('e -> 'f) -> 'g -> 'e -> 'f
within context
    let pipe fs =
    let f x a c x = (a x) in let base g x = x in (List.fold_left f base  fs)
    ;; 
==============================
File "3239.ml", line 3, characters 60-66:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left base f  fs)
of type
    ('h -> 'i) -> 'j -> 'k -> 'h -> 'i
within context
    let pipe fs =
    let f a x c x = (a x) in let base g x = x in (List.fold_left base f  fs)
    ;; 
==============================
File "3239.ml", line 3, characters 45-61:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left (f base fs))
of type
    ('l -> 'l) -> 'm list -> 'l -> 'l
within context
    let pipe fs =
    let f a x c x = (a x) in let base g x = x in (List.fold_left (f base fs))
    ;; 
==============================
File "3239.ml", line 3, characters 45-59:
Try replacing
    List.fold_left
with
    base
of type
    (('n -> 'o) -> 'p -> 'q -> 'n -> 'o) -> ('r -> 's -> 's) -> 'r -> 's -> 's
within context
    let pipe fs = let f a x c x = (a x) in let base g x = x in (base f base  fs) ;; 
==============================
File "3239.ml", line 3, characters 45-59:
Try replacing
    List.fold_left
with
    f
of type
    (('t -> 'u) -> 'v -> 'w -> 't -> 'u) ->
    ('x -> 'y -> 'y) -> 'z -> ('t -> 'u) -> 'v -> 'w -> 't -> 'u
within context
    let pipe fs = let f a x c x = (a x) in let base g x = x in (f f base  fs) ;; 
==============================
File "3239.ml", line 3, characters 18-19:
Try replacing
    a
with
    c
of type
    'a1 -> 'b1
within context
    fun a x c x -> (c x)
==============================
File "3239.ml", line 3, characters 60-61:
Try replacing
    f
with
    base
of type
    ('c1 -> 'd1 -> 'd1) -> ('c1 -> 'd1 -> 'd1) -> 'c1 -> 'd1 -> 'd1
within context
    let pipe fs =
    let f a x c x = (a x) in let base g x = x in (List.fold_left base base  fs)
    ;; 
==============================
