------------------------------------------------------------------
File "0850.ml", line 25, characters 27-37:
This expression has type int * int but is here used with type 'a list
Relevant code: (fst, sec)
------------------------------------------------------------------
Triaged the following locations:
File "0850.ml", line 26, characters 13-39:
And modified the following location:
File "0850.ml", line 25, characters 27-37:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    fst, sec
with
    fst, sec; [[...]]
The actual replacement has type
    'b list
within context
    let (fst, sec) = x in
      let (fst', sec') =
      (if fst + sec > 9 then (fst + sec) - 10, 1 else fst + sec, 0)
      in
      let (carry, digits) = a in
      let (carry', digits') =
      (if sec' = 1 then 1, digits @ (fst, sec; [[...]]) else
        [[...other program...]])
      in
      carry', digits'
==============================
Triaged the following locations:
File "0850.ml", line 25, characters 13-39:
And modified the following location:
File "0850.ml", line 26, characters 25-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    @
with
    @; [[...]]
The actual replacement has type
    'c -> int * int -> 'd
within context
    let (fst, sec) = x in
      let (fst', sec') =
      (if fst + sec > 9 then (fst + sec) - 10, 1 else fst + sec, 0)
      in
      let (carry, digits) = a in
      let (carry', digits') =
      (if sec' = 1 then [[...other program...]] else
        0, (digits @; [[...]] fst, sec))
      in
      carry', digits'
==============================
Triaged the following locations:
File "0850.ml", line 26, characters 13-39:
And modified the following location:
File "0850.ml", line 25, characters 25-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    @
with
    @; [[...]]
The actual replacement has type
    'e -> int * int -> 'f
within context
    let (fst, sec) = x in
      let (fst', sec') =
      (if fst + sec > 9 then (fst + sec) - 10, 1 else fst + sec, 0)
      in
      let (carry, digits) = a in
      let (carry', digits') =
      (if sec' = 1 then 1, (digits @; [[...]] fst, sec) else
        [[...other program...]])
      in
      carry', digits'
==============================
Triaged the following locations:
File "0850.ml", line 25, characters 13-39:
And modified the following location:
File "0850.ml", line 26, characters 27-37:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    fst, sec
with
    fst, sec; [[...]]
The actual replacement has type
    'g list
within context
    let (fst, sec) = x in
      let (fst', sec') =
      (if fst + sec > 9 then (fst + sec) - 10, 1 else fst + sec, 0)
      in
      let (carry, digits) = a in
      let (carry', digits') =
      (if sec' = 1 then [[...other program...]] else
        0, digits @ (fst, sec; [[...]]))
      in
      carry', digits'
==============================
