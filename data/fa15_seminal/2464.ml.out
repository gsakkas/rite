------------------------------------------------------------------
File "2464.ml", line 3, characters 65-66:
This expression has type int -> 'a -> 'b -> int -> int
but is here used with type int -> 'a -> int
Relevant code: f
------------------------------------------------------------------
File "2464.ml", line 3, characters 50-66:
Try replacing
    (List.fold_left f base  xs)
with
    (List.fold_left (f base xs))
of type
    int -> int list -> int
within context
    let sqsum xs =
    let f a x mb x = x * x + a in let base = 0 in (List.fold_left (f base xs))
    ;; 
==============================
File "2464.ml", line 3, characters 65-66:
Try replacing
    f
with
    *
of type
    int -> int -> int
within context
    let sqsum xs =
    let f a x mb x = x * x + a in let base = 0 in (List.fold_left * base  xs)
    ;; 
==============================
File "2464.ml", line 3, characters 65-66:
Try replacing
    f
with
    +
of type
    int -> int -> int
within context
    let sqsum xs =
    let f a x mb x = x * x + a in let base = 0 in (List.fold_left + base  xs)
    ;; 
==============================
