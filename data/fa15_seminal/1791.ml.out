------------------------------------------------------------------
File "1791.ml", line 42, characters 21-40:
This expression has type (int * int -> int) * int but is here used with type
  unit
Relevant code: (rand, (depth - 1))
------------------------------------------------------------------
Triaged the following locations:
File "1791.ml", line 42, characters 13-41:
And modified the following location:
File "1791.ml", line 42, characters 44-50:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildX
with
    build
The actual replacement has type
    (int * int -> int) * int -> expr
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     [[...other program...]], (build (rand, depth - 1)))))))
==============================
Triaged the following locations:
File "1791.ml", line 42, characters 13-41:
And modified the following location:
File "1791.ml", line 42, characters 44-50:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildX
with
    buildX; [[...]]
The actual replacement has type
    (int * int -> int) * int -> expr
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     [[...other program...]],
                     ((buildX; [[...]]) (rand, depth - 1)))))))
==============================
Triaged the following locations:
File "1791.ml", line 42, characters 43-71:
And modified the following location:
File "1791.ml", line 42, characters 21-40:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    rand, depth - 1
with
    rand, depth - 1; [[...]]
The actual replacement has type
    unit
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     (buildY (rand, depth - 1; [[...]])),
                     [[...other program...]])))))
==============================
Triaged the following locations:
File "1791.ml", line 42, characters 13-41:
And modified the following location:
File "1791.ml", line 42, characters 51-70:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    rand, depth - 1
with
    rand, depth - 1; [[...]]
The actual replacement has type
    unit
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     [[...other program...]],
                     (buildX (rand, depth - 1; [[...]])))))))
==============================
Triaged the following locations:
File "1791.ml", line 42, characters 43-71:
And modified the following location:
File "1791.ml", line 42, characters 14-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildY
with
    build
The actual replacement has type
    (int * int -> int) * int -> expr
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     (build (rand, depth - 1)), [[...other program...]])))))
==============================
Triaged the following locations:
File "1791.ml", line 42, characters 43-71:
And modified the following location:
File "1791.ml", line 42, characters 14-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildY
with
    buildY; [[...]]
The actual replacement has type
    (int * int -> int) * int -> expr
within context
    (if depth = 0 then (let r = (rand (0, 1)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | _ ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 4))
          in
          (match r with 
           | 0 -> (buildSine (build (rand, depth - 1)))
           | 1 -> (buildCosine (build (rand, depth - 1)))
           | 2 ->
             (buildAverage ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | 3 ->
             (buildTimes ((build (rand, depth - 1)), (build (rand, depth - 1))))
           | _ ->
             (buildThresh
                 ((build (rand, depth - 1)),
                     (build (rand, depth - 1)),
                     ((buildY; [[...]]) (rand, depth - 1)),
                     [[...other program...]])))))
==============================
