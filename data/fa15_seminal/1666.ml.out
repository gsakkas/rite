------------------------------------------------------------------
File "1666.ml", line 24, characters 11-58:
This expression has type int * int list but is here used with type int * int
Relevant code: (0, (let (y,z) = x in [(y + z) + carry] @ ans))
------------------------------------------------------------------
File "1666.ml", line 21, characters 13-19:
Try replacing
    1, 9
with
    1, 9; [[...]]
of type
    int * int list
within context
    let f a x =
      (if (let (carry, ans) = a in let (y, z) = x in (y + z) + carry > 10) then
        (let (carry, ans) = a in
            1, (let (y, z) = x in [(mod ((y + z) + carry) 10)] @ ans))
        else
        (if (let (carry, ans) = a in let (y, z) = x in (y + z) + carry = 10) then
          (1, 9; [[...]])
          else
          (let (carry, ans) = a in 0, (let (y, z) = x in [(y + z) + carry] @ ans))))
      in
      let base = 0, [] in
      let args = (List.rev (List.combine l1 l2)) in
      let (_, res) = (List.fold_left f base  args) in res
==============================
