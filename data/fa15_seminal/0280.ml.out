------------------------------------------------------------------
File "0280.ml", line 8, characters 22-25:
This expression has type int -> int but is here used with type int
Relevant code: abs
------------------------------------------------------------------
Triaged the following locations:
File "0280.ml", line 8, characters 7-36:
And modified the following location:
File "0280.ml", line 9, characters 45-46:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    @
with
    @; [[...]]
The actual replacement has type
    (int list -> int list) -> 'a list -> unit
within context
    let padZero l1 l2 =
    let diff = (List.length l1) - (List.length l2) in
      (if diff < 0 then [[...other program...]] else
          (if diff > 0 then ((cloneHelper 0 diff) @; [[...]] l2)))
    ;; 
==============================
Triaged the following locations:
File "0280.ml", line 9, characters 7-49:
And modified the following location:
File "0280.ml", line 8, characters 8-19:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    cloneHelper
with
    cloneHelper; [[...]]
The actual replacement has type
    int -> (int -> int) -> int -> 'b list
within context
    let padZero l1 l2 =
    let diff = (List.length l1) - (List.length l2) in
      (if diff < 0 then ((cloneHelper; [[...]]) 0 abs  diff) @ l1 else
          [[...other program...]])
    ;; 
==============================
