------------------------------------------------------------------
File "0144.ml", line 39, characters 6-197:
This expression has type string but is here used with type float
Relevant code: "(" ^
        ((exprToString e1) ^
           ("<" ^
              ((exprToString e2) ^
                 ("?" ^
                    ((exprToString e3) ^ (":" ^ ((exprToString e4) ^ ")")))))))
------------------------------------------------------------------
File "0144.ml", line 39, characters 6-197:
Try replacing
    "(" ^
      ((exprToString e1) ^
          ("<" ^
              ((exprToString e2) ^
                  ("?" ^ ((exprToString e3) ^ (":" ^ ((exprToString e4) ^ ")")))))))
with
    "(" ^
      ((exprToString e1) ^
          ("<" ^
              ((exprToString e2) ^
                  ("?" ^
                      ((exprToString e3) ^ (":" ^ ((exprToString e4) ^ ")")))))));
    [[...]]
of type
    float
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 10-22:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    exprToString
with
    exprToString
The actual replacement has type
    expr -> string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 10-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (exprToString e1)
with
    (exprToString (e1))
The actual replacement has type
    string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString (e1)) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 23-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e3
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e3) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 23-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 23-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e1
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 23-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e2
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e2) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 23-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e4
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e4) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 40, characters 27-28:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    ^
with
    ^
The actual replacement has type
    string -> string -> string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 41, characters 16-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    ^
with
    ^
The actual replacement has type
    string -> string -> string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 42, characters 16-28:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    exprToString
with
    exprToString
The actual replacement has type
    expr -> string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 42, characters 29-31:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e2
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 42, characters 16-31:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (exprToString e2)
with
    (exprToString (e2))
The actual replacement has type
    string
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString (e2)) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 42, characters 29-31:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e4
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e4) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
Triaged the following locations:
File "0144.ml", line 34, characters 15-44:
File "0144.ml", line 35, characters 17-46:
File "0144.ml", line 36, characters 23-70:
File "0144.ml", line 37, characters 21-59:
And modified the following location:
File "0144.ml", line 42, characters 29-31:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e1
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e1) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))) ;; 
==============================
