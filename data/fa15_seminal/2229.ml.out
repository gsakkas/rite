------------------------------------------------------------------
File "2229.ml", line 23, characters 18-44:
This expression has type int list but is here used with type 'a * 'b
Relevant code: List.fold_left f base args
------------------------------------------------------------------
File "2229.ml", line 19, characters 15-18:
Try replacing
    [0]
with
    0, []
of type
    int * 'c list
within context
    fun l2 ->
      (let add (l1, l2) =
          let f a x = (failwith "to be implemented") in
            let base = 0, [] in
            let args =
            let combine (a, b) = a + b in
              (List.map combine (List.rev (List.combine l1 l2)))
            in
            let (_, res) = (List.fold_left f base  args) in res
          in
          (removeZero (add (padZero l1 l2))))
==============================
File "2229.ml", line 23, characters 18-32:
Try replacing
    List.fold_left
with
    f
of type
    ('d -> 'e -> 'f) -> int list -> int list -> 'g * 'h
within context
    let f a x = (failwith "to be implemented") in
      let base = [0] in
      let args =
      let combine (a, b) = a + b in
        (List.map combine (List.rev (List.combine l1 l2)))
      in
      let (_, res) = (f f base  args) in res
==============================
