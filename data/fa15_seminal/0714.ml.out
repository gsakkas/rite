------------------------------------------------------------------
File "0714.ml", line 36, characters 24-36:
This expression has type expr -> string but is here used with type string
Relevant code: exprToString
------------------------------------------------------------------
File "0714.ml", line 36, characters 24-36:
Try replacing
    exprToString
with
    exprToString; [[...]]
of type
    string
within context
    let rec exprToString e = (match e with 
                              | VarX -> "x"
                              | VarY -> "y"
                              | Sine e1 -> "sin(pi*" ^ ((exprToString e1) ^ ")")
                              | Cosine e1 -> "cos(pi*" ^ ((exprToString e1) ^ ")")
                              | Average (e1, e2) ->
                                "((" ^
                                    ((exprToString e1) ^
                                        ("+" ^ ((exprToString e2) ^ ")/2)")))
                              | Times (e1, e2) ->
                                (exprToString e1) ^ ("*" ^ (exprToString e2))
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))
                              | ThreshRev (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        (">" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))
                              | Square e1 ->
                                "(" ^ ((exprToString; [[...]]) ^ ")^2")) ;; 
==============================
File "0714.ml", line 36, characters 37-38:
Try replacing
    ^
with
    ^; [[...]]
of type
    (expr -> string) -> string -> string
within context
    let rec exprToString e = (match e with 
                              | VarX -> "x"
                              | VarY -> "y"
                              | Sine e1 -> "sin(pi*" ^ ((exprToString e1) ^ ")")
                              | Cosine e1 -> "cos(pi*" ^ ((exprToString e1) ^ ")")
                              | Average (e1, e2) ->
                                "((" ^
                                    ((exprToString e1) ^
                                        ("+" ^ ((exprToString e2) ^ ")/2)")))
                              | Times (e1, e2) ->
                                (exprToString e1) ^ ("*" ^ (exprToString e2))
                              | Thresh (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        ("<" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))
                              | ThreshRev (e1, e2, e3, e4) ->
                                "(" ^
                                    ((exprToString e1) ^
                                        (">" ^
                                            ((exprToString e2) ^
                                                ("?" ^
                                                    ((exprToString e3) ^
                                                        (":" ^
                                                            ((exprToString e4)
                                                                ^ ")")))))))
                              | Square e1 ->
                                "(" ^ (exprToString ^; [[...]] ")^2")) ;; 
==============================
