------------------------------------------------------------------
File "0562.ml", line 12, characters 64-66:
This expression has type expr but is here used with type expr * 'a * 'a
Relevant code: e1
------------------------------------------------------------------
File "0562.ml", line 12, characters 64-68:
Try replacing
    (eval e1 x  y)
with
    (eval (e1, x, y))
of type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (eval (e1, x, y)))) ;; 
==============================
File "0562.ml", line 11, characters 13-20:
Try replacing
    fun (e, x, y) -> (match e with 
                      | VarX -> x
                      | VarY -> y
                      | Sine e1 -> (sin (eval e1 x  y)))
with
    fun e x y -> (match e with 
                  | VarX -> x
                  | VarY -> y
                  | Sine e1 -> (sin (eval e1 x  y)))
of type
    expr -> float -> float -> float
==============================
