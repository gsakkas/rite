------------------------------------------------------------------
File "1889.ml", line 34, characters 12-28:
This expression has type float but is here used with type int
Relevant code: (eval (a, x, y))
------------------------------------------------------------------
Triaged the following locations:
File "1889.ml", line 34, characters 49-50:
And modified the following location:
File "1889.ml", line 34, characters 29-30:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    +
with
    +; [[...]]
The actual replacement has type
    float -> float -> 'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> (sin (pi *. (eval (a, x, y))))
                              | Cosine a -> (cos (pi *. (eval (a, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))
                              | Power (a, b) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    (eval (a, x, y)) ** (eval (b, x, y)))
                              | Tower (a, b, c) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    (((eval (a, x, y)) +; [[...]] (eval (b, x, y)))
                                        +; [[...]] (eval (c, x, y))))) ;; 
==============================
Triaged the following locations:
File "1889.ml", line 34, characters 49-50:
And modified the following location:
File "1889.ml", line 34, characters 29-30:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    +
with
    <
The actual replacement has type
    float -> float -> bool
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> (sin (pi *. (eval (a, x, y))))
                              | Cosine a -> (cos (pi *. (eval (a, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))
                              | Power (a, b) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    (eval (a, x, y)) ** (eval (b, x, y)))
                              | Tower (a, b, c) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    ((eval (a, x, y)) < (eval (b, x, y))
                                        +; [[...]] (eval (c, x, y))))) ;; 
==============================
Triaged the following locations:
File "1889.ml", line 34, characters 49-50:
And modified the following location:
File "1889.ml", line 34, characters 29-30:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    +
with
    >
The actual replacement has type
    float -> float -> bool
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> (sin (pi *. (eval (a, x, y))))
                              | Cosine a -> (cos (pi *. (eval (a, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))
                              | Power (a, b) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    (eval (a, x, y)) ** (eval (b, x, y)))
                              | Tower (a, b, c) ->
                                (if x < 1.0 && x > -1.0 || y < 1.0 && y > -1.0 then
                                    0.5
                                    else
                                    ((eval (a, x, y)) > (eval (b, x, y))
                                        +; [[...]] (eval (c, x, y))))) ;; 
==============================
