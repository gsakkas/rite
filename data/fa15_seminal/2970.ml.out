------------------------------------------------------------------
File "2970.ml", line 8, characters 41-42:
This expression has type string list but is here used with type
  (string -> string) list
Relevant code: l
------------------------------------------------------------------
File "2970.ml", line 8, characters 19-33:
Try replacing
    List.fold_left
with
    sep
of type
    ('a -> ('a -> 'b) -> 'b) -> string -> string list -> string
within context
    (match sl with 
     | [] -> ""
     | h :: t ->
       (let f a x = (x a) in
             let base = h ^ (sepConcat sep t) in let l = t in (sep f base  l)))
==============================
File "2970.ml", line 8, characters 34-35:
Try replacing
    f
with
    ^
of type
    string -> string -> string
within context
    (match sl with 
     | [] -> ""
     | h :: t ->
       (let f a x = (x a) in
             let base = h ^ (sepConcat sep t) in
             let l = t in (List.fold_left ^ base  l)))
==============================
