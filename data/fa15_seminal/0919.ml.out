------------------------------------------------------------------
File "0919.ml", line 25, characters 14-17:
This function is applied to too many arguments,
maybe you forgot a `;'
Relevant code: add
------------------------------------------------------------------
File "0919.ml", line 15, characters 10-17:
Try replacing
    fun (l1, l2) -> (let f a x = (match x with 
                                  | (l1e, l2e) -> (match a with 
                                                   | (carry, list) ->
                                                     (let num = (l1e + l2e) + carry
                                                           in
                                                           (mod num 9),
                                                               [7]
                                                                 @
                                                                 list))) in let base
          =
          0, []
          in
          let args = (List.combine l1 l2) in
          let (_, res) = (List.fold_left f base  args) in res)
with
    fun l1 l2 -> (let f a x = (match x with 
                               | (l1e, l2e) -> (match a with 
                                                | (carry, list) ->
                                                  (let num = (l1e + l2e) + carry in
                                                        (mod num 9),
                                                            [7]
                                                              @
                                                              list))) in let base =
            0, []
            in
            let args = (List.combine l1 l2) in
            let (_, res) = (List.fold_left f base  args) in res)
of type
    int list -> int list -> int list
==============================
File "0919.ml", line 25, characters 18-33:
Try replacing
    (add (padZero l1 l2) (if l1 > l2 then l1 else l2))
with
    (add ((padZero l1 l2), (if l1 > l2 then l1 else l2)))
of type
    int list
within context
    let bigAdd l1 l2 = let add (l1, l2) = let f a x = (match x with 
                                                       | (l1e, l2e) ->
                                                         (match a with 
                                                          | (carry, list) ->
                                                            (let num =
                                                                  (l1e + l2e)
                                                                    + carry
                                                                  in
                                                                  (mod num 9),
                                                                      [7]
                                                                        @
                                                                        list))) in let
        base
        =
        0, []
        in
        let args = (List.combine l1 l2) in
        let (_, res) = (List.fold_left f base  args) in
        res in (removeZero
          (add ((padZero l1 l2), (if l1 > l2 then l1 else l2)))) ;; 
==============================
File "0919.ml", line 25, characters 14-17:
Try replacing
    add
with
    @
of type
    int list -> int list -> int list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match x with 
                                                  | (l1e, l2e) -> (match a with 
                                                                   | (carry, list)
                                                                     ->
                                                                     (let num =
                                                                           (l1e
                                                                                 +
                                                                                 l2e)
                                                                             + carry
                                                                           in
                                                                           (mod
                                                                                 num 9)
                                                                               ,
                                                                               [7]
                                                                                 @
                                                                                 list))) in let
              base
              =
              0, []
              in
              let args = (List.combine l1 l2) in
              let (_, res) = (List.fold_left f base  args) in
              res in (removeZero (@ (padZero l1 l2) (if l1 > l2 then l1 else l2))))
==============================
