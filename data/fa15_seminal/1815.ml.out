------------------------------------------------------------------
File "1815.ml", line 8, characters 8-100:
This expression has type unit but is here used with type 'a list
Relevant code: if List.mem h r
        then let seen' = h :: seen in let rest' = t in helper (seen', rest')
------------------------------------------------------------------
File "1815.ml", line 8, characters 8-100:
Try replacing
    (if (List.mem h r) then
      (let seen' = h :: seen in let rest' = t in (helper (seen', rest'))))
with
    [[...]]
of type
    'b
within context
    fun l -> (let rec helper (seen, rest) = (match rest with 
                                             | [] -> seen
                                             | h :: t ->
                                               (let r = (List.rev t) in
                                                     [[...]])) in (List.rev
              (helper ([], l))))
==============================
