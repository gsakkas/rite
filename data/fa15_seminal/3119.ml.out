------------------------------------------------------------------
File "3119.ml", line 48, characters 11-100:
This expression has type expr * expr * expr * expr but is here used with type
  expr * expr * expr
Relevant code: ((build (rand, d)), (build (rand, d)), (build (rand, d)),
             (build (rand, d)))
------------------------------------------------------------------
File "3119.ml", line 48, characters 11-100:
Try replacing
    (build (rand, d)), (build (rand, d)), (build (rand, d)), (build (rand, d))
with
    (build (rand, d)), (build (rand, d)), (build (rand, d))
of type
    expr * expr * expr
within context
    (if depth = 0 then (let r = (rand (0, 2)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | 1 ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 11))
          in
          let d = depth - 1 in (match r with 
                                | 0 ->
                                  (buildAverage
                                      ((build (rand, d)), (build (rand, d))))
                                | 1 -> (buildCosine (build (rand, d)))
                                | 2 -> (buildSine (build (rand, d)))
                                | 3 ->
                                  (buildTimes
                                      ((build (rand, d)), (build (rand, d))))
                                | 4 ->
                                  (buildThresh
                                      ((build (rand, d)),
                                          (build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 5 ->
                                  (buildOp2
                                      ((build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 6 -> (buildSine (build (rand, d)))
                                | 7 -> (buildCosine (build (rand, d)))
                                | 8 -> (buildOp1 (build (rand, d)))
                                | 9 -> (buildSine (build (rand, d)))
                                | 10 -> (buildCosine (build (rand, d))))))
==============================
File "3119.ml", line 48, characters 11-100:
Try replacing
    (build (rand, d)), (build (rand, d)), (build (rand, d)), (build (rand, d))
with
    (build (rand, d)), (build (rand, d)), (build (rand, d))
of type
    expr * expr * expr
within context
    (if depth = 0 then (let r = (rand (0, 2)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | 1 ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 11))
          in
          let d = depth - 1 in (match r with 
                                | 0 ->
                                  (buildAverage
                                      ((build (rand, d)), (build (rand, d))))
                                | 1 -> (buildCosine (build (rand, d)))
                                | 2 -> (buildSine (build (rand, d)))
                                | 3 ->
                                  (buildTimes
                                      ((build (rand, d)), (build (rand, d))))
                                | 4 ->
                                  (buildThresh
                                      ((build (rand, d)),
                                          (build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 5 ->
                                  (buildOp2
                                      ((build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 6 -> (buildSine (build (rand, d)))
                                | 7 -> (buildCosine (build (rand, d)))
                                | 8 -> (buildOp1 (build (rand, d)))
                                | 9 -> (buildSine (build (rand, d)))
                                | 10 -> (buildCosine (build (rand, d))))))
==============================
File "3119.ml", line 48, characters 11-100:
Try replacing
    (build (rand, d)), (build (rand, d)), (build (rand, d)), (build (rand, d))
with
    (build (rand, d)), (build (rand, d)), (build (rand, d))
of type
    expr * expr * expr
within context
    (if depth = 0 then (let r = (rand (0, 2)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | 1 ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 11))
          in
          let d = depth - 1 in (match r with 
                                | 0 ->
                                  (buildAverage
                                      ((build (rand, d)), (build (rand, d))))
                                | 1 -> (buildCosine (build (rand, d)))
                                | 2 -> (buildSine (build (rand, d)))
                                | 3 ->
                                  (buildTimes
                                      ((build (rand, d)), (build (rand, d))))
                                | 4 ->
                                  (buildThresh
                                      ((build (rand, d)),
                                          (build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 5 ->
                                  (buildOp2
                                      ((build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 6 -> (buildSine (build (rand, d)))
                                | 7 -> (buildCosine (build (rand, d)))
                                | 8 -> (buildOp1 (build (rand, d)))
                                | 9 -> (buildSine (build (rand, d)))
                                | 10 -> (buildCosine (build (rand, d))))))
==============================
File "3119.ml", line 48, characters 11-100:
Try replacing
    (build (rand, d)), (build (rand, d)), (build (rand, d)), (build (rand, d))
with
    (build (rand, d)), (build (rand, d)), (build (rand, d))
of type
    expr * expr * expr
within context
    (if depth = 0 then (let r = (rand (0, 2)) in (match r with 
                                                  | 0 -> (buildX ())
                                                  | 1 ->
                                                    (buildY
                                                        ()))) else (let r =
          (rand (0, 11))
          in
          let d = depth - 1 in (match r with 
                                | 0 ->
                                  (buildAverage
                                      ((build (rand, d)), (build (rand, d))))
                                | 1 -> (buildCosine (build (rand, d)))
                                | 2 -> (buildSine (build (rand, d)))
                                | 3 ->
                                  (buildTimes
                                      ((build (rand, d)), (build (rand, d))))
                                | 4 ->
                                  (buildThresh
                                      ((build (rand, d)),
                                          (build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 5 ->
                                  (buildOp2
                                      ((build (rand, d)),
                                          (build (rand, d)), (build (rand, d))))
                                | 6 -> (buildSine (build (rand, d)))
                                | 7 -> (buildCosine (build (rand, d)))
                                | 8 -> (buildOp1 (build (rand, d)))
                                | 9 -> (buildSine (build (rand, d)))
                                | 10 -> (buildCosine (build (rand, d))))))
==============================
