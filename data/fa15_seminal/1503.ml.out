------------------------------------------------------------------
File "1503.ml", line 25, characters 8-23:
This pattern matches values of type 'a list * 'b list
but is here used to match values of type 'c list
Relevant code: (h1::t1,h2::t2)
------------------------------------------------------------------
Triaged the following locations:
File "1503.ml", line 31, characters 4-131:
And modified the following location:
File "1503.ml", line 25, characters 8-256:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (match a with 
     | [] -> (match x with 
              | (x1, x2) -> when (x1 + x2 <= 9) -> 0, x1 + x2 :: a
              | (x1, x2) -> when x1 + x2 > 9 -> 1, (x1 + x2) - 9 :: a)
     | (h1 :: t1, h2 :: t2) -> (match x with 
                                | (x1, x2) ->
                                  when ((x1 + x2) + h1 <= 9) ->
                                      0, (x1 + x2) + h1 :: h2 :: t2
                                | (x1, x2) ->
                                  when (x1 + x2) + h1 > 9 ->
                                      1, ((x1 + x2) + h1) - 9 :: h2 :: t2))
with
    (match a with 
     | [] -> (match x with 
              | (x1, x2) -> when (x1 + x2 <= 9) -> 0, x1 + x2 :: a
              | (x1, x2) -> when x1 + x2 > 9 -> 1, (x1 + x2) - 9 :: a)
     | _ -> [[...]])
The actual replacement has type
    (int * int) list
==============================
Triaged the following locations:
File "1503.ml", line 31, characters 4-131:
And modified the following location:
File "1503.ml", line 21, characters 8-171:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (match a with 
     | [] -> (match x with 
              | (x1, x2) -> when (x1 + x2 <= 9) -> 0, x1 + x2 :: a
              | (x1, x2) -> when x1 + x2 > 9 -> 1, (x1 + x2) - 9 :: a)
     | (h1 :: t1, h2 :: t2) -> (match x with 
                                | (x1, x2) ->
                                  when ((x1 + x2) + h1 <= 9) ->
                                      0, (x1 + x2) + h1 :: h2 :: t2
                                | (x1, x2) ->
                                  when (x1 + x2) + h1 > 9 ->
                                      1, ((x1 + x2) + h1) - 9 :: h2 :: t2))
with
    (match a with 
     | _ -> [[...]]
     | (h1 :: t1, h2 :: t2) -> (match x with 
                                | (x1, x2) ->
                                  when ((x1 + x2) + h1 <= 9) ->
                                      0, (x1 + x2) + h1 :: h2 :: t2
                                | (x1, x2) ->
                                  when (x1 + x2) + h1 > 9 ->
                                      1, ((x1 + x2) + h1) - 9 :: h2 :: t2))
The actual replacement has type
    (int * int) list
==============================
Triaged the following locations:
File "1503.ml", line 31, characters 4-131:
And modified the following location:
File "1503.ml", line 19, characters 4-598:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = (match a with 
                 | [] -> (match x with 
                          | (x1, x2) -> when (x1 + x2 <= 9) -> 0, x1 + x2 :: a
                          | (x1, x2) -> when x1 + x2 > 9 -> 1, (x1 + x2) - 9 :: a)
                 | (h1 :: t1, h2 :: t2) -> (match x with 
                                            | (x1, x2) ->
                                              when ((x1 + x2) + h1 <= 9) ->
                                                  0, (x1 + x2) + h1 :: h2 :: t2
                                            | (x1, x2) ->
                                              when (x1 + x2) + h1 > 9 ->
                                                  1, ((x1 + x2) + h1) - 9 ::
                                                        h2 ::
                                                        t2)) in let base = [] in
      let args = (List.combine (List.rev l1) (List.rev l2)) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'd
==============================
