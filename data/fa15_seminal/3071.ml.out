------------------------------------------------------------------
File "3071.ml", line 3, characters 18-19:
This expression has type 'a -> 'b -> 'c but is here used with type 'a
Relevant code: x
------------------------------------------------------------------
File "3071.ml", line 3, characters 16-19:
Try replacing
    (x x a)
with
    (x (x a))
of type
    'd
within context
    fun fs ->
      (let f a x a = (x (x a)) in let base x = x in (List.fold_left f base  fs))
==============================
File "3071.ml", line 3, characters 18-19:
Try replacing
    x
with
    a
of type
    'e
within context
    let f a x a = (x a a) in let base x = x in (List.fold_left f base  fs)
==============================
File "3071.ml", line 3, characters 18-19:
Try replacing
    x
with
    List.fold_left
of type
    ('f -> 'g -> 'f) -> 'f -> 'g list -> 'f
within context
    let f a x a = (x List.fold_left a) in
      let base x = x in (List.fold_left f base  fs)
==============================
