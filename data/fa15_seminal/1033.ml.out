------------------------------------------------------------------
File "1033.ml", line 23, characters 45-46:
This expression has type int but is here used with type 'a list
Relevant code: 0
------------------------------------------------------------------
Triaged the following locations:
File "1033.ml", line 23, characters 49-69:
And modified the following location:
File "1033.ml", line 23, characters 38-47:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    l1 :: 0
with
    [[...]]
The actual replacement has type
    'b list
within context
    fun (l1, l2) ->
      (let f a x =
          let (y, z) = a in
            let (r, s) = x in let m = (r + s) + y in m / 10, (mod m 10) :: z
          in
          let base = 0, [] in
          let args = (List.combine (List.rev [[...]]) [[...other program...]]) in
          let (_, res) = (List.fold_left f base  args) in res)
==============================
Triaged the following locations:
File "1033.ml", line 23, characters 28-48:
And modified the following location:
File "1033.ml", line 23, characters 59-68:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    l2 :: 0
with
    [[...]]
The actual replacement has type
    'c list
within context
    fun (l1, l2) ->
      (let f a x =
          let (y, z) = a in
            let (r, s) = x in let m = (r + s) + y in m / 10, (mod m 10) :: z
          in
          let base = 0, [] in
          let args = (List.combine [[...other program...]] (List.rev [[...]])) in
          let (_, res) = (List.fold_left f base  args) in res)
==============================
