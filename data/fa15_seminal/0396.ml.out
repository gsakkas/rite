------------------------------------------------------------------
File "0396.ml", line 8, characters 9-16:
This expression has type (int -> int) * 'a but is here used with type
  (int -> int * bool) * int
Relevant code: (fx, f)
------------------------------------------------------------------
File "0396.ml", line 8, characters 10-15:
Try replacing
    fx, f
with
    f, fx
of type
    ((int -> int) -> (int -> int) * bool) * (int -> int)
within context
    let fixpoint (f, b) =
    let fx b = (if b = 0 then 0 else (if b > 1 then b - 1 else b + 1)) in
      (wwhile (f, fx))
    ;; 
==============================
File "0396.ml", line 8, characters 2-8:
Try replacing
    wwhile
with
    b
of type
    (int -> int) * 'b -> 'c
within context
    let fixpoint (f, b) =
    let fx b = (if b = 0 then 0 else (if b > 1 then b - 1 else b + 1)) in
      (b (fx, f))
    ;; 
==============================
File "0396.ml", line 8, characters 2-8:
Try replacing
    wwhile
with
    =
of type
    (int -> int) * 'd -> (int -> int) * 'd -> bool
within context
    let fixpoint (f, b) =
    let fx b = (if b = 0 then 0 else (if b > 1 then b - 1 else b + 1)) in
      (= (fx, f))
    ;; 
==============================
File "0396.ml", line 8, characters 2-8:
Try replacing
    wwhile
with
    >
of type
    (int -> int) * 'e -> (int -> int) * 'e -> bool
within context
    let fixpoint (f, b) =
    let fx b = (if b = 0 then 0 else (if b > 1 then b - 1 else b + 1)) in
      (> (fx, f))
    ;; 
==============================
File "0396.ml", line 8, characters 10-12:
Try replacing
    fx
with
    b
of type
    ('f -> 'f * bool) * 'f
within context
    let fixpoint (f, b) =
    let fx b = (if b = 0 then 0 else (if b > 1 then b - 1 else b + 1)) in
      (wwhile (b, f))
    ;; 
==============================
