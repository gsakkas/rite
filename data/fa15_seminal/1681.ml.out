------------------------------------------------------------------
File "1681.ml", line 3, characters 63-64:
This expression has type int but is here used with type 'a list
Relevant code: x
------------------------------------------------------------------
File "1681.ml", line 3, characters 63-64:
Try replacing
    x
with
    x; [[...]]
of type
    'b list
within context
    let rec digitsOfInt n =
    (if n < 0 then [] else (let x = (mod n 10) in (digitsOfInt n) @ (x; [[...]])))
    ;; 
==============================
File "1681.ml", line 3, characters 61-62:
Try replacing
    @
with
    @; [[...]]
of type
    'c list -> int -> 'c list
within context
    let rec digitsOfInt n =
    (if n < 0 then [] else (let x = (mod n 10) in ((digitsOfInt n) @; [[...]] x)))
    ;; 
==============================
File "1681.ml", line 3, characters 33-41:
Try replacing
    (mod n 10)
with
    (mod n 10); [[...]]
of type
    'd
within context
    let rec digitsOfInt n =
    (if n < 0 then [] else (let x = (mod n 10); [[...]] in (digitsOfInt n) @ x))
    ;; 
==============================
