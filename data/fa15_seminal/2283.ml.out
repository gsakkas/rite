------------------------------------------------------------------
File "2283.ml", line 7, characters 51-52:
This expression has type string -> string -> string -> string
but is here used with type string -> string -> string
Relevant code: f
------------------------------------------------------------------
File "2283.ml", line 7, characters 36-50:
Try replacing
    List.fold_left
with
    sep
of type
    (string -> string -> string -> string) -> 'a -> 'a list -> string
within context
    (match sl with 
     | [] -> ""
     | h :: t ->
       (let f a x x' = a ^ (x' ^ x) in
             let base = h in let l = sl in (sep f base  l)))
==============================
File "2283.ml", line 7, characters 51-52:
Try replacing
    f
with
    ^
of type
    string -> string -> string
within context
    (match sl with 
     | [] -> ""
     | h :: t ->
       (let f a x x' = a ^ (x' ^ x) in
             let base = h in let l = sl in (List.fold_left ^ base  l)))
==============================
