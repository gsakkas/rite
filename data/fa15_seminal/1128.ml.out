------------------------------------------------------------------
File "1128.ml", line 24, characters 10-134:
This expression has type int * int list but is here used with type int * int
Relevant code: if ((fst x) + (snd x)) > 9
          then (1, [((fst x) + (snd x)) mod 10])
          else (0, [((fst x) + (snd x)) mod 10])
------------------------------------------------------------------
File "1128.ml", line 20, characters 10-152:
Try replacing
    (if ((fst x) + (snd x)) + a > 9 then 1, (mod (((fst x) + (snd x)) + a) 10) else
      0, (mod (((fst x) + (snd x)) + a) 10))
with
    (if ((fst x) + (snd x)) + a > 9 then 1, (mod (((fst x) + (snd x)) + a) 10) else
      0, (mod (((fst x) + (snd x)) + a) 10));
    [[...]]
of type
    int * int list
within context
    fun (l1, l2) -> (let f a x = (match a with 
                                  | (a, b) ->
                                    ((if ((fst x) + (snd x)) + a > 9 then
                                          1, (mod (((fst x) + (snd x)) + a) 10)
                                          else
                                          0, (mod (((fst x) + (snd x)) + a) 10));
                                        [[...]])
                                  | _ ->
                                    (if (fst x) + (snd x) > 9 then
                                        1, [(mod ((fst x) + (snd x)) 10)]
                                        else
                                        0,
                                          [(mod ((fst x) + (snd x)) 10)
                                              ])) in let base = 0, [] in
          let args = (List.rev (List.combine l1 l2)) in
          let (_, res) = (List.fold_left f base  args) in res)
==============================
