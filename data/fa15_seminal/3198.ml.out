------------------------------------------------------------------
File "3198.ml", line 32, characters 13-34:
This expression has type int list * int list but is here used with type
  int list
Relevant code: (add (padZero l1 l2))
------------------------------------------------------------------
File "3198.ml", line 32, characters 2-12:
Try replacing
    removeZero
with
    <
of type
    int list * int list -> int list * int list -> bool
within context
    let bigAdd l1 l2 =
    let add (l1, l2) =
      let f a x =
        let (x1, x2) = x in
          let (a1, a2) = a in
          let c :: c' = a1 in let v = (x1 + x2) + c in a1 @ [c + 1], a2 @ [c + 1]
        in
        let base = [9], [5] in
        let args = (List.combine l1 l2) in
        let (duh, res) = (List.fold_left f base  args) in duh, res
      in
      (< (add (padZero l1 l2)))
    ;; 
==============================
File "3198.ml", line 32, characters 2-12:
Try replacing
    removeZero
with
    >
of type
    int list * int list -> int list * int list -> bool
within context
    let bigAdd l1 l2 =
    let add (l1, l2) =
      let f a x =
        let (x1, x2) = x in
          let (a1, a2) = a in
          let c :: c' = a1 in let v = (x1 + x2) + c in a1 @ [c + 1], a2 @ [c + 1]
        in
        let base = [9], [5] in
        let args = (List.combine l1 l2) in
        let (duh, res) = (List.fold_left f base  args) in duh, res
      in
      (> (add (padZero l1 l2)))
    ;; 
==============================
File "3198.ml", line 32, characters 2-12:
Try replacing
    removeZero
with
    =
of type
    int list * int list -> int list * int list -> bool
within context
    let bigAdd l1 l2 =
    let add (l1, l2) =
      let f a x =
        let (x1, x2) = x in
          let (a1, a2) = a in
          let c :: c' = a1 in let v = (x1 + x2) + c in a1 @ [c + 1], a2 @ [c + 1]
        in
        let base = [9], [5] in
        let args = (List.combine l1 l2) in
        let (duh, res) = (List.fold_left f base  args) in duh, res
      in
      (= (add (padZero l1 l2)))
    ;; 
==============================
