------------------------------------------------------------------
File "2383.ml", line 23, characters 58-59:
This expression has type char but is here used with type 'a list
Relevant code: h
------------------------------------------------------------------
File "2383.ml", line 23, characters 57-65:
Try replacing
    h :: t
with
    h :: t; [[...]]
of type
    'b list list
within context
    let palindrome w = (match (explode w) with 
                        | [] -> true
                        | h :: t -> (matchHeads (h :: t; [[...]]))) ;; 
==============================
File "2383.ml", line 23, characters 8-17:
Try replacing
    (explode w)
with
    (explode w); [[...]]
of type
    'c list list
within context
    let palindrome w = (match ((explode w); [[...]]) with 
                        | [] -> true
                        | h :: t -> (matchHeads h :: t)) ;; 
==============================
File "2383.ml", line 23, characters 46-56:
Try replacing
    matchHeads
with
    matchHeads; [[...]]
of type
    char list -> bool
within context
    let palindrome w = (match (explode w) with 
                        | [] -> true
                        | h :: t -> ((matchHeads; [[...]]) h :: t)) ;; 
==============================
