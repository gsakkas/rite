------------------------------------------------------------------
File "3245.ml", line 3, characters 58-59:
This expression has type 'a -> 'b -> 'c -> 'd -> 'a
but is here used with type 'a -> 'b -> 'a
Relevant code: f
------------------------------------------------------------------
File "3245.ml", line 3, characters 8-11:
Try replacing
    fun a x y c -> a
with
    fun x a y c -> a
of type
    'e -> 'f -> 'g -> 'h -> 'f
within context
    let pipe fs =
    let f x a y c = a in let base g x = x in (List.fold_left f base  fs)
    ;; 
==============================
File "3245.ml", line 3, characters 10-15:
Try replacing
    fun x y c -> a
with
    fun (x, y, c) -> a
of type
    'i * 'j * 'k -> 'l
within context
    let pipe fs =
    let f a (x, y, c) = a in let base g x = x in (List.fold_left f base  fs)
    ;; 
==============================
File "3245.ml", line 3, characters 58-64:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left base f  fs)
of type
    'm -> 'n -> 'o -> 'p -> 'm
within context
    let pipe fs =
    let f a x y c = a in let base g x = x in (List.fold_left base f  fs)
    ;; 
==============================
File "3245.ml", line 3, characters 43-59:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left (f base fs))
of type
    ('q -> 'r -> 'r) -> 's list -> 'q -> 'r -> 'r
within context
    let pipe fs =
    let f a x y c = a in let base g x = x in (List.fold_left (f base fs))
    ;; 
==============================
File "3245.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    base
of type
    ('t -> 'u -> 'v -> 'w -> 't) -> ('x -> 'y -> 'y) -> 'x -> 'y -> 'y
within context
    let pipe fs = let f a x y c = a in let base g x = x in (base f base  fs) ;; 
==============================
File "3245.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    f
of type
    ('z -> 'a1 -> 'b1 -> 'c1 -> 'z) ->
    ('d1 -> 'e1 -> 'e1) -> 'f1 -> 'g1 -> 'z -> 'a1 -> 'b1 -> 'c1 -> 'z
within context
    let pipe fs = let f a x y c = a in let base g x = x in (f f base  fs) ;; 
==============================
File "3245.ml", line 3, characters 18-19:
Try replacing
    a
with
    fs
of type
    'h1 list
within context
    let f a x y c = fs in let base g x = x in (List.fold_left f base  fs)
==============================
File "3245.ml", line 3, characters 18-19:
Try replacing
    a
with
    x
of type
    'i1
within context
    let f a x y c = x in let base g x = x in (List.fold_left f base  fs)
==============================
File "3245.ml", line 3, characters 18-19:
Try replacing
    a
with
    c
of type
    'j1
within context
    let f a x y c = c in let base g x = x in (List.fold_left f base  fs)
==============================
File "3245.ml", line 3, characters 18-19:
Try replacing
    a
with
    y
of type
    'k1
within context
    let f a x y c = y in let base g x = x in (List.fold_left f base  fs)
==============================
File "3245.ml", line 3, characters 58-59:
Try replacing
    f
with
    base
of type
    ('l1 -> 'm1 -> 'm1) -> ('l1 -> 'm1 -> 'm1) -> 'l1 -> 'm1 -> 'm1
within context
    let pipe fs =
    let f a x y c = a in let base g x = x in (List.fold_left base base  fs)
    ;; 
==============================
