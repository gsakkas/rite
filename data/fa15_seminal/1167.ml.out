------------------------------------------------------------------
File "1167.ml", line 5, characters 57-58:
This expression has type 'a * 'b but is here used with type
  ('a * 'b) list list
Relevant code: l
------------------------------------------------------------------
File "1167.ml", line 5, characters 38-60:
Try replacing
    (if (k, d) = l then d else (assoc (d, k, t :: l)))
with
    (if (k, d) = l then d)
of type
    unit
within context
    let rec assoc (d, k, l) = (match [k, d] with 
                               | [] -> d
                               | h :: t -> (if (k, d) = l then d)) ;; 
==============================
File "1167.ml", line 5, characters 24-25:
Try replacing
    l
with
    h
of type
    'c * 'd
within context
    let rec assoc (d, k, l) = (match [k, d] with 
                               | [] -> d
                               | h :: t ->
                                 (if (k, d) = h then d else
                                     (assoc (d, k, t :: l)))) ;; 
==============================
