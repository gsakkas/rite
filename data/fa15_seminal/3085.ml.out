------------------------------------------------------------------
File "3085.ml", line 19, characters 23-63:
This expression has type float but is here used with type int
Relevant code: ((eval (x3, x, y)) +. (eval (x4, x, y)))
------------------------------------------------------------------
File "3085.ml", line 19, characters 64-65:
Try replacing
    /
with
    /; [[...]]
of type
    float -> int -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine x1 -> (sin (pi *. (eval (x1, x, y))))
                              | Cosine x2 -> (cos (pi *. (eval (x2, x, y))))
                              | Average (x3, x4) ->
                                (((eval (x3, x, y)) +. (eval (x4, x, y)))
                                      /; [[...]] 2)
                              | Times (x5, x6) ->
                                ((eval (x5, x, y)) *. (eval (x6, x, y)))
                              | Thresh (x7, x8, x9, x0) ->
                                (if (eval (x7, x, y)) < (eval (x8, x, y)) then
                                    (eval (x9, x, y))
                                    else
                                    (eval (x0, x, y)))) ;; 
==============================
Triaged the following locations:
File "3085.ml", line 17, characters 15-44:
File "3085.ml", line 18, characters 17-46:
File "3085.ml", line 20, characters 21-59:
File "3085.ml", line 22, characters 6-100:
And modified the following location:
File "3085.ml", line 19, characters 42-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    +.
with
    +.; [[...]]
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine x1 -> [[...other program...]]
                              | Cosine x2 -> [[...other program...]]
                              | Average (x3, x4) ->
                                ((eval (x3, x, y)) +.; [[...]] (eval (x4, x, y)))
                                    / 2
                              | Times (x5, x6) -> [[...other program...]]
                              | Thresh (x7, x8, x9, x0) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "3085.ml", line 17, characters 15-44:
File "3085.ml", line 18, characters 17-46:
File "3085.ml", line 20, characters 21-59:
File "3085.ml", line 22, characters 6-100:
And modified the following location:
File "3085.ml", line 19, characters 42-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    +.
with
    /
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine x1 -> [[...other program...]]
                              | Cosine x2 -> [[...other program...]]
                              | Average (x3, x4) ->
                                ((eval (x3, x, y)) / (eval (x4, x, y))) / 2
                              | Times (x5, x6) -> [[...other program...]]
                              | Thresh (x7, x8, x9, x0) ->
                                [[...other program...]]) ;; 
==============================
