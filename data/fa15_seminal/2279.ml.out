------------------------------------------------------------------
File "2279.ml", line 3, characters 58-59:
This expression has type 'a -> 'b -> ('a -> 'c) -> 'c
but is here used with type 'a -> 'b -> 'a
Relevant code: f
------------------------------------------------------------------
File "2279.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    base
of type
    (('d -> 'd) -> 'e -> (('d -> 'd) -> 'f) -> 'f) ->
    ('d -> 'd) -> 'e -> (('d -> 'd) -> 'f) -> 'f
within context
    let pipe fs = let f a x x' = (x' a) in let base x = x in (base f base  fs) ;; 
==============================
File "2279.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    f
of type
    ('g -> 'h -> ('g -> 'i) -> 'i) ->
    ('j -> 'j) -> (('g -> 'h -> ('g -> 'i) -> 'i) -> 'k) -> 'k
within context
    let pipe fs = let f a x x' = (x' a) in let base x = x in (f f base  fs) ;; 
==============================
File "2279.ml", line 3, characters 17-19:
Try replacing
    x'
with
    x
of type
    'l -> 'm
within context
    let f a x x' = (x a) in let base x = x in (List.fold_left f base  fs)
==============================
