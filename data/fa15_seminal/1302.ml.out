------------------------------------------------------------------
File "1302.ml", line 22, characters 26-27:
This expression has type 'a * 'b but is here used with type int
Relevant code: a
------------------------------------------------------------------
File "1302.ml", line 22, characters 26-27:
Try replacing
    a
with
    a; [[...]]
of type
    int
within context
    fun x ->
      (let (x1, x2) = x in
          let (carry, temp) = a in
          let s = (x1 + x2) + (a; [[...]]) in
          let carry' = s / 10 in
          let rem = (mod s 10) in
          let acc = rem :: temp in
          (if (List.length acc) = (List.length l1) then 0, carry' :: acc else
              carry', acc))
==============================
File "1302.ml", line 22, characters 24-25:
Try replacing
    +
with
    +; [[...]]
of type
    int -> 'c * int list -> 'd
within context
    fun x ->
      (let (x1, x2) = x in
          let (carry, temp) = a in
          let s = (x1 + x2 +; [[...]] a) in
          let carry' = s / 10 in
          let rem = (mod s 10) in
          let acc = rem :: temp in
          (if (List.length acc) = (List.length l1) then 0, carry' :: acc else
              carry', acc))
==============================
