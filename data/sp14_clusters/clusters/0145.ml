ConAppG (Just (TupleG [BopG (BopG (BopG VarG VarG) VarG) LitG,VarG])) Nothing
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((c + x') + x'') mod 10) :: s
(((o + x1) + x2) mod 10) :: z
(((o + x1) + x2) mod 10) :: z
(((o + x1) + x2) mod 10) :: z
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((add1 + add2) + carry) mod 10) :: rest
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((i + j) + s) mod 10) :: t
(((c + x1) + x2) mod 10) :: ds
