
let rec listReverse l =
  match l with | [] -> [] | h::t -> (listReverse t) @ [h];;

let rec digitsOfInt n =
  if n <= 0 then [] else [n mod 10] @ (listReverse digitsOfInt (n / 10));;


(* fix

let rec listReverse l =
  match l with | [] -> [] | h::t -> (listReverse t) @ [h];;

let rec digitsOfInt n =
  if n <= 0 then [] else (listReverse [n mod 10]) @ (digitsOfInt (n / 10));;

*)

(* changed spans
(6,25)-(6,35)
(6,38)-(6,72)
(6,39)-(6,50)
*)

(* type error slice
(3,36)-(3,51)
(3,36)-(3,57)
(3,37)-(3,48)
(3,52)-(3,53)
(6,38)-(6,72)
(6,39)-(6,50)
*)

(* all spans
(2,20)-(3,57)
(3,2)-(3,57)
(3,8)-(3,9)
(3,23)-(3,25)
(3,36)-(3,57)
(3,52)-(3,53)
(3,36)-(3,51)
(3,37)-(3,48)
(3,49)-(3,50)
(3,54)-(3,57)
(3,55)-(3,56)
(5,20)-(6,72)
(6,2)-(6,72)
(6,5)-(6,11)
(6,5)-(6,6)
(6,10)-(6,11)
(6,17)-(6,19)
(6,25)-(6,72)
(6,36)-(6,37)
(6,25)-(6,35)
(6,26)-(6,34)
(6,26)-(6,27)
(6,32)-(6,34)
(6,38)-(6,72)
(6,39)-(6,50)
(6,51)-(6,62)
(6,63)-(6,71)
(6,64)-(6,65)
(6,68)-(6,70)
*)
