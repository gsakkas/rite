
let rec listReverse l =
  match l with | [] -> [] | h::t -> (listReverse t) @ [h];;

let rec digitsOfInt n =
  if n <= 0
  then []
  else (let n2 = [n mod 10] @ ((digitsOfInt n) / 10) in listReverse n2);;


(* fix

let rec listReverse l =
  match l with | [] -> [] | h::t -> (listReverse t) @ [h];;

let rec digitsOfInt n =
  if n <= 0
  then []
  else (let n2 = [n mod 10] @ (digitsOfInt (n / 10)) in listReverse n2);;

*)

(* changed spans
(8,30)-(8,52)
(8,44)-(8,45)
*)

(* type error slice
(5,3)-(8,73)
(5,20)-(8,71)
(6,2)-(8,71)
(7,7)-(7,9)
(8,17)-(8,52)
(8,28)-(8,29)
(8,30)-(8,52)
(8,31)-(8,46)
(8,32)-(8,43)
*)

(* all spans
(2,20)-(3,57)
(3,2)-(3,57)
(3,8)-(3,9)
(3,23)-(3,25)
(3,36)-(3,57)
(3,52)-(3,53)
(3,36)-(3,51)
(3,37)-(3,48)
(3,49)-(3,50)
(3,54)-(3,57)
(3,55)-(3,56)
(5,20)-(8,71)
(6,2)-(8,71)
(6,5)-(6,11)
(6,5)-(6,6)
(6,10)-(6,11)
(7,7)-(7,9)
(8,7)-(8,71)
(8,17)-(8,52)
(8,28)-(8,29)
(8,17)-(8,27)
(8,18)-(8,26)
(8,18)-(8,19)
(8,24)-(8,26)
(8,30)-(8,52)
(8,31)-(8,46)
(8,32)-(8,43)
(8,44)-(8,45)
(8,49)-(8,51)
(8,56)-(8,70)
(8,56)-(8,67)
(8,68)-(8,70)
*)
