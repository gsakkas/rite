
let rec clone x n =
  match n > 0 with | false  -> [] | true  -> x :: (clone x (n - 1));;

let padZero l1 l2 =
  match (List.length l1) = (List.length l2) with
  | true  -> (l1, l2)
  | false  ->
      let lendiff = (List.length l1) - (List.length l2) in
      (match lendiff > 0 with
       | true  -> (l1, ((clone 0 lendiff) @ l2))
       | false  -> ((((clone 0) - lendiff) @ l1), l2));;


(* fix

let rec clone x n =
  match n > 0 with | false  -> [] | true  -> x :: (clone x (n - 1));;

let padZero l1 l2 =
  match (List.length l1) = (List.length l2) with
  | true  -> (l1, l2)
  | false  ->
      let lendiff = (List.length l1) - (List.length l2) in
      (match lendiff > 0 with
       | true  -> (l1, ((clone 0 lendiff) @ l2))
       | false  -> (((clone 0 (- lendiff)) @ l1), l2));;

*)

(* changed spans
(12,21)-(12,42)
(12,22)-(12,31)
(12,34)-(12,41)
*)

(* type error slice
(11,24)-(11,41)
(11,25)-(11,30)
(12,20)-(12,48)
(12,21)-(12,42)
(12,22)-(12,31)
(12,23)-(12,28)
(12,43)-(12,44)
*)

(* all spans
(2,14)-(3,67)
(2,16)-(3,67)
(3,2)-(3,67)
(3,8)-(3,13)
(3,8)-(3,9)
(3,12)-(3,13)
(3,31)-(3,33)
(3,45)-(3,67)
(3,45)-(3,46)
(3,50)-(3,67)
(3,51)-(3,56)
(3,57)-(3,58)
(3,59)-(3,66)
(3,60)-(3,61)
(3,64)-(3,65)
(5,12)-(12,54)
(5,15)-(12,54)
(6,2)-(12,54)
(6,8)-(6,43)
(6,8)-(6,24)
(6,9)-(6,20)
(6,21)-(6,23)
(6,27)-(6,43)
(6,28)-(6,39)
(6,40)-(6,42)
(7,13)-(7,21)
(7,14)-(7,16)
(7,18)-(7,20)
(9,6)-(12,54)
(9,20)-(9,55)
(9,20)-(9,36)
(9,21)-(9,32)
(9,33)-(9,35)
(9,39)-(9,55)
(9,40)-(9,51)
(9,52)-(9,54)
(10,6)-(12,54)
(10,13)-(10,24)
(10,13)-(10,20)
(10,23)-(10,24)
(11,18)-(11,48)
(11,19)-(11,21)
(11,23)-(11,47)
(11,42)-(11,43)
(11,24)-(11,41)
(11,25)-(11,30)
(11,31)-(11,32)
(11,33)-(11,40)
(11,44)-(11,46)
(12,19)-(12,53)
(12,20)-(12,48)
(12,43)-(12,44)
(12,21)-(12,42)
(12,22)-(12,31)
(12,23)-(12,28)
(12,29)-(12,30)
(12,34)-(12,41)
(12,45)-(12,47)
(12,50)-(12,52)
*)
