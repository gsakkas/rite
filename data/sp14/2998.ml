
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l1) - (List.length l2) in
  if diff >= 0
  then (l1, ((clone 0 diff) @ l2))
  else ((((clone 0) - diff) @ l1), l2);;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l1) - (List.length l2) in
  if diff >= 0
  then (l1, ((clone 0 diff) @ l2))
  else (((clone 0 (abs diff)) @ l1), l2);;

*)

(* changed spans
(8,9)-(8,27)
(8,10)-(8,19)
(8,22)-(8,26)
*)

(* type error slice
(7,13)-(7,27)
(7,14)-(7,19)
(8,8)-(8,33)
(8,9)-(8,27)
(8,10)-(8,19)
(8,11)-(8,16)
(8,28)-(8,29)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,65)
(2,43)-(2,44)
(2,48)-(2,65)
(2,49)-(2,54)
(2,55)-(2,56)
(2,57)-(2,64)
(2,58)-(2,59)
(2,62)-(2,63)
(4,12)-(8,38)
(4,15)-(8,38)
(5,2)-(8,38)
(5,13)-(5,48)
(5,13)-(5,29)
(5,14)-(5,25)
(5,26)-(5,28)
(5,32)-(5,48)
(5,33)-(5,44)
(5,45)-(5,47)
(6,2)-(8,38)
(6,5)-(6,14)
(6,5)-(6,9)
(6,13)-(6,14)
(7,7)-(7,34)
(7,8)-(7,10)
(7,12)-(7,33)
(7,28)-(7,29)
(7,13)-(7,27)
(7,14)-(7,19)
(7,20)-(7,21)
(7,22)-(7,26)
(7,30)-(7,32)
(8,7)-(8,38)
(8,8)-(8,33)
(8,28)-(8,29)
(8,9)-(8,27)
(8,10)-(8,19)
(8,11)-(8,16)
(8,17)-(8,18)
(8,22)-(8,26)
(8,30)-(8,32)
(8,35)-(8,37)
*)
