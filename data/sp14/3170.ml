
let clone x n =
  let rec helper x n acc =
    if n <= 0 then acc else helper x (n - 1) (x :: acc) in
  helper x n [];;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then (((List.append clone 0 ((List.length l2) - (List.length l1))) l1), l2)
  else (l1, (List.append (clone 0 ((List.length l1) - (List.length l2))) l2));;


(* fix

let clone x n =
  let rec helper x n acc =
    if n <= 0 then acc else helper x (n - 1) (x :: acc) in
  helper x n [];;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then ((List.append (clone 0 ((List.length l2) - (List.length l1))) l1), l2)
  else (l1, (List.append (clone 0 ((List.length l1) - (List.length l2))) l2));;

*)

(* changed spans
(9,8)-(9,72)
(9,9)-(9,68)
(9,22)-(9,27)
*)

(* type error slice
(9,9)-(9,68)
(9,10)-(9,21)
*)

(* all spans
(2,10)-(5,15)
(2,12)-(5,15)
(3,2)-(5,15)
(3,17)-(4,55)
(3,19)-(4,55)
(3,21)-(4,55)
(4,4)-(4,55)
(4,7)-(4,13)
(4,7)-(4,8)
(4,12)-(4,13)
(4,19)-(4,22)
(4,28)-(4,55)
(4,28)-(4,34)
(4,35)-(4,36)
(4,37)-(4,44)
(4,38)-(4,39)
(4,42)-(4,43)
(4,45)-(4,55)
(4,46)-(4,47)
(4,51)-(4,54)
(5,2)-(5,15)
(5,2)-(5,8)
(5,9)-(5,10)
(5,11)-(5,12)
(5,13)-(5,15)
(7,12)-(10,77)
(7,15)-(10,77)
(8,2)-(10,77)
(8,5)-(8,40)
(8,5)-(8,21)
(8,6)-(8,17)
(8,18)-(8,20)
(8,24)-(8,40)
(8,25)-(8,36)
(8,37)-(8,39)
(9,7)-(9,77)
(9,8)-(9,72)
(9,9)-(9,68)
(9,10)-(9,21)
(9,22)-(9,27)
(9,28)-(9,29)
(9,30)-(9,67)
(9,31)-(9,47)
(9,32)-(9,43)
(9,44)-(9,46)
(9,50)-(9,66)
(9,51)-(9,62)
(9,63)-(9,65)
(9,69)-(9,71)
(9,74)-(9,76)
(10,7)-(10,77)
(10,8)-(10,10)
(10,12)-(10,76)
(10,13)-(10,24)
(10,25)-(10,72)
(10,26)-(10,31)
(10,32)-(10,33)
(10,34)-(10,71)
(10,35)-(10,51)
(10,36)-(10,47)
(10,48)-(10,50)
(10,54)-(10,70)
(10,55)-(10,66)
(10,67)-(10,69)
(10,73)-(10,75)
*)
