
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l2) - (List.length l1) in
  (((clone 0 diff) @ l1), ((clone 0 (- diff)) @ l2));;

let rec removeZero l =
  match l with | [] -> l | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      match a with
      | ([],[]) ->
          let (carry,num) = x in
          (0, (if carry > 0 then carry :: num else num))
      | (l1,l2) ->
          (match x with
           | (carry,num) ->
               let addit = ((List.hd l1) + (List.hd l2)) + carry in
               if addit > 10 then addit mod 10 else (0, ((addit / 10) :: x))) in
    let base = (0, 0) in
    let args = List.combine l1 l2 in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l2) - (List.length l1) in
  (((clone 0 diff) @ l1), ((clone 0 (- diff)) @ l2));;

let rec removeZero l =
  match l with | [] -> l | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let (carry,num) = a in
      let (l1',l2') = x in
      let addit = (l1' + l2') + carry in
      ((if addit > 10 then addit mod 10 else 0), ((addit / 10) :: num)) in
    let base = (0, []) in
    let args = List.combine l1 l2 in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

*)

(* changed spans
(14,6)-(22,77)
(14,12)-(14,13)
(16,28)-(16,29)
(17,10)-(17,56)
(17,11)-(17,12)
(17,14)-(17,55)
(17,18)-(17,23)
(17,18)-(17,27)
(17,26)-(17,27)
(17,33)-(17,38)
(17,33)-(17,45)
(17,42)-(17,45)
(17,51)-(17,54)
(19,10)-(22,77)
(19,17)-(19,18)
(21,28)-(21,40)
(21,29)-(21,36)
(21,37)-(21,39)
(21,43)-(21,55)
(21,44)-(21,51)
(21,52)-(21,54)
(21,59)-(21,64)
(22,15)-(22,76)
(22,52)-(22,76)
(22,73)-(22,74)
(23,19)-(23,20)
*)

(* type error slice
(13,4)-(25,51)
(13,10)-(22,77)
(13,12)-(22,77)
(14,6)-(22,77)
(14,12)-(14,13)
(16,10)-(17,56)
(16,28)-(16,29)
(17,10)-(17,56)
(17,11)-(17,12)
(21,28)-(21,40)
(21,29)-(21,36)
(21,37)-(21,39)
(22,15)-(22,76)
(22,34)-(22,46)
(22,52)-(22,76)
(22,56)-(22,75)
(22,73)-(22,74)
(25,18)-(25,32)
(25,18)-(25,44)
(25,33)-(25,34)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,65)
(2,43)-(2,44)
(2,48)-(2,65)
(2,49)-(2,54)
(2,55)-(2,56)
(2,57)-(2,64)
(2,58)-(2,59)
(2,62)-(2,63)
(4,12)-(6,52)
(4,15)-(6,52)
(5,2)-(6,52)
(5,13)-(5,48)
(5,13)-(5,29)
(5,14)-(5,25)
(5,26)-(5,28)
(5,32)-(5,48)
(5,33)-(5,44)
(5,45)-(5,47)
(6,2)-(6,52)
(6,3)-(6,24)
(6,19)-(6,20)
(6,4)-(6,18)
(6,5)-(6,10)
(6,11)-(6,12)
(6,13)-(6,17)
(6,21)-(6,23)
(6,26)-(6,51)
(6,46)-(6,47)
(6,27)-(6,45)
(6,28)-(6,33)
(6,34)-(6,35)
(6,36)-(6,44)
(6,39)-(6,43)
(6,48)-(6,50)
(8,19)-(9,68)
(9,2)-(9,68)
(9,8)-(9,9)
(9,23)-(9,24)
(9,35)-(9,68)
(9,38)-(9,43)
(9,38)-(9,39)
(9,42)-(9,43)
(9,49)-(9,61)
(9,49)-(9,59)
(9,60)-(9,61)
(9,67)-(9,68)
(11,11)-(26,34)
(11,14)-(26,34)
(12,2)-(26,34)
(12,11)-(25,51)
(13,4)-(25,51)
(13,10)-(22,77)
(13,12)-(22,77)
(14,6)-(22,77)
(14,12)-(14,13)
(16,10)-(17,56)
(16,28)-(16,29)
(17,10)-(17,56)
(17,11)-(17,12)
(17,14)-(17,55)
(17,18)-(17,27)
(17,18)-(17,23)
(17,26)-(17,27)
(17,33)-(17,45)
(17,33)-(17,38)
(17,42)-(17,45)
(17,51)-(17,54)
(19,10)-(22,77)
(19,17)-(19,18)
(21,15)-(22,76)
(21,27)-(21,64)
(21,27)-(21,56)
(21,28)-(21,40)
(21,29)-(21,36)
(21,37)-(21,39)
(21,43)-(21,55)
(21,44)-(21,51)
(21,52)-(21,54)
(21,59)-(21,64)
(22,15)-(22,76)
(22,18)-(22,28)
(22,18)-(22,23)
(22,26)-(22,28)
(22,34)-(22,46)
(22,34)-(22,39)
(22,44)-(22,46)
(22,52)-(22,76)
(22,53)-(22,54)
(22,56)-(22,75)
(22,57)-(22,69)
(22,58)-(22,63)
(22,66)-(22,68)
(22,73)-(22,74)
(23,4)-(25,51)
(23,15)-(23,21)
(23,16)-(23,17)
(23,19)-(23,20)
(24,4)-(25,51)
(24,15)-(24,33)
(24,15)-(24,27)
(24,28)-(24,30)
(24,31)-(24,33)
(25,4)-(25,51)
(25,18)-(25,44)
(25,18)-(25,32)
(25,33)-(25,34)
(25,35)-(25,39)
(25,40)-(25,44)
(25,48)-(25,51)
(26,2)-(26,34)
(26,2)-(26,12)
(26,13)-(26,34)
(26,14)-(26,17)
(26,18)-(26,33)
(26,19)-(26,26)
(26,27)-(26,29)
(26,30)-(26,32)
*)
