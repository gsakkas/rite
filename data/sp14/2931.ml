
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match rand depth with
  | (r,depth) ->
      (match r (0, 6) with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (r, (depth - 1)))
       | 3 -> buildCosine (build (r, (depth - 1)))
       | 4 ->
           buildAverage ((build (r, (depth - 1))), (build (r, (depth - 1))))
       | 5 -> buildTimes ((build (r, (depth - 1))), (build (r, (depth - 1))))
       | 6 ->
           buildThresh
             ((build (r, (depth - 1))), (build (r, (depth - 1))),
               (build (r, (depth - 1))), (build (r, (depth - 1)))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match (rand, depth) with
  | (r,0) -> if (r (0, 1)) = 0 then buildX () else buildY ()
  | (r,depth) ->
      let r = rand (0, 7) in
      (match r with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (rand, (depth - 1)))
       | 3 -> buildCosine (build (rand, (depth - 1)))
       | 4 ->
           buildAverage
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 5 ->
           buildTimes
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | _ ->
           buildThresh
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1))), (build (rand, (depth - 1)))));;

*)

(* changed spans
(26,2)-(39,67)
(26,8)-(26,12)
(26,8)-(26,18)
(28,6)-(39,67)
(28,13)-(28,21)
(28,19)-(28,20)
(29,14)-(29,23)
(31,14)-(31,23)
(31,14)-(31,48)
(31,32)-(31,33)
(32,34)-(32,35)
(34,33)-(34,34)
(34,59)-(34,60)
(35,34)-(35,35)
(35,60)-(35,61)
(38,22)-(38,23)
(38,48)-(38,49)
(39,23)-(39,24)
(39,49)-(39,50)
*)

(* type error slice
(25,3)-(39,69)
(25,15)-(39,67)
(26,8)-(26,12)
(26,8)-(26,18)
(26,13)-(26,18)
(28,13)-(28,14)
(28,13)-(28,21)
(28,15)-(28,21)
(31,24)-(31,48)
(31,25)-(31,30)
(31,31)-(31,47)
(31,32)-(31,33)
(31,35)-(31,46)
*)

(* all spans
(11,18)-(11,43)
(11,27)-(11,43)
(11,36)-(11,38)
(11,40)-(11,42)
(13,16)-(13,28)
(13,20)-(13,28)
(13,27)-(13,28)
(15,14)-(15,24)
(15,18)-(15,24)
(15,23)-(15,24)
(17,17)-(17,67)
(17,38)-(17,67)
(17,46)-(17,47)
(17,49)-(17,50)
(17,52)-(17,58)
(17,60)-(17,66)
(19,16)-(19,39)
(19,25)-(19,39)
(19,32)-(19,34)
(19,36)-(19,38)
(21,11)-(21,20)
(21,16)-(21,20)
(23,11)-(23,20)
(23,16)-(23,20)
(25,15)-(39,67)
(26,2)-(39,67)
(26,8)-(26,18)
(26,8)-(26,12)
(26,13)-(26,18)
(28,6)-(39,67)
(28,13)-(28,21)
(28,13)-(28,14)
(28,15)-(28,21)
(28,16)-(28,17)
(28,19)-(28,20)
(29,14)-(29,23)
(29,14)-(29,20)
(29,21)-(29,23)
(30,14)-(30,23)
(30,14)-(30,20)
(30,21)-(30,23)
(31,14)-(31,48)
(31,14)-(31,23)
(31,24)-(31,48)
(31,25)-(31,30)
(31,31)-(31,47)
(31,32)-(31,33)
(31,35)-(31,46)
(31,36)-(31,41)
(31,44)-(31,45)
(32,14)-(32,50)
(32,14)-(32,25)
(32,26)-(32,50)
(32,27)-(32,32)
(32,33)-(32,49)
(32,34)-(32,35)
(32,37)-(32,48)
(32,38)-(32,43)
(32,46)-(32,47)
(34,11)-(34,76)
(34,11)-(34,23)
(34,24)-(34,76)
(34,25)-(34,49)
(34,26)-(34,31)
(34,32)-(34,48)
(34,33)-(34,34)
(34,36)-(34,47)
(34,37)-(34,42)
(34,45)-(34,46)
(34,51)-(34,75)
(34,52)-(34,57)
(34,58)-(34,74)
(34,59)-(34,60)
(34,62)-(34,73)
(34,63)-(34,68)
(34,71)-(34,72)
(35,14)-(35,77)
(35,14)-(35,24)
(35,25)-(35,77)
(35,26)-(35,50)
(35,27)-(35,32)
(35,33)-(35,49)
(35,34)-(35,35)
(35,37)-(35,48)
(35,38)-(35,43)
(35,46)-(35,47)
(35,52)-(35,76)
(35,53)-(35,58)
(35,59)-(35,75)
(35,60)-(35,61)
(35,63)-(35,74)
(35,64)-(35,69)
(35,72)-(35,73)
(37,11)-(39,66)
(37,11)-(37,22)
(38,13)-(39,66)
(38,14)-(38,38)
(38,15)-(38,20)
(38,21)-(38,37)
(38,22)-(38,23)
(38,25)-(38,36)
(38,26)-(38,31)
(38,34)-(38,35)
(38,40)-(38,64)
(38,41)-(38,46)
(38,47)-(38,63)
(38,48)-(38,49)
(38,51)-(38,62)
(38,52)-(38,57)
(38,60)-(38,61)
(39,15)-(39,39)
(39,16)-(39,21)
(39,22)-(39,38)
(39,23)-(39,24)
(39,26)-(39,37)
(39,27)-(39,32)
(39,35)-(39,36)
(39,41)-(39,65)
(39,42)-(39,47)
(39,48)-(39,64)
(39,49)-(39,50)
(39,52)-(39,63)
(39,53)-(39,58)
(39,61)-(39,62)
*)
