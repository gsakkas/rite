
let rec assoc (d,k,l) =
  match (d, k, l) with
  | [] -> 0
  | (d,k,l) ->
      if l = []
      then d
      else
        (match l with
         | h::t ->
             (match h with | (a,b) -> if a = k then b else assoc (d, k, t)));;


(* fix

let rec assoc (d,k,l) =
  match (d, k, l) with
  | (d,k,l) ->
      if l = []
      then d
      else
        (match l with
         | h::t ->
             (match h with | (a,b) -> if a = k then b else assoc (d, k, t)));;

*)

(* changed spans
(3,2)-(11,76)
(4,10)-(4,11)
*)

(* type error slice
(3,2)-(11,76)
(3,8)-(3,17)
*)

(* all spans
(2,15)-(11,76)
(3,2)-(11,76)
(3,8)-(3,17)
(3,9)-(3,10)
(3,12)-(3,13)
(3,15)-(3,16)
(4,10)-(4,11)
(6,6)-(11,76)
(6,9)-(6,15)
(6,9)-(6,10)
(6,13)-(6,15)
(7,11)-(7,12)
(9,8)-(11,76)
(9,15)-(9,16)
(11,13)-(11,75)
(11,20)-(11,21)
(11,38)-(11,74)
(11,41)-(11,46)
(11,41)-(11,42)
(11,45)-(11,46)
(11,52)-(11,53)
(11,59)-(11,74)
(11,59)-(11,64)
(11,65)-(11,74)
(11,66)-(11,67)
(11,69)-(11,70)
(11,72)-(11,73)
*)
