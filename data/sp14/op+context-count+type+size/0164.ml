
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Op1 of expr
  | Op2 of expr* expr* expr;;

let buildOp2 (a,b,a_less,b_less) = Op2 (a, b, a_less);;

let buildSine e = Sine e;;

let buildX () = VarX;;

let rec build (rand,depth) =
  if depth > (-1)
  then
    let randNum = rand (1, 2) in
    let randNum2 = rand (3, 4) in
    (if (randNum = 1) && (randNum2 = 3)
     then buildX ()
     else
       if (randNum = 1) && (randNum2 = 4)
       then
         buildSine
           (buildOp2
              ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
                (build (rand, (depth - 1))))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Op1 of expr
  | Op2 of expr* expr* expr;;

let buildSine e = Sine e;;

let buildX () = VarX;;

let rec build (rand,depth) =
  if depth = 0 then buildSine (buildX ()) else buildX ();;

*)

(* changed spans
(13,14)-(13,53)
(13,35)-(13,53)
(13,40)-(13,41)
(13,43)-(13,44)
(13,46)-(13,52)
(20,5)-(20,17)
(20,13)-(20,17)
(22,4)-(32,46)
(22,18)-(22,22)
(22,23)-(22,29)
(22,27)-(22,28)
(23,4)-(32,46)
*)

(* type error slice
(13,3)-(13,55)
(13,14)-(13,53)
(15,3)-(15,26)
(15,14)-(15,24)
(15,18)-(15,24)
(17,3)-(17,22)
(17,11)-(17,20)
(17,16)-(17,20)
(20,2)-(32,46)
(20,2)-(32,46)
(20,2)-(32,46)
(22,4)-(32,46)
(23,4)-(32,46)
(24,4)-(32,46)
(25,10)-(25,16)
(25,10)-(25,19)
(27,7)-(32,45)
(27,7)-(32,45)
(27,7)-(32,45)
(29,9)-(29,18)
(29,9)-(32,45)
(30,11)-(32,45)
(30,12)-(30,20)
(31,14)-(32,44)
*)

(* all spans
(13,14)-(13,53)
(13,35)-(13,53)
(13,40)-(13,41)
(13,43)-(13,44)
(13,46)-(13,52)
(15,14)-(15,24)
(15,18)-(15,24)
(15,23)-(15,24)
(17,11)-(17,20)
(17,16)-(17,20)
(19,15)-(32,46)
(20,2)-(32,46)
(20,5)-(20,17)
(20,5)-(20,10)
(20,13)-(20,17)
(22,4)-(32,46)
(22,18)-(22,29)
(22,18)-(22,22)
(22,23)-(22,29)
(22,24)-(22,25)
(22,27)-(22,28)
(23,4)-(32,46)
(23,19)-(23,30)
(23,19)-(23,23)
(23,24)-(23,30)
(23,25)-(23,26)
(23,28)-(23,29)
(24,4)-(32,46)
(24,8)-(24,39)
(24,8)-(24,21)
(24,9)-(24,16)
(24,19)-(24,20)
(24,25)-(24,39)
(24,26)-(24,34)
(24,37)-(24,38)
(25,10)-(25,19)
(25,10)-(25,16)
(25,17)-(25,19)
(27,7)-(32,45)
(27,10)-(27,41)
(27,10)-(27,23)
(27,11)-(27,18)
(27,21)-(27,22)
(27,27)-(27,41)
(27,28)-(27,36)
(27,39)-(27,40)
(29,9)-(32,45)
(29,9)-(29,18)
(30,11)-(32,45)
(30,12)-(30,20)
(31,14)-(32,44)
(31,15)-(31,42)
(31,16)-(31,21)
(31,22)-(31,41)
(31,23)-(31,27)
(31,29)-(31,40)
(31,30)-(31,35)
(31,38)-(31,39)
(31,44)-(31,71)
(31,45)-(31,50)
(31,51)-(31,70)
(31,52)-(31,56)
(31,58)-(31,69)
(31,59)-(31,64)
(31,67)-(31,68)
(32,16)-(32,43)
(32,17)-(32,22)
(32,23)-(32,42)
(32,24)-(32,28)
(32,30)-(32,41)
(32,31)-(32,36)
(32,39)-(32,40)
(27,7)-(32,45)
(20,2)-(32,46)
*)
