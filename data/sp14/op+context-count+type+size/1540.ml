
let rec clone x n =
  let rec helper a b acc = if b > 0 then helper a (b - 1) (a :: acc) else acc in
  helper x n [];;

let padZero l1 l2 =
  let l1_len = List.length l1 in
  let l2_len = List.length l2 in
  let l_diff = l1_len - l2_len in
  if l_diff < 0
  then ((clone 0 ((l_diff * (-1)) @ l1)), l2)
  else (l1, ((clone 0 l_diff) @ l2));;


(* fix

let rec clone x n =
  let rec helper a b acc = if b > 0 then helper a (b - 1) (a :: acc) else acc in
  helper x n [];;

let padZero l1 l2 =
  let l1_len = List.length l1 in
  let l2_len = List.length l2 in
  let l_diff = l1_len - l2_len in
  if l_diff < 0
  then (((clone 0 (l_diff * (-1))) @ l1), l2)
  else (l1, ((clone 0 l_diff) @ l2));;

*)

(* changed spans
(11,9)-(11,14)
(11,17)-(11,39)
(11,34)-(11,35)
*)

(* type error slice
(11,17)-(11,39)
(11,18)-(11,33)
(11,34)-(11,35)
*)

(* all spans
(2,14)-(4,15)
(2,16)-(4,15)
(3,2)-(4,15)
(3,17)-(3,77)
(3,19)-(3,77)
(3,21)-(3,77)
(3,27)-(3,77)
(3,30)-(3,35)
(3,30)-(3,31)
(3,34)-(3,35)
(3,41)-(3,68)
(3,41)-(3,47)
(3,48)-(3,49)
(3,50)-(3,57)
(3,51)-(3,52)
(3,55)-(3,56)
(3,58)-(3,68)
(3,59)-(3,60)
(3,64)-(3,67)
(3,74)-(3,77)
(4,2)-(4,15)
(4,2)-(4,8)
(4,9)-(4,10)
(4,11)-(4,12)
(4,13)-(4,15)
(6,12)-(12,36)
(6,15)-(12,36)
(7,2)-(12,36)
(7,15)-(7,29)
(7,15)-(7,26)
(7,27)-(7,29)
(8,2)-(12,36)
(8,15)-(8,29)
(8,15)-(8,26)
(8,27)-(8,29)
(9,2)-(12,36)
(9,15)-(9,30)
(9,15)-(9,21)
(9,24)-(9,30)
(10,2)-(12,36)
(10,5)-(10,15)
(10,5)-(10,11)
(10,14)-(10,15)
(11,7)-(11,45)
(11,8)-(11,40)
(11,9)-(11,14)
(11,15)-(11,16)
(11,17)-(11,39)
(11,34)-(11,35)
(11,18)-(11,33)
(11,19)-(11,25)
(11,28)-(11,32)
(11,36)-(11,38)
(11,42)-(11,44)
(12,7)-(12,36)
(12,8)-(12,10)
(12,12)-(12,35)
(12,30)-(12,31)
(12,13)-(12,29)
(12,14)-(12,19)
(12,20)-(12,21)
(12,22)-(12,28)
(12,32)-(12,34)
*)
