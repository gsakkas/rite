
let x a = a;;

let rec mulByDigit i l =
  match List.rev l with
  | [] -> []
  | h::t ->
      (match [((mulByDigit i (List.rev t)) * 10) + (h * i)] with
       | x::y ->
           let rec helper acc v =
             if v = 0 then 0 :: acc else helper ((v mod 10) :: acc) (v / 10) in
           helper [] x);;


(* fix

let rec mulByDigit i l =
  match l with
  | [] -> []
  | h::t ->
      let rec helper acc v =
        if v = 0 then acc else helper ((v mod 10) :: acc) (v / 10) in
      helper [] h;;

*)

(* changed spans
(2,6)-(2,11)
(2,10)-(2,11)
(5,8)-(5,16)
(5,8)-(5,18)
(8,6)-(12,23)
(8,13)-(8,59)
(8,14)-(8,48)
(8,14)-(8,58)
(8,15)-(8,42)
(8,16)-(8,26)
(8,27)-(8,28)
(8,29)-(8,41)
(8,30)-(8,38)
(8,39)-(8,40)
(8,45)-(8,47)
(8,51)-(8,58)
(8,52)-(8,53)
(8,56)-(8,57)
(10,11)-(12,22)
(11,27)-(11,35)
(11,41)-(11,76)
(12,11)-(12,22)
*)

(* type error slice
(4,3)-(12,25)
(4,19)-(12,23)
(4,21)-(12,23)
(5,2)-(12,23)
(8,6)-(12,23)
(8,14)-(8,48)
(8,15)-(8,42)
(8,16)-(8,26)
(10,11)-(12,22)
(11,13)-(11,76)
(11,13)-(11,76)
(11,27)-(11,35)
(11,41)-(11,47)
(11,41)-(11,76)
(12,11)-(12,17)
(12,11)-(12,22)
*)
