
let rec app x y = match x with | [] -> y | h::t -> h :: (app t y);;

let rec digitsOfInt n =
  if n >= 10 then (app digitsOfInt (n / 10)) @ [n mod 10] else [n];;


(* fix

let rec digitsOfInt n =
  if n >= 10 then (digitsOfInt (n / 10)) @ [n mod 10] else [n];;

*)

(* changed spans
(2,12)-(2,65)
(2,14)-(2,65)
(2,18)-(2,65)
(2,24)-(2,25)
(2,39)-(2,40)
(2,51)-(2,52)
(2,51)-(2,65)
(2,56)-(2,65)
(2,57)-(2,60)
(2,61)-(2,62)
(2,63)-(2,64)
(5,18)-(5,44)
(5,47)-(5,57)
(5,63)-(5,66)
*)

(* type error slice
(2,18)-(2,65)
(2,18)-(2,65)
(2,18)-(2,65)
(2,18)-(2,65)
(2,39)-(2,40)
(2,51)-(2,65)
(2,56)-(2,65)
(2,57)-(2,60)
(2,61)-(2,62)
(2,63)-(2,64)
(4,3)-(5,68)
(4,20)-(5,66)
(5,18)-(5,44)
(5,19)-(5,22)
(5,23)-(5,34)
(5,35)-(5,43)
*)
