
let x = [1; 2; 3];;

let rec listReverse l =
  match l with
  | [] -> []
  | x::[] -> [x]
  | head::tail::t::s -> s :: t :: tail :: head;;


(* fix

let x = [1; 2; 3];;

let rec listReverse l =
  match l with | [] -> [] | x::[] -> [x] | head::tail::third -> [head; tail];;

*)

(* changed spans
(5,2)-(8,46)
(8,24)-(8,25)
(8,24)-(8,46)
(8,29)-(8,30)
(8,29)-(8,46)
(8,34)-(8,46)
*)

(* type error slice
(5,2)-(8,46)
(5,2)-(8,46)
(5,2)-(8,46)
(5,2)-(8,46)
(5,2)-(8,46)
(8,24)-(8,25)
(8,24)-(8,46)
(8,24)-(8,46)
(8,29)-(8,30)
(8,29)-(8,46)
(8,29)-(8,46)
(8,34)-(8,38)
(8,34)-(8,46)
(8,34)-(8,46)
(8,42)-(8,46)
*)
