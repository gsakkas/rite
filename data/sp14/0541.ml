
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr
  | SinLog of expr* expr* expr;;

let pi = 4.0 *. (atan 1.0);;

let rec eval (e,x,y) =
  match e with
  | VarX  -> x
  | VarY  -> y
  | Sine i -> sin (pi *. (eval (i, x, y)))
  | Cosine i -> cos (pi *. (eval (i, x, y)))
  | Average (i1,i2) -> ((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0
  | Times (i1,i2) -> (eval (i1, x, y)) *. (eval (i2, x, y))
  | Thresh (i1,i2,i3,i4) ->
      if (eval (i1, x, y)) < (eval (i2, x, y))
      then eval (i3, x, y)
      else eval (i4, x, y)
  | ECosSin (a,b) ->
      let max' a b = if a < b then b else a in
      max' (0.0 -. 1.0)
        (min 1.0
           ((2.71 **
               (((sin (pi *. (eval (a, x, y)))) +.
                   (cos (pi *. (eval (b, x, y)))))
                  -. 1.0))
              -. 1.0))
  | SinLog (a',b',c) ->
      let a = abs_float (eval (a', x, y)) in
      let max' a b = if a < b then b else a in
      let b = abs_float (eval (b', x, y)) in
      let my_log l' = let l = max' 0.1 l' in (log l) / (log 10.0) in
      if (eval (c, x, y)) < 0.0
      then ((my_log (a *. 100.0)) ** (sin ((pi *. b) *. 100.0))) -. 1.0
      else
        (-1.0) *.
          (((my_log (b *. 100.0)) ** (pi *. (sin (a *. 100.0)))) -. 1.0);;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr
  | SinLog of expr* expr* expr;;

let pi = 4.0 *. (atan 1.0);;

let rec eval (e,x,y) =
  match e with
  | VarX  -> x
  | VarY  -> y
  | Sine i -> sin (pi *. (eval (i, x, y)))
  | Cosine i -> cos (pi *. (eval (i, x, y)))
  | Average (i1,i2) -> ((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0
  | Times (i1,i2) -> (eval (i1, x, y)) *. (eval (i2, x, y))
  | Thresh (i1,i2,i3,i4) ->
      if (eval (i1, x, y)) < (eval (i2, x, y))
      then eval (i3, x, y)
      else eval (i4, x, y)
  | ECosSin (a,b) ->
      let max' a b = if a < b then b else a in
      max' (0.0 -. 1.0)
        (min 1.0
           ((2.71 **
               (((sin (pi *. (eval (a, x, y)))) +.
                   (cos (pi *. (eval (b, x, y)))))
                  -. 1.0))
              -. 1.0))
  | SinLog (a',b',c) ->
      let a = abs_float (eval (a', x, y)) in
      let max' a b = if a < b then b else a in
      let b = abs_float (eval (b', x, y)) in
      let my_log l' = let l = max' 0.1 l' in (log l) /. (log 10.0) in
      if (eval (c, x, y)) < 0.0
      then ((my_log (a *. 100.0)) ** (sin ((pi *. b) *. 100.0))) -. 1.0
      else
        (-1.0) *.
          (((my_log (b *. 100.0)) ** (pi *. (sin (a *. 100.0)))) -. 1.0);;

*)

(* changed spans
(40,45)-(40,65)
*)

(* type error slice
(40,6)-(45,72)
(40,17)-(40,65)
(40,22)-(40,65)
(40,45)-(40,52)
(40,45)-(40,65)
(40,46)-(40,49)
(40,55)-(40,65)
(40,56)-(40,59)
(42,11)-(42,64)
(42,12)-(42,33)
(42,13)-(42,19)
(42,34)-(42,36)
(44,8)-(44,14)
(44,8)-(45,72)
(44,10)-(44,13)
(45,11)-(45,64)
(45,12)-(45,33)
(45,13)-(45,19)
(45,34)-(45,36)
*)

(* all spans
(13,9)-(13,26)
(13,9)-(13,12)
(13,16)-(13,26)
(13,17)-(13,21)
(13,22)-(13,25)
(15,14)-(45,72)
(16,2)-(45,72)
(16,8)-(16,9)
(17,13)-(17,14)
(18,13)-(18,14)
(19,14)-(19,42)
(19,14)-(19,17)
(19,18)-(19,42)
(19,19)-(19,21)
(19,25)-(19,41)
(19,26)-(19,30)
(19,31)-(19,40)
(19,32)-(19,33)
(19,35)-(19,36)
(19,38)-(19,39)
(20,16)-(20,44)
(20,16)-(20,19)
(20,20)-(20,44)
(20,21)-(20,23)
(20,27)-(20,43)
(20,28)-(20,32)
(20,33)-(20,42)
(20,34)-(20,35)
(20,37)-(20,38)
(20,40)-(20,41)
(21,23)-(21,70)
(21,23)-(21,63)
(21,24)-(21,41)
(21,25)-(21,29)
(21,30)-(21,40)
(21,31)-(21,33)
(21,35)-(21,36)
(21,38)-(21,39)
(21,45)-(21,62)
(21,46)-(21,50)
(21,51)-(21,61)
(21,52)-(21,54)
(21,56)-(21,57)
(21,59)-(21,60)
(21,67)-(21,70)
(22,21)-(22,59)
(22,21)-(22,38)
(22,22)-(22,26)
(22,27)-(22,37)
(22,28)-(22,30)
(22,32)-(22,33)
(22,35)-(22,36)
(22,42)-(22,59)
(22,43)-(22,47)
(22,48)-(22,58)
(22,49)-(22,51)
(22,53)-(22,54)
(22,56)-(22,57)
(24,6)-(26,26)
(24,9)-(24,46)
(24,9)-(24,26)
(24,10)-(24,14)
(24,15)-(24,25)
(24,16)-(24,18)
(24,20)-(24,21)
(24,23)-(24,24)
(24,29)-(24,46)
(24,30)-(24,34)
(24,35)-(24,45)
(24,36)-(24,38)
(24,40)-(24,41)
(24,43)-(24,44)
(25,11)-(25,26)
(25,11)-(25,15)
(25,16)-(25,26)
(25,17)-(25,19)
(25,21)-(25,22)
(25,24)-(25,25)
(26,11)-(26,26)
(26,11)-(26,15)
(26,16)-(26,26)
(26,17)-(26,19)
(26,21)-(26,22)
(26,24)-(26,25)
(28,6)-(35,22)
(28,15)-(28,43)
(28,17)-(28,43)
(28,21)-(28,43)
(28,24)-(28,29)
(28,24)-(28,25)
(28,28)-(28,29)
(28,35)-(28,36)
(28,42)-(28,43)
(29,6)-(35,22)
(29,6)-(29,10)
(29,11)-(29,23)
(29,12)-(29,15)
(29,19)-(29,22)
(30,8)-(35,22)
(30,9)-(30,12)
(30,13)-(30,16)
(31,11)-(35,21)
(31,12)-(34,26)
(31,18)-(31,20)
(31,13)-(31,17)
(32,15)-(34,25)
(32,16)-(33,50)
(32,17)-(32,47)
(32,18)-(32,21)
(32,22)-(32,46)
(32,23)-(32,25)
(32,29)-(32,45)
(32,30)-(32,34)
(32,35)-(32,44)
(32,36)-(32,37)
(32,39)-(32,40)
(32,42)-(32,43)
(33,19)-(33,49)
(33,20)-(33,23)
(33,24)-(33,48)
(33,25)-(33,27)
(33,31)-(33,47)
(33,32)-(33,36)
(33,37)-(33,46)
(33,38)-(33,39)
(33,41)-(33,42)
(33,44)-(33,45)
(34,21)-(34,24)
(35,17)-(35,20)
(37,6)-(45,72)
(37,14)-(37,41)
(37,14)-(37,23)
(37,24)-(37,41)
(37,25)-(37,29)
(37,30)-(37,40)
(37,31)-(37,33)
(37,35)-(37,36)
(37,38)-(37,39)
(38,6)-(45,72)
(38,15)-(38,43)
(38,17)-(38,43)
(38,21)-(38,43)
(38,24)-(38,29)
(38,24)-(38,25)
(38,28)-(38,29)
(38,35)-(38,36)
(38,42)-(38,43)
(39,6)-(45,72)
(39,14)-(39,41)
(39,14)-(39,23)
(39,24)-(39,41)
(39,25)-(39,29)
(39,30)-(39,40)
(39,31)-(39,33)
(39,35)-(39,36)
(39,38)-(39,39)
(40,6)-(45,72)
(40,17)-(40,65)
(40,22)-(40,65)
(40,30)-(40,41)
(40,30)-(40,34)
(40,35)-(40,38)
(40,39)-(40,41)
(40,45)-(40,65)
(40,45)-(40,52)
(40,46)-(40,49)
(40,50)-(40,51)
(40,55)-(40,65)
(40,56)-(40,59)
(40,60)-(40,64)
(41,6)-(45,72)
(41,9)-(41,31)
(41,9)-(41,25)
(41,10)-(41,14)
(41,15)-(41,24)
(41,16)-(41,17)
(41,19)-(41,20)
(41,22)-(41,23)
(41,28)-(41,31)
(42,11)-(42,71)
(42,11)-(42,64)
(42,34)-(42,36)
(42,12)-(42,33)
(42,13)-(42,19)
(42,20)-(42,32)
(42,21)-(42,22)
(42,26)-(42,31)
(42,37)-(42,63)
(42,38)-(42,41)
(42,42)-(42,62)
(42,43)-(42,52)
(42,44)-(42,46)
(42,50)-(42,51)
(42,56)-(42,61)
(42,68)-(42,71)
(44,8)-(45,72)
(44,8)-(44,14)
(44,10)-(44,13)
(45,10)-(45,72)
(45,11)-(45,64)
(45,34)-(45,36)
(45,12)-(45,33)
(45,13)-(45,19)
(45,20)-(45,32)
(45,21)-(45,22)
(45,26)-(45,31)
(45,37)-(45,63)
(45,38)-(45,40)
(45,44)-(45,62)
(45,45)-(45,48)
(45,49)-(45,61)
(45,50)-(45,51)
(45,55)-(45,60)
(45,68)-(45,71)
*)
