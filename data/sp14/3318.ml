
let rec mulByDigit i l =
  match List.rev l with
  | [] -> []
  | h::m::t ->
      [(mulByDigit m)
      ::
      t;
      ((h * i) / 10) + ((m * i) mod 10);
      (h * i) mod 10];;


(* fix

let rec mulByDigit i l =
  match List.rev l with
  | [] -> []
  | h::m::t ->
      (mulByDigit i (m :: t)) @
        [((h * i) / 10) + ((m * i) mod 10); (h * i) mod 10];;

*)

(* changed spans
(6,6)-(10,21)
(6,7)-(6,21)
(6,7)-(8,7)
(6,8)-(6,18)
(6,19)-(6,20)
(9,6)-(9,39)
*)

(* type error slice
(2,3)-(10,23)
(2,19)-(10,21)
(2,21)-(10,21)
(3,2)-(10,21)
(6,6)-(10,21)
(6,7)-(6,21)
(6,7)-(8,7)
(6,8)-(6,18)
(9,6)-(9,39)
(10,6)-(10,20)
*)

(* all spans
(2,19)-(10,21)
(2,21)-(10,21)
(3,2)-(10,21)
(3,8)-(3,18)
(3,8)-(3,16)
(3,17)-(3,18)
(4,10)-(4,12)
(6,6)-(10,21)
(6,7)-(8,7)
(6,7)-(6,21)
(6,8)-(6,18)
(6,19)-(6,20)
(8,6)-(8,7)
(9,6)-(9,39)
(9,6)-(9,20)
(9,7)-(9,14)
(9,8)-(9,9)
(9,12)-(9,13)
(9,17)-(9,19)
(9,23)-(9,39)
(9,24)-(9,31)
(9,25)-(9,26)
(9,29)-(9,30)
(9,36)-(9,38)
(10,6)-(10,20)
(10,6)-(10,13)
(10,7)-(10,8)
(10,11)-(10,12)
(10,18)-(10,20)
*)
