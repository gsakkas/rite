
let rec padZero l1 l2 =
  let length1 = List.length l1 in
  let length2 = List.length l2 in
  if length1 = length2
  then (l1, l2)
  else
    if length1 < length2 then padZero (0 :: l1) l2 else padZero l1 (0 :: l2);;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let (eFromList1,eFromList2) = x in
      let (cin,result) = a in
      let sum = (eFromList1 + eFromList2) + cin in
      let tens = sum / 10 in
      let ones = sum mod 10 in (tens, (ones :: result)) in
    let base = (0, []) in
    let args = List.combine (List.rev (0 :: l1)) (List.rev (0 :: l2)) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

let rec mulByDigit i l =
  match i with
  | 0 -> []
  | 1 -> l
  | _ -> bigAdd ((bigAdd 1 1) (mulByDigit (i - 2) l));;


(* fix

let rec padZero l1 l2 =
  let length1 = List.length l1 in
  let length2 = List.length l2 in
  if length1 = length2
  then (l1, l2)
  else
    if length1 < length2 then padZero (0 :: l1) l2 else padZero l1 (0 :: l2);;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let (eFromList1,eFromList2) = x in
      let (cin,result) = a in
      let sum = (eFromList1 + eFromList2) + cin in
      let tens = sum / 10 in
      let ones = sum mod 10 in (tens, (ones :: result)) in
    let base = (0, []) in
    let args = List.combine (List.rev (0 :: l1)) (List.rev (0 :: l2)) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

let rec mulByDigit i l =
  if i = 0
  then []
  else if i = 1 then l else bigAdd (bigAdd l l) (mulByDigit (i - 2) l);;

*)

(* changed spans
(27,2)-(30,53)
(27,8)-(27,9)
(28,9)-(28,11)
(29,9)-(29,10)
(30,9)-(30,53)
(30,16)-(30,53)
(30,25)-(30,26)
(30,27)-(30,28)
(30,30)-(30,52)
*)

(* type error slice
(8,30)-(8,37)
(8,30)-(8,50)
(8,38)-(8,47)
(13,3)-(24,36)
(13,11)-(24,34)
(24,18)-(24,33)
(24,19)-(24,26)
(24,27)-(24,29)
(27,2)-(30,53)
(28,9)-(28,11)
(30,9)-(30,15)
(30,9)-(30,53)
(30,17)-(30,29)
(30,18)-(30,24)
(30,25)-(30,26)
*)

(* all spans
(2,16)-(8,76)
(2,19)-(8,76)
(3,2)-(8,76)
(3,16)-(3,30)
(3,16)-(3,27)
(3,28)-(3,30)
(4,2)-(8,76)
(4,16)-(4,30)
(4,16)-(4,27)
(4,28)-(4,30)
(5,2)-(8,76)
(5,5)-(5,22)
(5,5)-(5,12)
(5,15)-(5,22)
(6,7)-(6,15)
(6,8)-(6,10)
(6,12)-(6,14)
(8,4)-(8,76)
(8,7)-(8,24)
(8,7)-(8,14)
(8,17)-(8,24)
(8,30)-(8,50)
(8,30)-(8,37)
(8,38)-(8,47)
(8,39)-(8,40)
(8,44)-(8,46)
(8,48)-(8,50)
(8,56)-(8,76)
(8,56)-(8,63)
(8,64)-(8,66)
(8,67)-(8,76)
(8,68)-(8,69)
(8,73)-(8,75)
(10,19)-(11,69)
(11,2)-(11,69)
(11,8)-(11,9)
(11,23)-(11,25)
(11,36)-(11,69)
(11,39)-(11,44)
(11,39)-(11,40)
(11,43)-(11,44)
(11,50)-(11,62)
(11,50)-(11,60)
(11,61)-(11,62)
(11,68)-(11,69)
(13,11)-(24,34)
(13,14)-(24,34)
(14,2)-(24,34)
(14,11)-(23,51)
(15,4)-(23,51)
(15,10)-(20,55)
(15,12)-(20,55)
(16,6)-(20,55)
(16,36)-(16,37)
(17,6)-(20,55)
(17,25)-(17,26)
(18,6)-(20,55)
(18,16)-(18,47)
(18,16)-(18,41)
(18,17)-(18,27)
(18,30)-(18,40)
(18,44)-(18,47)
(19,6)-(20,55)
(19,17)-(19,25)
(19,17)-(19,20)
(19,23)-(19,25)
(20,6)-(20,55)
(20,17)-(20,27)
(20,17)-(20,20)
(20,25)-(20,27)
(20,31)-(20,55)
(20,32)-(20,36)
(20,38)-(20,54)
(20,39)-(20,43)
(20,47)-(20,53)
(21,4)-(23,51)
(21,15)-(21,22)
(21,16)-(21,17)
(21,19)-(21,21)
(22,4)-(23,51)
(22,15)-(22,69)
(22,15)-(22,27)
(22,28)-(22,48)
(22,29)-(22,37)
(22,38)-(22,47)
(22,39)-(22,40)
(22,44)-(22,46)
(22,49)-(22,69)
(22,50)-(22,58)
(22,59)-(22,68)
(22,60)-(22,61)
(22,65)-(22,67)
(23,4)-(23,51)
(23,18)-(23,44)
(23,18)-(23,32)
(23,33)-(23,34)
(23,35)-(23,39)
(23,40)-(23,44)
(23,48)-(23,51)
(24,2)-(24,34)
(24,2)-(24,12)
(24,13)-(24,34)
(24,14)-(24,17)
(24,18)-(24,33)
(24,19)-(24,26)
(24,27)-(24,29)
(24,30)-(24,32)
(26,19)-(30,53)
(26,21)-(30,53)
(27,2)-(30,53)
(27,8)-(27,9)
(28,9)-(28,11)
(29,9)-(29,10)
(30,9)-(30,53)
(30,9)-(30,15)
(30,16)-(30,53)
(30,17)-(30,29)
(30,18)-(30,24)
(30,25)-(30,26)
(30,27)-(30,28)
(30,30)-(30,52)
(30,31)-(30,41)
(30,42)-(30,49)
(30,43)-(30,44)
(30,47)-(30,48)
(30,50)-(30,51)
*)
