
let rec mulByDigit i l =
  match List.rev l with
  | [] -> []
  | h::t ->
      (match (mulByDigit i (List.rev (List.map (fun x  -> x * 10) t))) @
               [h * i]
       with
       | [] -> []
       | h::t ->
           let rec helper lst =
             match lst with | [] -> [] | h1::t1 -> [helper t1; h1 mod 10] in
           helper [h]);;


(* fix

let rec mulByDigit i l =
  match List.rev l with
  | [] -> []
  | h::t ->
      (match (mulByDigit i (List.rev (List.map (fun x  -> x * 10) t))) @
               [h * i]
       with
       | [] -> []
       | h::t ->
           let rec helper lst =
             match lst with | [] -> [] | h1::t1 -> (helper t1) @ [h1 mod 10] in
           helper [h]);;

*)

(* changed spans
(12,51)-(12,73)
(12,52)-(12,61)
(12,63)-(12,72)
*)

(* type error slice
(6,6)-(13,22)
(9,15)-(9,17)
(11,11)-(13,21)
(11,26)-(12,73)
(12,13)-(12,73)
(12,51)-(12,73)
(12,52)-(12,58)
(12,52)-(12,61)
(12,63)-(12,72)
(13,11)-(13,17)
(13,11)-(13,21)
*)

(* all spans
(2,19)-(13,22)
(2,21)-(13,22)
(3,2)-(13,22)
(3,8)-(3,18)
(3,8)-(3,16)
(3,17)-(3,18)
(4,10)-(4,12)
(6,6)-(13,22)
(6,13)-(7,22)
(6,71)-(6,72)
(6,13)-(6,70)
(6,14)-(6,24)
(6,25)-(6,26)
(6,27)-(6,69)
(6,28)-(6,36)
(6,37)-(6,68)
(6,38)-(6,46)
(6,47)-(6,65)
(6,58)-(6,64)
(6,58)-(6,59)
(6,62)-(6,64)
(6,66)-(6,67)
(7,15)-(7,22)
(7,16)-(7,21)
(7,16)-(7,17)
(7,20)-(7,21)
(9,15)-(9,17)
(11,11)-(13,21)
(11,26)-(12,73)
(12,13)-(12,73)
(12,19)-(12,22)
(12,36)-(12,38)
(12,51)-(12,73)
(12,52)-(12,61)
(12,52)-(12,58)
(12,59)-(12,61)
(12,63)-(12,72)
(12,63)-(12,65)
(12,70)-(12,72)
(13,11)-(13,21)
(13,11)-(13,17)
(13,18)-(13,21)
(13,19)-(13,20)
*)
