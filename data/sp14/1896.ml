
let rec clone x n = if n <= 0 then [] else [x] @ (clone x (n - 1));;

let padZero l1 l2 =
  let lenl1 = List.length l1 in
  let lenl2 = List.length l2 in
  if lenl1 < lenl2
  then
    ((List.append (clone 0 (lenl1 - lenl2)) l1),
      (List.append (clone 0 (lenl1 - lenl2)) l2));;


(* fix

let rec clone x n = if n <= 0 then [] else [x] @ (clone x (n - 1));;

let padZero l1 l2 =
  let lenl1 = List.length l1 in
  let lenl2 = List.length l2 in
  ((List.append (clone 0 (lenl1 - lenl2)) l1),
    (List.append (clone 0 (lenl1 - lenl2)) l2));;

*)

(* changed spans
(7,2)-(10,49)
(7,5)-(7,10)
(7,5)-(7,18)
(7,13)-(7,18)
*)

(* type error slice
(7,2)-(10,49)
(9,4)-(10,49)
*)

(* all spans
(2,14)-(2,66)
(2,16)-(2,66)
(2,20)-(2,66)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,66)
(2,47)-(2,48)
(2,43)-(2,46)
(2,44)-(2,45)
(2,49)-(2,66)
(2,50)-(2,55)
(2,56)-(2,57)
(2,58)-(2,65)
(2,59)-(2,60)
(2,63)-(2,64)
(4,12)-(10,49)
(4,15)-(10,49)
(5,2)-(10,49)
(5,14)-(5,28)
(5,14)-(5,25)
(5,26)-(5,28)
(6,2)-(10,49)
(6,14)-(6,28)
(6,14)-(6,25)
(6,26)-(6,28)
(7,2)-(10,49)
(7,5)-(7,18)
(7,5)-(7,10)
(7,13)-(7,18)
(9,4)-(10,49)
(9,5)-(9,47)
(9,6)-(9,17)
(9,18)-(9,43)
(9,19)-(9,24)
(9,25)-(9,26)
(9,27)-(9,42)
(9,28)-(9,33)
(9,36)-(9,41)
(9,44)-(9,46)
(10,6)-(10,48)
(10,7)-(10,18)
(10,19)-(10,44)
(10,20)-(10,25)
(10,26)-(10,27)
(10,28)-(10,43)
(10,29)-(10,34)
(10,37)-(10,42)
(10,45)-(10,47)
*)
