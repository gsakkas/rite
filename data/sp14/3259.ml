
let t x = x + 1;;

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = if x = "a" then x :: a in
      let base = sep in let l = t in List.fold_left f base l;;


(* fix

let t x = x + 1;;

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = x ^ a in
      let base = sep in let l = t in List.fold_left f base l;;

*)

(* changed spans
(8,18)-(8,40)
(8,21)-(8,22)
(8,21)-(8,28)
(8,25)-(8,28)
(8,34)-(8,35)
(8,34)-(8,40)
*)

(* type error slice
(8,18)-(8,40)
(8,34)-(8,40)
*)

(* all spans
(2,6)-(2,15)
(2,10)-(2,15)
(2,10)-(2,11)
(2,14)-(2,15)
(4,18)-(9,60)
(4,22)-(9,60)
(5,2)-(9,60)
(5,8)-(5,10)
(6,10)-(6,12)
(8,6)-(9,60)
(8,12)-(8,40)
(8,14)-(8,40)
(8,18)-(8,40)
(8,21)-(8,28)
(8,21)-(8,22)
(8,25)-(8,28)
(8,34)-(8,40)
(8,34)-(8,35)
(8,39)-(8,40)
(9,6)-(9,60)
(9,17)-(9,20)
(9,24)-(9,60)
(9,32)-(9,33)
(9,37)-(9,60)
(9,37)-(9,51)
(9,52)-(9,53)
(9,54)-(9,58)
(9,59)-(9,60)
*)
