
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = if (List.length sl) > 1 then a ^ (sep ^ x) else a ^ x in
      let base = h in let l = t in List.fold_left f base l;;

let stringOfList f l = "[" ^ ((sepConcat ("; ", (List.map f l))) ^ "]");;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = if (List.length sl) > 1 then a ^ (sep ^ x) else a ^ x in
      let base = h in let l = t in List.fold_left f base l;;

let stringOfList f l = "[" ^ ((sepConcat "; " (List.map f l)) ^ "]");;

*)

(* changed spans
(9,30)-(9,64)
(9,41)-(9,63)
*)

(* type error slice
(2,3)-(7,60)
(2,18)-(7,58)
(6,51)-(6,60)
(6,52)-(6,55)
(6,56)-(6,57)
(9,30)-(9,64)
(9,31)-(9,40)
(9,41)-(9,63)
*)

(* all spans
(2,18)-(7,58)
(2,22)-(7,58)
(3,2)-(7,58)
(3,8)-(3,10)
(4,10)-(4,12)
(6,6)-(7,58)
(6,12)-(6,71)
(6,14)-(6,71)
(6,18)-(6,71)
(6,21)-(6,41)
(6,21)-(6,37)
(6,22)-(6,33)
(6,34)-(6,36)
(6,40)-(6,41)
(6,47)-(6,60)
(6,49)-(6,50)
(6,47)-(6,48)
(6,51)-(6,60)
(6,56)-(6,57)
(6,52)-(6,55)
(6,58)-(6,59)
(6,66)-(6,71)
(6,68)-(6,69)
(6,66)-(6,67)
(6,70)-(6,71)
(7,6)-(7,58)
(7,17)-(7,18)
(7,22)-(7,58)
(7,30)-(7,31)
(7,35)-(7,58)
(7,35)-(7,49)
(7,50)-(7,51)
(7,52)-(7,56)
(7,57)-(7,58)
(9,17)-(9,71)
(9,19)-(9,71)
(9,23)-(9,71)
(9,27)-(9,28)
(9,23)-(9,26)
(9,29)-(9,71)
(9,65)-(9,66)
(9,30)-(9,64)
(9,31)-(9,40)
(9,41)-(9,63)
(9,42)-(9,46)
(9,48)-(9,62)
(9,49)-(9,57)
(9,58)-(9,59)
(9,60)-(9,61)
(9,67)-(9,70)
*)
