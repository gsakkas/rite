
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildECosSin (a,b) = ECosSin (a, b);;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let rec build (rand,depth) =
  let r = rand (if depth = 0 then (7, 9) else (1, 7)) in
  match r with
  | 1 -> buildSine (build (rand, (depth - 1)))
  | 2 -> buildCosine (build (rand, (depth - 1)))
  | 3 ->
      buildAverage ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 4 ->
      buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 5 ->
      buildThresh
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 6 -> buildECosSin (build (rand, (depth - 1))) (build (rand, (depth - 1)))
  | 7 -> VarX
  | 8 -> VarY;;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildECosSin (a,b) = ECosSin (a, b);;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let rec build (rand,depth) =
  let r = rand (if depth = 0 then (7, 9) else (1, 7)) in
  match r with
  | 1 -> buildSine (build (rand, (depth - 1)))
  | 2 -> buildCosine (build (rand, (depth - 1)))
  | 3 ->
      buildAverage ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 4 ->
      buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 5 ->
      buildThresh
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 6 ->
      buildECosSin ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 7 -> VarX
  | 8 -> VarY;;

*)

(* changed spans
(37,9)-(37,77)
(37,22)-(37,49)
*)

(* type error slice
(16,3)-(16,41)
(16,18)-(16,39)
(18,3)-(18,26)
(18,14)-(18,24)
(18,18)-(18,24)
(18,23)-(18,24)
(27,9)-(27,18)
(27,9)-(27,46)
(27,19)-(27,46)
(27,20)-(27,25)
(37,9)-(37,21)
(37,9)-(37,77)
(37,22)-(37,49)
(37,23)-(37,28)
*)

(* all spans
(12,18)-(12,43)
(12,27)-(12,43)
(12,36)-(12,38)
(12,40)-(12,42)
(14,16)-(14,28)
(14,20)-(14,28)
(14,27)-(14,28)
(16,18)-(16,39)
(16,25)-(16,39)
(16,34)-(16,35)
(16,37)-(16,38)
(18,14)-(18,24)
(18,18)-(18,24)
(18,23)-(18,24)
(20,17)-(20,67)
(20,38)-(20,67)
(20,46)-(20,47)
(20,49)-(20,50)
(20,52)-(20,58)
(20,60)-(20,66)
(22,16)-(22,39)
(22,25)-(22,39)
(22,32)-(22,34)
(22,36)-(22,38)
(24,15)-(39,13)
(25,2)-(39,13)
(25,10)-(25,53)
(25,10)-(25,14)
(25,15)-(25,53)
(25,19)-(25,28)
(25,19)-(25,24)
(25,27)-(25,28)
(25,34)-(25,40)
(25,35)-(25,36)
(25,38)-(25,39)
(25,46)-(25,52)
(25,47)-(25,48)
(25,50)-(25,51)
(26,2)-(39,13)
(26,8)-(26,9)
(27,9)-(27,46)
(27,9)-(27,18)
(27,19)-(27,46)
(27,20)-(27,25)
(27,26)-(27,45)
(27,27)-(27,31)
(27,33)-(27,44)
(27,34)-(27,39)
(27,42)-(27,43)
(28,9)-(28,48)
(28,9)-(28,20)
(28,21)-(28,48)
(28,22)-(28,27)
(28,28)-(28,47)
(28,29)-(28,33)
(28,35)-(28,46)
(28,36)-(28,41)
(28,44)-(28,45)
(30,6)-(30,77)
(30,6)-(30,18)
(30,19)-(30,77)
(30,20)-(30,47)
(30,21)-(30,26)
(30,27)-(30,46)
(30,28)-(30,32)
(30,34)-(30,45)
(30,35)-(30,40)
(30,43)-(30,44)
(30,49)-(30,76)
(30,50)-(30,55)
(30,56)-(30,75)
(30,57)-(30,61)
(30,63)-(30,74)
(30,64)-(30,69)
(30,72)-(30,73)
(32,6)-(32,75)
(32,6)-(32,16)
(32,17)-(32,75)
(32,18)-(32,45)
(32,19)-(32,24)
(32,25)-(32,44)
(32,26)-(32,30)
(32,32)-(32,43)
(32,33)-(32,38)
(32,41)-(32,42)
(32,47)-(32,74)
(32,48)-(32,53)
(32,54)-(32,73)
(32,55)-(32,59)
(32,61)-(32,72)
(32,62)-(32,67)
(32,70)-(32,71)
(34,6)-(36,67)
(34,6)-(34,17)
(35,8)-(36,67)
(35,9)-(35,36)
(35,10)-(35,15)
(35,16)-(35,35)
(35,17)-(35,21)
(35,23)-(35,34)
(35,24)-(35,29)
(35,32)-(35,33)
(35,38)-(35,65)
(35,39)-(35,44)
(35,45)-(35,64)
(35,46)-(35,50)
(35,52)-(35,63)
(35,53)-(35,58)
(35,61)-(35,62)
(36,10)-(36,37)
(36,11)-(36,16)
(36,17)-(36,36)
(36,18)-(36,22)
(36,24)-(36,35)
(36,25)-(36,30)
(36,33)-(36,34)
(36,39)-(36,66)
(36,40)-(36,45)
(36,46)-(36,65)
(36,47)-(36,51)
(36,53)-(36,64)
(36,54)-(36,59)
(36,62)-(36,63)
(37,9)-(37,77)
(37,9)-(37,21)
(37,22)-(37,49)
(37,23)-(37,28)
(37,29)-(37,48)
(37,30)-(37,34)
(37,36)-(37,47)
(37,37)-(37,42)
(37,45)-(37,46)
(37,50)-(37,77)
(37,51)-(37,56)
(37,57)-(37,76)
(37,58)-(37,62)
(37,64)-(37,75)
(37,65)-(37,70)
(37,73)-(37,74)
(38,9)-(38,13)
(39,9)-(39,13)
*)
