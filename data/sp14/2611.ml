
let rec app x y = match x with | [] -> y | h::t -> h :: (app t y);;

let rec digitsOfInt n =
  if n >= 10 then app ((digitsOfInt (n / 10)) @ [n mod 10]) else [n];;


(* fix

let rec digitsOfInt n =
  if n >= 10 then (digitsOfInt (n / 10)) @ [n mod 10] else [n];;

*)

(* changed spans
(2,12)-(2,65)
(2,14)-(2,65)
(2,18)-(2,65)
(2,24)-(2,25)
(2,39)-(2,40)
(2,51)-(2,52)
(2,51)-(2,65)
(2,56)-(2,65)
(2,57)-(2,60)
(2,61)-(2,62)
(2,63)-(2,64)
(5,18)-(5,21)
(5,18)-(5,59)
*)

(* type error slice
(2,56)-(2,65)
(2,57)-(2,60)
(4,3)-(5,70)
(4,20)-(5,68)
(5,2)-(5,68)
(5,2)-(5,68)
(5,18)-(5,21)
(5,18)-(5,59)
(5,22)-(5,59)
(5,23)-(5,45)
(5,24)-(5,35)
(5,46)-(5,47)
(5,65)-(5,68)
*)

(* all spans
(2,12)-(2,65)
(2,14)-(2,65)
(2,18)-(2,65)
(2,24)-(2,25)
(2,39)-(2,40)
(2,51)-(2,65)
(2,51)-(2,52)
(2,56)-(2,65)
(2,57)-(2,60)
(2,61)-(2,62)
(2,63)-(2,64)
(4,20)-(5,68)
(5,2)-(5,68)
(5,5)-(5,12)
(5,5)-(5,6)
(5,10)-(5,12)
(5,18)-(5,59)
(5,18)-(5,21)
(5,22)-(5,59)
(5,46)-(5,47)
(5,23)-(5,45)
(5,24)-(5,35)
(5,36)-(5,44)
(5,37)-(5,38)
(5,41)-(5,43)
(5,48)-(5,58)
(5,49)-(5,57)
(5,49)-(5,50)
(5,55)-(5,57)
(5,65)-(5,68)
(5,66)-(5,67)
*)
