
let rec app l1 l2 = match l1 with | [] -> l2 | h::t -> h :: (app t l2);;

let rec digitsOfInt n =
  if n >= 10 then app digitsOfInt (n / 10) [n mod 10] else [n];;


(* fix

let rec app l1 l2 = match l1 with | [] -> l2 | h::t -> h :: (app t l2);;

let rec digitsOfInt n =
  if n >= 10 then app (digitsOfInt (n / 10)) [n mod 10] else [n];;

*)

(* changed spans
(5,18)-(5,53)
(5,22)-(5,33)
*)

(* type error slice
(2,55)-(2,70)
(2,60)-(2,70)
(2,61)-(2,64)
(5,18)-(5,21)
(5,18)-(5,53)
*)

(* all spans
(2,12)-(2,70)
(2,15)-(2,70)
(2,20)-(2,70)
(2,26)-(2,28)
(2,42)-(2,44)
(2,55)-(2,70)
(2,55)-(2,56)
(2,60)-(2,70)
(2,61)-(2,64)
(2,65)-(2,66)
(2,67)-(2,69)
(4,20)-(5,62)
(5,2)-(5,62)
(5,5)-(5,12)
(5,5)-(5,6)
(5,10)-(5,12)
(5,18)-(5,53)
(5,18)-(5,21)
(5,22)-(5,33)
(5,34)-(5,42)
(5,35)-(5,36)
(5,39)-(5,41)
(5,43)-(5,53)
(5,44)-(5,52)
(5,44)-(5,45)
(5,50)-(5,52)
(5,59)-(5,62)
(5,60)-(5,61)
*)
