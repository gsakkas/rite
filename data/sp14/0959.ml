
let rec append xs x =
  match xs with | [] -> [x] | hd::tl -> hd :: (append tl x);;

let rec digitsOfInt n =
  if n <= 0 then [] else append digitsOfInt (n / 10) (n - ((n / 10) * 10));;


(* fix

let rec append xs x =
  match xs with | [] -> [x] | hd::tl -> hd :: (append tl x);;

let rec digitsOfInt n =
  if n <= 0 then [] else append (digitsOfInt (n / 10)) (n - ((n / 10) * 10));;

*)

(* changed spans
(6,25)-(6,74)
(6,32)-(6,43)
*)

(* type error slice
(3,40)-(3,59)
(3,46)-(3,59)
(3,47)-(3,53)
(6,25)-(6,31)
(6,25)-(6,74)
*)

(* all spans
(2,15)-(3,59)
(2,18)-(3,59)
(3,2)-(3,59)
(3,8)-(3,10)
(3,24)-(3,27)
(3,25)-(3,26)
(3,40)-(3,59)
(3,40)-(3,42)
(3,46)-(3,59)
(3,47)-(3,53)
(3,54)-(3,56)
(3,57)-(3,58)
(5,20)-(6,74)
(6,2)-(6,74)
(6,5)-(6,11)
(6,5)-(6,6)
(6,10)-(6,11)
(6,17)-(6,19)
(6,25)-(6,74)
(6,25)-(6,31)
(6,32)-(6,43)
(6,44)-(6,52)
(6,45)-(6,46)
(6,49)-(6,51)
(6,53)-(6,74)
(6,54)-(6,55)
(6,58)-(6,73)
(6,59)-(6,67)
(6,60)-(6,61)
(6,64)-(6,66)
(6,70)-(6,72)
*)
