
let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let rec listReverse l =
  let rec listHelper l l2 =
    match l with | [] -> l2 | h::t -> listHelper t (h :: l2) in
  listHelper l [];;

let palindrome w =
  if (listReverse explode w) = (explode w) then true else false;;


(* fix

let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let rec listReverse l =
  let rec listHelper l l2 =
    match l with | [] -> l2 | h::t -> listHelper t (h :: l2) in
  listHelper l [];;

let palindrome w =
  if (listReverse (explode w)) = (explode w) then true else false;;

*)

(* changed spans
(13,5)-(13,28)
(13,18)-(13,25)
*)

(* type error slice
(7,3)-(10,19)
(7,20)-(10,17)
(8,2)-(10,17)
(9,4)-(9,60)
(9,25)-(9,27)
(9,38)-(9,48)
(9,38)-(9,60)
(9,51)-(9,60)
(9,57)-(9,59)
(10,2)-(10,12)
(10,2)-(10,17)
(13,5)-(13,28)
(13,6)-(13,17)
*)

(* all spans
(2,12)-(5,6)
(3,2)-(5,6)
(3,13)-(4,66)
(4,4)-(4,66)
(4,7)-(4,29)
(4,7)-(4,8)
(4,12)-(4,29)
(4,13)-(4,26)
(4,27)-(4,28)
(4,35)-(4,37)
(4,43)-(4,66)
(4,43)-(4,50)
(4,44)-(4,49)
(4,44)-(4,45)
(4,47)-(4,48)
(4,54)-(4,66)
(4,55)-(4,57)
(4,58)-(4,65)
(4,59)-(4,60)
(4,63)-(4,64)
(5,2)-(5,6)
(5,2)-(5,4)
(5,5)-(5,6)
(7,20)-(10,17)
(8,2)-(10,17)
(8,21)-(9,60)
(8,23)-(9,60)
(9,4)-(9,60)
(9,10)-(9,11)
(9,25)-(9,27)
(9,38)-(9,60)
(9,38)-(9,48)
(9,49)-(9,50)
(9,51)-(9,60)
(9,52)-(9,53)
(9,57)-(9,59)
(10,2)-(10,17)
(10,2)-(10,12)
(10,13)-(10,14)
(10,15)-(10,17)
(12,15)-(13,63)
(13,2)-(13,63)
(13,5)-(13,42)
(13,5)-(13,28)
(13,6)-(13,17)
(13,18)-(13,25)
(13,26)-(13,27)
(13,31)-(13,42)
(13,32)-(13,39)
(13,40)-(13,41)
(13,48)-(13,52)
(13,58)-(13,63)
*)
