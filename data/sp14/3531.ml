
let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let listReverse l =
  let rec reverseHelper acc =
    function | [] -> acc | h::t -> reverseHelper (h :: acc) t in
  reverseHelper [] l;;

let palindrome w = if (explode w) = (listReverse w) then true else false;;


(* fix

let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let listReverse l =
  let rec reverseHelper acc =
    function | [] -> acc | h::t -> reverseHelper (h :: acc) t in
  reverseHelper [] l;;

let palindrome w =
  if (explode w) = (listReverse (explode w)) then true else false;;

*)

(* changed spans
(12,49)-(12,50)
*)

(* type error slice
(2,3)-(5,8)
(2,12)-(5,6)
(4,12)-(4,29)
(4,13)-(4,26)
(4,27)-(4,28)
(7,3)-(10,22)
(7,16)-(10,20)
(9,4)-(9,61)
(9,35)-(9,48)
(9,35)-(9,61)
(9,60)-(9,61)
(10,2)-(10,15)
(10,2)-(10,20)
(10,19)-(10,20)
(12,22)-(12,33)
(12,23)-(12,30)
(12,31)-(12,32)
(12,36)-(12,51)
(12,37)-(12,48)
(12,49)-(12,50)
*)

(* all spans
(2,12)-(5,6)
(3,2)-(5,6)
(3,13)-(4,66)
(4,4)-(4,66)
(4,7)-(4,29)
(4,7)-(4,8)
(4,12)-(4,29)
(4,13)-(4,26)
(4,27)-(4,28)
(4,35)-(4,37)
(4,43)-(4,66)
(4,43)-(4,50)
(4,44)-(4,49)
(4,44)-(4,45)
(4,47)-(4,48)
(4,54)-(4,66)
(4,55)-(4,57)
(4,58)-(4,65)
(4,59)-(4,60)
(4,63)-(4,64)
(5,2)-(5,6)
(5,2)-(5,4)
(5,5)-(5,6)
(7,16)-(10,20)
(8,2)-(10,20)
(8,24)-(9,61)
(9,4)-(9,61)
(9,21)-(9,24)
(9,35)-(9,61)
(9,35)-(9,48)
(9,49)-(9,59)
(9,50)-(9,51)
(9,55)-(9,58)
(9,60)-(9,61)
(10,2)-(10,20)
(10,2)-(10,15)
(10,16)-(10,18)
(10,19)-(10,20)
(12,15)-(12,72)
(12,19)-(12,72)
(12,22)-(12,51)
(12,22)-(12,33)
(12,23)-(12,30)
(12,31)-(12,32)
(12,36)-(12,51)
(12,37)-(12,48)
(12,49)-(12,50)
(12,57)-(12,61)
(12,67)-(12,72)
*)
