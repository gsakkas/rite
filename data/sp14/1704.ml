
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let x1 = List.length l1 in
  let x2 = List.length l2 in
  if x1 < x2 then x1 @ (clone 0 (x2 - x1)) else x2 @ (clone 0 (x1 - x2));;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let x1 = List.length l1 in
  let x2 = List.length l2 in
  if x1 < x2
  then ((l1 @ (clone 0 (x2 - x1))), l2)
  else (l1, (l2 @ (clone 0 (x1 - x2))));;

*)

(* changed spans
(7,18)-(7,20)
(7,18)-(7,42)
(7,48)-(7,50)
(7,48)-(7,72)
*)

(* type error slice
(5,2)-(7,72)
(5,11)-(5,22)
(5,11)-(5,25)
(6,2)-(7,72)
(6,11)-(6,22)
(6,11)-(6,25)
(7,18)-(7,20)
(7,18)-(7,42)
(7,21)-(7,22)
(7,48)-(7,50)
(7,48)-(7,72)
(7,51)-(7,52)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,65)
(2,43)-(2,44)
(2,48)-(2,65)
(2,49)-(2,54)
(2,55)-(2,56)
(2,57)-(2,64)
(2,58)-(2,59)
(2,62)-(2,63)
(4,12)-(7,72)
(4,15)-(7,72)
(5,2)-(7,72)
(5,11)-(5,25)
(5,11)-(5,22)
(5,23)-(5,25)
(6,2)-(7,72)
(6,11)-(6,25)
(6,11)-(6,22)
(6,23)-(6,25)
(7,2)-(7,72)
(7,5)-(7,12)
(7,5)-(7,7)
(7,10)-(7,12)
(7,18)-(7,42)
(7,21)-(7,22)
(7,18)-(7,20)
(7,23)-(7,42)
(7,24)-(7,29)
(7,30)-(7,31)
(7,32)-(7,41)
(7,33)-(7,35)
(7,38)-(7,40)
(7,48)-(7,72)
(7,51)-(7,52)
(7,48)-(7,50)
(7,53)-(7,72)
(7,54)-(7,59)
(7,60)-(7,61)
(7,62)-(7,71)
(7,63)-(7,65)
(7,68)-(7,70)
*)
