
let rec clone x n = if n > 0 then [x] @ (clone x (n - 1)) else [];;

let padZero l1 l2 =
  let len1 = List.length l1 in
  let len2 = List.length l2 in
  if len1 > len2
  then (clone 0 (len1 - l2)) @ l2
  else (clone 0 (len2 - len1)) @ l1;;


(* fix

let rec clone x n = if n > 0 then [x] @ (clone x (n - 1)) else [];;

let padZero l1 l2 =
  let len1 = List.length l1 in
  let len2 = List.length l2 in
  if len1 > len2
  then (l1, ((clone 0 (len1 - len2)) @ l2))
  else (((clone 0 (len2 - len1)) @ l1), l2);;

*)

(* changed spans
(8,7)-(8,33)
(8,24)-(8,26)
(9,7)-(9,35)
*)

(* type error slice
(6,13)-(6,24)
(6,13)-(6,27)
(6,25)-(6,27)
(8,16)-(8,27)
(8,24)-(8,26)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,28)
(2,23)-(2,24)
(2,27)-(2,28)
(2,34)-(2,57)
(2,38)-(2,39)
(2,34)-(2,37)
(2,35)-(2,36)
(2,40)-(2,57)
(2,41)-(2,46)
(2,47)-(2,48)
(2,49)-(2,56)
(2,50)-(2,51)
(2,54)-(2,55)
(2,63)-(2,65)
(4,12)-(9,35)
(4,15)-(9,35)
(5,2)-(9,35)
(5,13)-(5,27)
(5,13)-(5,24)
(5,25)-(5,27)
(6,2)-(9,35)
(6,13)-(6,27)
(6,13)-(6,24)
(6,25)-(6,27)
(7,2)-(9,35)
(7,5)-(7,16)
(7,5)-(7,9)
(7,12)-(7,16)
(8,7)-(8,33)
(8,29)-(8,30)
(8,7)-(8,28)
(8,8)-(8,13)
(8,14)-(8,15)
(8,16)-(8,27)
(8,17)-(8,21)
(8,24)-(8,26)
(8,31)-(8,33)
(9,7)-(9,35)
(9,31)-(9,32)
(9,7)-(9,30)
(9,8)-(9,13)
(9,14)-(9,15)
(9,16)-(9,29)
(9,17)-(9,21)
(9,24)-(9,28)
(9,33)-(9,35)
*)
