
let rec digitsOfInt n =
  if n < 0
  then []
  else
    if n < 10 then n else (let d = digitsOfInt (n / 10) in (n mod 10) :: d);;


(* fix

let rec digitsOfInt n =
  if n < 0
  then []
  else
    if n < 10 then [n] else (let d = digitsOfInt (n / 10) in (n mod 10) :: d);;

*)

(* changed spans
(6,19)-(6,20)
*)

(* type error slice
(3,5)-(3,6)
(3,5)-(3,10)
(3,9)-(3,10)
(6,4)-(6,75)
(6,19)-(6,20)
(6,26)-(6,75)
(6,59)-(6,74)
*)

(* all spans
(2,20)-(6,75)
(3,2)-(6,75)
(3,5)-(3,10)
(3,5)-(3,6)
(3,9)-(3,10)
(4,7)-(4,9)
(6,4)-(6,75)
(6,7)-(6,13)
(6,7)-(6,8)
(6,11)-(6,13)
(6,19)-(6,20)
(6,26)-(6,75)
(6,35)-(6,55)
(6,35)-(6,46)
(6,47)-(6,55)
(6,48)-(6,49)
(6,52)-(6,54)
(6,59)-(6,74)
(6,59)-(6,69)
(6,60)-(6,61)
(6,66)-(6,68)
(6,73)-(6,74)
*)
