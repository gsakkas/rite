
let rec digitsOfInt n =
  if n <= 0
  then []
  else (match n with | n' -> (n' mod 10) @ (digitsOfInt (n / 10)));;


(* fix

let rec digitsOfInt n =
  if n <= 0
  then []
  else (match n with | n' -> (n' mod 10) :: (digitsOfInt (n / 10)));;

*)

(* changed spans
(5,29)-(5,65)
(5,41)-(5,42)
*)

(* type error slice
(5,29)-(5,40)
(5,29)-(5,65)
(5,41)-(5,42)
*)

(* all spans
(2,20)-(5,66)
(3,2)-(5,66)
(3,5)-(3,11)
(3,5)-(3,6)
(3,10)-(3,11)
(4,7)-(4,9)
(5,7)-(5,66)
(5,14)-(5,15)
(5,29)-(5,65)
(5,41)-(5,42)
(5,29)-(5,40)
(5,30)-(5,32)
(5,37)-(5,39)
(5,43)-(5,65)
(5,44)-(5,55)
(5,56)-(5,64)
(5,57)-(5,58)
(5,61)-(5,63)
*)
