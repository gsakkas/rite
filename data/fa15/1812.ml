
let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t ->
        let seen' = seen in
        (if (List.mem h List.rev t) = false then h :: seen';
         (let rest' = t in helper (seen', rest'))) in
  List.rev (helper ([], l));;


(* fix

let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t -> let seen' = h :: seen in let rest' = t in helper (seen', rest') in
  List.rev (helper ([], l));;

*)

(* changed spans
(7,20)-(7,24)
(8,8)-(9,50)
(8,9)-(8,59)
(8,12)-(8,35)
(8,12)-(8,43)
(8,13)-(8,21)
(8,22)-(8,23)
(8,24)-(8,32)
(8,33)-(8,34)
(8,38)-(8,43)
(8,54)-(8,59)
*)

(* type error slice
(8,12)-(8,35)
(8,13)-(8,21)
*)

(* all spans
(2,21)-(10,27)
(3,2)-(10,27)
(3,18)-(9,50)
(4,4)-(9,50)
(4,10)-(4,14)
(5,12)-(5,16)
(7,8)-(9,50)
(7,20)-(7,24)
(8,8)-(9,50)
(8,9)-(8,59)
(8,12)-(8,43)
(8,12)-(8,35)
(8,13)-(8,21)
(8,22)-(8,23)
(8,24)-(8,32)
(8,33)-(8,34)
(8,38)-(8,43)
(8,49)-(8,59)
(8,49)-(8,50)
(8,54)-(8,59)
(9,9)-(9,49)
(9,22)-(9,23)
(9,27)-(9,48)
(9,27)-(9,33)
(9,34)-(9,48)
(9,35)-(9,40)
(9,42)-(9,47)
(10,2)-(10,27)
(10,2)-(10,10)
(10,11)-(10,27)
(10,12)-(10,18)
(10,19)-(10,26)
(10,20)-(10,22)
(10,24)-(10,25)
*)
