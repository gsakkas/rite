
let rec filter (l,a) =
  match l with
  | [] -> []
  | hd::tl -> if hd = a then filter (tl, a) else hd :: (filter (tl, a));;

let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t ->
        let seen' = h :: seen in
        let rest' = filter t h in helper (seen', rest') in
  List.rev (helper ([], l));;


(* fix

let rec filter l h =
  match l with
  | [] -> []
  | hd::tl -> if hd = h then hd :: (filter tl h) else filter tl h;;

let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t ->
        let seen' = h :: seen in
        let rest' = filter t h in helper (seen', rest') in
  List.rev (helper ([], l));;

*)

(* changed spans
(2,16)-(5,71)
(3,2)-(5,71)
(5,22)-(5,23)
(5,29)-(5,35)
(5,29)-(5,43)
(5,36)-(5,43)
(5,37)-(5,39)
(5,41)-(5,42)
(5,55)-(5,71)
(5,63)-(5,70)
(5,68)-(5,69)
(7,21)-(14,27)
*)

(* type error slice
(5,55)-(5,71)
(5,56)-(5,62)
(5,63)-(5,70)
(9,4)-(13,55)
(13,20)-(13,26)
(13,20)-(13,30)
(13,27)-(13,28)
*)

(* all spans
(2,16)-(5,71)
(3,2)-(5,71)
(3,8)-(3,9)
(4,10)-(4,12)
(5,14)-(5,71)
(5,17)-(5,23)
(5,17)-(5,19)
(5,22)-(5,23)
(5,29)-(5,43)
(5,29)-(5,35)
(5,36)-(5,43)
(5,37)-(5,39)
(5,41)-(5,42)
(5,49)-(5,71)
(5,49)-(5,51)
(5,55)-(5,71)
(5,56)-(5,62)
(5,63)-(5,70)
(5,64)-(5,66)
(5,68)-(5,69)
(7,21)-(14,27)
(8,2)-(14,27)
(8,18)-(13,55)
(9,4)-(13,55)
(9,10)-(9,14)
(10,12)-(10,16)
(12,8)-(13,55)
(12,20)-(12,29)
(12,20)-(12,21)
(12,25)-(12,29)
(13,8)-(13,55)
(13,20)-(13,30)
(13,20)-(13,26)
(13,27)-(13,28)
(13,29)-(13,30)
(13,34)-(13,55)
(13,34)-(13,40)
(13,41)-(13,55)
(13,42)-(13,47)
(13,49)-(13,54)
(14,2)-(14,27)
(14,2)-(14,10)
(14,11)-(14,27)
(14,12)-(14,18)
(14,19)-(14,26)
(14,20)-(14,22)
(14,24)-(14,25)
*)
