
let rec clone x n = match n with | 0 -> x | _ -> (clone x (n - 1)) :: x;;


(* fix

let rec clone x n =
  let x' = abs n in if x' > 0 then [x] @ (clone x (n - 1)) else [];;

*)

(* changed spans
(2,20)-(2,71)
(2,26)-(2,27)
(2,40)-(2,41)
(2,49)-(2,71)
(2,70)-(2,71)
*)

(* type error slice
(2,3)-(2,73)
(2,14)-(2,71)
(2,16)-(2,71)
(2,20)-(2,71)
(2,40)-(2,41)
(2,49)-(2,66)
(2,49)-(2,71)
(2,50)-(2,55)
(2,70)-(2,71)
*)

(* all spans
(2,14)-(2,71)
(2,16)-(2,71)
(2,20)-(2,71)
(2,26)-(2,27)
(2,40)-(2,41)
(2,49)-(2,71)
(2,49)-(2,66)
(2,50)-(2,55)
(2,56)-(2,57)
(2,58)-(2,65)
(2,59)-(2,60)
(2,63)-(2,64)
(2,70)-(2,71)
*)
