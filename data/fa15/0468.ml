
let rec wwhile (f,b) =
  let res = f b in
  match res with | (x,y) when y = true -> wwhile (f, x) | (x,y) -> x;;

let fixpoint (f,b) =
  let isFPoint s = ((f s) - s) < 0 in
  let iterate (t,y) = t y in
  let rec go r = if isFPoint r then r else go (iterate (f, r)) in
  wwhile (go, b);;


(* fix

let rec wwhile (f,b) =
  let res = f b in
  match res with | (x,y) when y = true -> wwhile (f, x) | (x,y) -> x;;

let fixpoint (f,b) =
  let gs x = let isFPoint s = ((f s) - s) < 0 in ((f x), (isFPoint x)) in
  wwhile (gs, b);;

*)

(* changed spans
(4,53)-(4,54)
(8,2)-(10,16)
(8,15)-(8,25)
(8,22)-(8,23)
(8,24)-(8,25)
(9,2)-(10,16)
(9,13)-(9,62)
(9,17)-(9,62)
(9,29)-(9,30)
(9,36)-(9,37)
(9,43)-(9,45)
(9,43)-(9,62)
(9,46)-(9,62)
(9,47)-(9,54)
(9,55)-(9,61)
(9,56)-(9,57)
(9,59)-(9,60)
(10,10)-(10,12)
*)

(* type error slice
(3,2)-(4,68)
(3,12)-(3,13)
(3,12)-(3,15)
(4,2)-(4,68)
(4,8)-(4,11)
(4,42)-(4,48)
(4,42)-(4,55)
(4,49)-(4,55)
(4,50)-(4,51)
(7,19)-(7,30)
(7,20)-(7,25)
(7,21)-(7,22)
(7,23)-(7,24)
(7,28)-(7,29)
(8,2)-(10,16)
(8,15)-(8,25)
(8,22)-(8,23)
(8,22)-(8,25)
(8,24)-(8,25)
(9,17)-(9,62)
(9,36)-(9,37)
(9,43)-(9,45)
(9,43)-(9,62)
(9,46)-(9,62)
(9,47)-(9,54)
(9,55)-(9,61)
(9,56)-(9,57)
(9,59)-(9,60)
(10,2)-(10,8)
(10,2)-(10,16)
(10,9)-(10,16)
(10,10)-(10,12)
*)

(* all spans
(2,16)-(4,68)
(3,2)-(4,68)
(3,12)-(3,15)
(3,12)-(3,13)
(3,14)-(3,15)
(4,2)-(4,68)
(4,8)-(4,11)
(4,30)-(4,38)
(4,30)-(4,31)
(4,34)-(4,38)
(4,42)-(4,55)
(4,42)-(4,48)
(4,49)-(4,55)
(4,50)-(4,51)
(4,53)-(4,54)
(4,67)-(4,68)
(6,14)-(10,16)
(7,2)-(10,16)
(7,15)-(7,34)
(7,19)-(7,34)
(7,19)-(7,30)
(7,20)-(7,25)
(7,21)-(7,22)
(7,23)-(7,24)
(7,28)-(7,29)
(7,33)-(7,34)
(8,2)-(10,16)
(8,15)-(8,25)
(8,22)-(8,25)
(8,22)-(8,23)
(8,24)-(8,25)
(9,2)-(10,16)
(9,13)-(9,62)
(9,17)-(9,62)
(9,20)-(9,30)
(9,20)-(9,28)
(9,29)-(9,30)
(9,36)-(9,37)
(9,43)-(9,62)
(9,43)-(9,45)
(9,46)-(9,62)
(9,47)-(9,54)
(9,55)-(9,61)
(9,56)-(9,57)
(9,59)-(9,60)
(10,2)-(10,16)
(10,2)-(10,8)
(10,9)-(10,16)
(10,10)-(10,12)
(10,14)-(10,15)
*)
