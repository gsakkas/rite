
let carry x y = (x * y) / 10;;

let remainder x y = (x * y) mod 10;;

let rec mulByDigit i l =
  if (i = 0) || (i > 9)
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> []
          | h'::t' ->
              if (List.length t') > 0
              then mulByDigit @ [(carry h i) + (remainder h' i)]
              else [remainder h i]));;


(* fix

let carry x y = (x * y) / 10;;

let remainder x y = (x * y) mod 10;;

let rec mulByDigit i l =
  if (i = 0) || (i > 9)
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> []
          | h'::t' ->
              if (List.length t') > 0
              then (mulByDigit i t) @ [(carry h i) + (remainder h' i)]
              else [remainder h i]));;

*)

(* changed spans
(17,19)-(17,29)
(17,32)-(17,64)
*)

(* type error slice
(6,3)-(18,38)
(6,19)-(18,36)
(17,19)-(17,29)
(17,19)-(17,64)
(17,30)-(17,31)
*)

(* all spans
(2,10)-(2,28)
(2,12)-(2,28)
(2,16)-(2,28)
(2,16)-(2,23)
(2,17)-(2,18)
(2,21)-(2,22)
(2,26)-(2,28)
(4,14)-(4,34)
(4,16)-(4,34)
(4,20)-(4,34)
(4,20)-(4,27)
(4,21)-(4,22)
(4,25)-(4,26)
(4,32)-(4,34)
(6,19)-(18,36)
(6,21)-(18,36)
(7,2)-(18,36)
(7,5)-(7,23)
(7,5)-(7,12)
(7,6)-(7,7)
(7,10)-(7,11)
(7,16)-(7,23)
(7,17)-(7,18)
(7,21)-(7,22)
(8,7)-(8,9)
(10,4)-(18,36)
(10,11)-(10,21)
(10,11)-(10,19)
(10,20)-(10,21)
(11,13)-(11,15)
(13,9)-(18,35)
(13,16)-(13,17)
(14,18)-(14,20)
(16,14)-(18,34)
(16,17)-(16,37)
(16,17)-(16,33)
(16,18)-(16,29)
(16,30)-(16,32)
(16,36)-(16,37)
(17,19)-(17,64)
(17,30)-(17,31)
(17,19)-(17,29)
(17,32)-(17,64)
(17,33)-(17,63)
(17,33)-(17,44)
(17,34)-(17,39)
(17,40)-(17,41)
(17,42)-(17,43)
(17,47)-(17,63)
(17,48)-(17,57)
(17,58)-(17,60)
(17,61)-(17,62)
(18,19)-(18,34)
(18,20)-(18,33)
(18,20)-(18,29)
(18,30)-(18,31)
(18,32)-(18,33)
*)
