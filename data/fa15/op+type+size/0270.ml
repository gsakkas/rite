
let rec digitsOfInt n =
  if n <= 0 then [] else [] :: (digitsOfInt (n / 10)) :: (n mod 10);;


(* fix

let rec digitsOfInt n =
  if n <= 0 then [] else (n mod 10) :: (digitsOfInt (n / 10));;

*)

(* changed spans
(3,25)-(3,27)
(3,31)-(3,53)
(3,31)-(3,67)
(3,57)-(3,67)
(3,58)-(3,59)
(3,64)-(3,66)
*)

(* type error slice
(2,3)-(3,69)
(2,20)-(3,67)
(3,2)-(3,67)
(3,25)-(3,67)
(3,25)-(3,67)
(3,31)-(3,53)
(3,31)-(3,67)
(3,31)-(3,67)
(3,31)-(3,67)
(3,32)-(3,43)
(3,57)-(3,67)
*)

(* all spans
(2,20)-(3,67)
(3,2)-(3,67)
(3,5)-(3,11)
(3,5)-(3,6)
(3,10)-(3,11)
(3,17)-(3,19)
(3,25)-(3,67)
(3,25)-(3,27)
(3,31)-(3,67)
(3,31)-(3,53)
(3,32)-(3,43)
(3,44)-(3,52)
(3,45)-(3,46)
(3,49)-(3,51)
(3,57)-(3,67)
(3,58)-(3,59)
(3,64)-(3,66)
*)
