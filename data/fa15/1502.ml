
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  if depth > 0
  then
    match rand (1, 5) with
    | _ -> buildSine buildX
    | 1 -> buildSine (build (rand, (depth - 1)))
    | 2 -> buildCosine (build (rand, (depth - 1)))
    | 3 ->
        buildAverage
          ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
    | 4 ->
        buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
    | 5 ->
        buildThresh
          ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
            (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  else
    (match rand (1, 2) with
     | _ -> buildY ()
     | 1 -> buildX ()
     | 2 -> buildY ());;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  if depth > 0
  then
    match rand (1, 5) with
    | _ -> buildSine (buildX ())
    | 1 -> buildSine (build (rand, (depth - 1)))
    | 2 -> buildCosine (build (rand, (depth - 1)))
    | 3 ->
        buildAverage
          ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
    | 4 ->
        buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
    | 5 ->
        buildThresh
          ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
            (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  else
    (match rand (1, 2) with
     | _ -> buildY ()
     | 1 -> buildX ()
     | 2 -> buildY ());;

*)

(* changed spans
(29,21)-(29,27)
(30,11)-(30,48)
*)

(* type error slice
(15,3)-(15,26)
(15,14)-(15,24)
(15,18)-(15,24)
(15,23)-(15,24)
(21,3)-(21,22)
(21,11)-(21,20)
(29,11)-(29,20)
(29,11)-(29,27)
(29,21)-(29,27)
*)

(* all spans
(11,18)-(11,43)
(11,27)-(11,43)
(11,36)-(11,38)
(11,40)-(11,42)
(13,16)-(13,28)
(13,20)-(13,28)
(13,27)-(13,28)
(15,14)-(15,24)
(15,18)-(15,24)
(15,23)-(15,24)
(17,17)-(17,67)
(17,38)-(17,67)
(17,46)-(17,47)
(17,49)-(17,50)
(17,52)-(17,58)
(17,60)-(17,66)
(19,16)-(19,39)
(19,25)-(19,39)
(19,32)-(19,34)
(19,36)-(19,38)
(21,11)-(21,20)
(21,16)-(21,20)
(23,11)-(23,20)
(23,16)-(23,20)
(25,15)-(45,22)
(26,2)-(45,22)
(26,5)-(26,14)
(26,5)-(26,10)
(26,13)-(26,14)
(28,4)-(40,69)
(28,10)-(28,21)
(28,10)-(28,14)
(28,15)-(28,21)
(28,16)-(28,17)
(28,19)-(28,20)
(29,11)-(29,27)
(29,11)-(29,20)
(29,21)-(29,27)
(30,11)-(30,48)
(30,11)-(30,20)
(30,21)-(30,48)
(30,22)-(30,27)
(30,28)-(30,47)
(30,29)-(30,33)
(30,35)-(30,46)
(30,36)-(30,41)
(30,44)-(30,45)
(31,11)-(31,50)
(31,11)-(31,22)
(31,23)-(31,50)
(31,24)-(31,29)
(31,30)-(31,49)
(31,31)-(31,35)
(31,37)-(31,48)
(31,38)-(31,43)
(31,46)-(31,47)
(33,8)-(34,68)
(33,8)-(33,20)
(34,10)-(34,68)
(34,11)-(34,38)
(34,12)-(34,17)
(34,18)-(34,37)
(34,19)-(34,23)
(34,25)-(34,36)
(34,26)-(34,31)
(34,34)-(34,35)
(34,40)-(34,67)
(34,41)-(34,46)
(34,47)-(34,66)
(34,48)-(34,52)
(34,54)-(34,65)
(34,55)-(34,60)
(34,63)-(34,64)
(36,8)-(36,77)
(36,8)-(36,18)
(36,19)-(36,77)
(36,20)-(36,47)
(36,21)-(36,26)
(36,27)-(36,46)
(36,28)-(36,32)
(36,34)-(36,45)
(36,35)-(36,40)
(36,43)-(36,44)
(36,49)-(36,76)
(36,50)-(36,55)
(36,56)-(36,75)
(36,57)-(36,61)
(36,63)-(36,74)
(36,64)-(36,69)
(36,72)-(36,73)
(38,8)-(40,69)
(38,8)-(38,19)
(39,10)-(40,69)
(39,11)-(39,38)
(39,12)-(39,17)
(39,18)-(39,37)
(39,19)-(39,23)
(39,25)-(39,36)
(39,26)-(39,31)
(39,34)-(39,35)
(39,40)-(39,67)
(39,41)-(39,46)
(39,47)-(39,66)
(39,48)-(39,52)
(39,54)-(39,65)
(39,55)-(39,60)
(39,63)-(39,64)
(40,12)-(40,39)
(40,13)-(40,18)
(40,19)-(40,38)
(40,20)-(40,24)
(40,26)-(40,37)
(40,27)-(40,32)
(40,35)-(40,36)
(40,41)-(40,68)
(40,42)-(40,47)
(40,48)-(40,67)
(40,49)-(40,53)
(40,55)-(40,66)
(40,56)-(40,61)
(40,64)-(40,65)
(42,4)-(45,22)
(42,11)-(42,22)
(42,11)-(42,15)
(42,16)-(42,22)
(42,17)-(42,18)
(42,20)-(42,21)
(43,12)-(43,21)
(43,12)-(43,18)
(43,19)-(43,21)
(44,12)-(44,21)
(44,12)-(44,18)
(44,19)-(44,21)
(45,12)-(45,21)
(45,12)-(45,18)
(45,19)-(45,21)
*)
