
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match depth with
  | 0 -> (match rand (0, 1) with | 0 -> VarX | 1 -> VarY)
  | n ->
      (match rand (0, 6) with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (rand, (depth - 1)))
       | 3 -> buildCosine (build (rand, (depth - 1)))
       | 4 ->
           buildAverage
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 5 ->
           buildTimes
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 6 ->
           buildThresh
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1)))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match depth with
  | 0 -> (match rand (0, 1) with | 0 -> VarX | 1 -> VarY)
  | n ->
      (match rand (0, 6) with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (rand, (depth - 1)))
       | 3 -> buildCosine (build (rand, (depth - 1)))
       | 4 ->
           buildAverage
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 5 ->
           buildTimes
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 6 ->
           buildThresh
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1))), (build (rand, (depth - 1)))));;

*)

(* changed spans
(42,13)-(44,43)
(42,14)-(42,41)
(42,15)-(42,20)
(42,21)-(42,40)
(42,22)-(42,26)
(42,28)-(42,39)
(42,29)-(42,34)
(42,37)-(42,38)
*)

(* type error slice
(17,3)-(17,69)
(17,17)-(17,67)
(41,11)-(41,22)
(41,11)-(44,43)
(42,13)-(44,43)
*)

(* all spans
(11,18)-(11,43)
(11,27)-(11,43)
(11,36)-(11,38)
(11,40)-(11,42)
(13,16)-(13,28)
(13,20)-(13,28)
(13,27)-(13,28)
(15,14)-(15,24)
(15,18)-(15,24)
(15,23)-(15,24)
(17,17)-(17,67)
(17,38)-(17,67)
(17,46)-(17,47)
(17,49)-(17,50)
(17,52)-(17,58)
(17,60)-(17,66)
(19,16)-(19,39)
(19,25)-(19,39)
(19,32)-(19,34)
(19,36)-(19,38)
(21,11)-(21,20)
(21,16)-(21,20)
(23,11)-(23,20)
(23,16)-(23,20)
(25,15)-(44,44)
(26,2)-(44,44)
(26,8)-(26,13)
(27,9)-(27,57)
(27,16)-(27,27)
(27,16)-(27,20)
(27,21)-(27,27)
(27,22)-(27,23)
(27,25)-(27,26)
(27,40)-(27,44)
(27,52)-(27,56)
(29,6)-(44,44)
(29,13)-(29,24)
(29,13)-(29,17)
(29,18)-(29,24)
(29,19)-(29,20)
(29,22)-(29,23)
(30,14)-(30,23)
(30,14)-(30,20)
(30,21)-(30,23)
(31,14)-(31,23)
(31,14)-(31,20)
(31,21)-(31,23)
(32,14)-(32,51)
(32,14)-(32,23)
(32,24)-(32,51)
(32,25)-(32,30)
(32,31)-(32,50)
(32,32)-(32,36)
(32,38)-(32,49)
(32,39)-(32,44)
(32,47)-(32,48)
(33,14)-(33,53)
(33,14)-(33,25)
(33,26)-(33,53)
(33,27)-(33,32)
(33,33)-(33,52)
(33,34)-(33,38)
(33,40)-(33,51)
(33,41)-(33,46)
(33,49)-(33,50)
(35,11)-(36,71)
(35,11)-(35,23)
(36,13)-(36,71)
(36,14)-(36,41)
(36,15)-(36,20)
(36,21)-(36,40)
(36,22)-(36,26)
(36,28)-(36,39)
(36,29)-(36,34)
(36,37)-(36,38)
(36,43)-(36,70)
(36,44)-(36,49)
(36,50)-(36,69)
(36,51)-(36,55)
(36,57)-(36,68)
(36,58)-(36,63)
(36,66)-(36,67)
(38,11)-(39,71)
(38,11)-(38,21)
(39,13)-(39,71)
(39,14)-(39,41)
(39,15)-(39,20)
(39,21)-(39,40)
(39,22)-(39,26)
(39,28)-(39,39)
(39,29)-(39,34)
(39,37)-(39,38)
(39,43)-(39,70)
(39,44)-(39,49)
(39,50)-(39,69)
(39,51)-(39,55)
(39,57)-(39,68)
(39,58)-(39,63)
(39,66)-(39,67)
(41,11)-(44,43)
(41,11)-(41,22)
(42,13)-(44,43)
(42,14)-(42,41)
(42,15)-(42,20)
(42,21)-(42,40)
(42,22)-(42,26)
(42,28)-(42,39)
(42,29)-(42,34)
(42,37)-(42,38)
(42,43)-(42,70)
(42,44)-(42,49)
(42,50)-(42,69)
(42,51)-(42,55)
(42,57)-(42,68)
(42,58)-(42,63)
(42,66)-(42,67)
(43,15)-(43,42)
(43,16)-(43,21)
(43,22)-(43,41)
(43,23)-(43,27)
(43,29)-(43,40)
(43,30)-(43,35)
(43,38)-(43,39)
(43,44)-(43,71)
(43,45)-(43,50)
(43,51)-(43,70)
(43,52)-(43,56)
(43,58)-(43,69)
(43,59)-(43,64)
(43,67)-(43,68)
(44,15)-(44,42)
(44,16)-(44,21)
(44,22)-(44,41)
(44,23)-(44,27)
(44,29)-(44,40)
(44,30)-(44,35)
(44,38)-(44,39)
*)
