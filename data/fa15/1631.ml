
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then (((clone 0 ((List.length l2) - (List.length l1))) @ l1), l2)
  else (l1, ((clone 0 ((List.length l1) - (List.length l2))) @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      if let (carry,ans) = a in let (y,z) = x in ((y + z) + carry) > 9
      then
        let (carry,ans) = a in
        clone (1, (let (y,z) = x in [((y + z) + carry) mod 10] @ ans)) 2
      else
        (let (carry,ans) = a in
         (0, (let (y,z) = x in [(y + z) + carry] @ ans))) in
    let base = (0, []) in
    let args = List.rev (List.combine l1 l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then (((clone 0 ((List.length l2) - (List.length l1))) @ l1), l2)
  else (l1, ((clone 0 ((List.length l1) - (List.length l2))) @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      if let (carry,ans) = a in let (y,z) = x in ((y + z) + carry) > 10
      then
        let (carry,ans) = a in
        (1, (let (y,z) = x in [((y + z) + carry) mod 10] @ ans))
      else
        if (let (carry,ans) = a in let (y,z) = x in ((y + z) + carry) = 10)
        then (let (carry,ans) = a in (1, ([9] @ ans)))
        else
          (let (carry,ans) = a in
           (0, (let (y,z) = x in [(y + z) + carry] @ ans))) in
    let base = (0, []) in
    let args = List.rev (List.combine l1 l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

*)

(* changed spans
(15,69)-(15,70)
(18,8)-(18,13)
(18,8)-(18,72)
(18,71)-(18,72)
(21,9)-(21,56)
(21,10)-(21,11)
*)

(* type error slice
(6,9)-(6,56)
(6,10)-(6,15)
(6,16)-(6,17)
(18,8)-(18,13)
(18,8)-(18,72)
(18,14)-(18,70)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,65)
(2,43)-(2,44)
(2,48)-(2,65)
(2,49)-(2,54)
(2,55)-(2,56)
(2,57)-(2,64)
(2,58)-(2,59)
(2,62)-(2,63)
(4,12)-(7,67)
(4,15)-(7,67)
(5,2)-(7,67)
(5,5)-(5,40)
(5,5)-(5,21)
(5,6)-(5,17)
(5,18)-(5,20)
(5,24)-(5,40)
(5,25)-(5,36)
(5,37)-(5,39)
(6,7)-(6,67)
(6,8)-(6,62)
(6,57)-(6,58)
(6,9)-(6,56)
(6,10)-(6,15)
(6,16)-(6,17)
(6,18)-(6,55)
(6,19)-(6,35)
(6,20)-(6,31)
(6,32)-(6,34)
(6,38)-(6,54)
(6,39)-(6,50)
(6,51)-(6,53)
(6,59)-(6,61)
(6,64)-(6,66)
(7,7)-(7,67)
(7,8)-(7,10)
(7,12)-(7,66)
(7,61)-(7,62)
(7,13)-(7,60)
(7,14)-(7,19)
(7,20)-(7,21)
(7,22)-(7,59)
(7,23)-(7,39)
(7,24)-(7,35)
(7,36)-(7,38)
(7,42)-(7,58)
(7,43)-(7,54)
(7,55)-(7,57)
(7,63)-(7,65)
(9,19)-(10,69)
(10,2)-(10,69)
(10,8)-(10,9)
(10,23)-(10,25)
(10,36)-(10,69)
(10,39)-(10,44)
(10,39)-(10,40)
(10,43)-(10,44)
(10,50)-(10,62)
(10,50)-(10,60)
(10,61)-(10,62)
(10,68)-(10,69)
(12,11)-(25,34)
(12,14)-(25,34)
(13,2)-(25,34)
(13,11)-(24,51)
(14,4)-(24,51)
(14,10)-(21,57)
(14,12)-(21,57)
(15,6)-(21,57)
(15,9)-(15,70)
(15,27)-(15,28)
(15,32)-(15,70)
(15,44)-(15,45)
(15,49)-(15,70)
(15,49)-(15,66)
(15,50)-(15,57)
(15,51)-(15,52)
(15,55)-(15,56)
(15,60)-(15,65)
(15,69)-(15,70)
(17,8)-(18,72)
(17,26)-(17,27)
(18,8)-(18,72)
(18,8)-(18,13)
(18,14)-(18,70)
(18,15)-(18,16)
(18,18)-(18,69)
(18,31)-(18,32)
(18,36)-(18,68)
(18,63)-(18,64)
(18,36)-(18,62)
(18,37)-(18,61)
(18,37)-(18,54)
(18,38)-(18,45)
(18,39)-(18,40)
(18,43)-(18,44)
(18,48)-(18,53)
(18,59)-(18,61)
(18,65)-(18,68)
(18,71)-(18,72)
(20,8)-(21,57)
(20,27)-(20,28)
(21,9)-(21,56)
(21,10)-(21,11)
(21,13)-(21,55)
(21,26)-(21,27)
(21,31)-(21,54)
(21,49)-(21,50)
(21,31)-(21,48)
(21,32)-(21,47)
(21,32)-(21,39)
(21,33)-(21,34)
(21,37)-(21,38)
(21,42)-(21,47)
(21,51)-(21,54)
(22,4)-(24,51)
(22,15)-(22,22)
(22,16)-(22,17)
(22,19)-(22,21)
(23,4)-(24,51)
(23,15)-(23,44)
(23,15)-(23,23)
(23,24)-(23,44)
(23,25)-(23,37)
(23,38)-(23,40)
(23,41)-(23,43)
(24,4)-(24,51)
(24,18)-(24,44)
(24,18)-(24,32)
(24,33)-(24,34)
(24,35)-(24,39)
(24,40)-(24,44)
(24,48)-(24,51)
(25,2)-(25,34)
(25,2)-(25,12)
(25,13)-(25,34)
(25,14)-(25,17)
(25,18)-(25,33)
(25,19)-(25,26)
(25,27)-(25,29)
(25,30)-(25,32)
*)
