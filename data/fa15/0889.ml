
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (sep ^ x) in
      let base = h in let l = t in List.fold_left f base l;;

let stringOfList f l =
  match l with
  | [] -> "[]"
  | x::[] -> "[" ^ (x ^ "]")
  | l -> sepConcat (";" (List.map (f, l)));;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (sep ^ x) in
      let base = h in let l = t in List.fold_left f base l;;

let stringOfList f l =
  match l with
  | [] -> "[]"
  | x::[] -> "[" ^ (x ^ "]")
  | l -> sepConcat "" (List.map f l);;

*)

(* changed spans
(13,9)-(13,42)
(13,19)-(13,42)
(13,20)-(13,23)
(13,24)-(13,41)
(13,25)-(13,33)
(13,34)-(13,40)
*)

(* type error slice
(2,3)-(7,60)
(2,18)-(7,58)
(2,22)-(7,58)
(10,2)-(13,42)
(11,10)-(11,14)
(13,9)-(13,18)
(13,9)-(13,42)
(13,19)-(13,42)
(13,20)-(13,23)
(13,24)-(13,41)
(13,25)-(13,33)
(13,34)-(13,40)
*)

(* all spans
(2,18)-(7,58)
(2,22)-(7,58)
(3,2)-(7,58)
(3,8)-(3,10)
(4,10)-(4,12)
(6,6)-(7,58)
(6,12)-(6,31)
(6,14)-(6,31)
(6,18)-(6,31)
(6,20)-(6,21)
(6,18)-(6,19)
(6,22)-(6,31)
(6,27)-(6,28)
(6,23)-(6,26)
(6,29)-(6,30)
(7,6)-(7,58)
(7,17)-(7,18)
(7,22)-(7,58)
(7,30)-(7,31)
(7,35)-(7,58)
(7,35)-(7,49)
(7,50)-(7,51)
(7,52)-(7,56)
(7,57)-(7,58)
(9,17)-(13,42)
(9,19)-(13,42)
(10,2)-(13,42)
(10,8)-(10,9)
(11,10)-(11,14)
(12,13)-(12,28)
(12,17)-(12,18)
(12,13)-(12,16)
(12,19)-(12,28)
(12,22)-(12,23)
(12,20)-(12,21)
(12,24)-(12,27)
(13,9)-(13,42)
(13,9)-(13,18)
(13,19)-(13,42)
(13,20)-(13,23)
(13,24)-(13,41)
(13,25)-(13,33)
(13,34)-(13,40)
(13,35)-(13,36)
(13,38)-(13,39)
*)
