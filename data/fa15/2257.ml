
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x x' = a ^ (x' ^ x) in
      let base = h in let l = sl in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (sep ^ x) in
      let base = h in let l = sl in List.fold_left f base l;;

*)

(* changed spans
(6,16)-(6,33)
(6,26)-(6,28)
*)

(* type error slice
(6,6)-(7,59)
(6,12)-(6,33)
(6,14)-(6,33)
(6,16)-(6,33)
(6,21)-(6,22)
(6,21)-(6,33)
(6,23)-(6,24)
(7,36)-(7,50)
(7,36)-(7,59)
(7,51)-(7,52)
*)

(* all spans
(2,18)-(7,59)
(2,22)-(7,59)
(3,2)-(7,59)
(3,8)-(3,10)
(4,10)-(4,12)
(6,6)-(7,59)
(6,12)-(6,33)
(6,14)-(6,33)
(6,16)-(6,33)
(6,21)-(6,33)
(6,23)-(6,24)
(6,21)-(6,22)
(6,25)-(6,33)
(6,29)-(6,30)
(6,26)-(6,28)
(6,31)-(6,32)
(7,6)-(7,59)
(7,17)-(7,18)
(7,22)-(7,59)
(7,30)-(7,32)
(7,36)-(7,59)
(7,36)-(7,50)
(7,51)-(7,52)
(7,53)-(7,57)
(7,58)-(7,59)
*)
