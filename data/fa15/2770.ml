
let carry x y = (x * y) / 10;;

let remainder x y = (x * y) mod 10;;

let rec mulByDigit i l =
  if (i = 0) || (i > 9)
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> if (i * h) > 10 then [carry i h] @ [remainder i h] else []
          | h'::t' ->
              let multNext x = match x with | [] -> 0 | h1::t1 -> h1 in
              if (i * h) > 10
              then
                (mulByDigit i t') @
                  ([(carry i h') + (remainder h' i)] @ [remainder h i])
              else i * h));;


(* fix

let carry x y = (x * y) / 10;;

let remainder x y = (x * y) mod 10;;

let rec mulByDigit i l =
  if (i = 0) || (i > 9)
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> if (i * h) > 10 then [carry i h] @ [remainder i h] else []
          | h'::t' ->
              let multNext x = match x with | [] -> 0 | h1::t1 -> h1 in
              if (i * h) > 10
              then
                (mulByDigit i t') @
                  ([(carry i h') + (remainder h' i)] @ [remainder h i])
              else [i * h]));;

*)

(* changed spans
(21,19)-(21,24)
*)

(* type error slice
(17,14)-(21,24)
(19,16)-(20,71)
(19,34)-(19,35)
(21,19)-(21,24)
*)

(* all spans
(2,10)-(2,28)
(2,12)-(2,28)
(2,16)-(2,28)
(2,16)-(2,23)
(2,17)-(2,18)
(2,21)-(2,22)
(2,26)-(2,28)
(4,14)-(4,34)
(4,16)-(4,34)
(4,20)-(4,34)
(4,20)-(4,27)
(4,21)-(4,22)
(4,25)-(4,26)
(4,32)-(4,34)
(6,19)-(21,26)
(6,21)-(21,26)
(7,2)-(21,26)
(7,5)-(7,23)
(7,5)-(7,12)
(7,6)-(7,7)
(7,10)-(7,11)
(7,16)-(7,23)
(7,17)-(7,18)
(7,21)-(7,22)
(8,7)-(8,9)
(10,4)-(21,26)
(10,11)-(10,21)
(10,11)-(10,19)
(10,20)-(10,21)
(11,13)-(11,15)
(13,9)-(21,25)
(13,16)-(13,17)
(14,18)-(14,76)
(14,21)-(14,33)
(14,21)-(14,28)
(14,22)-(14,23)
(14,26)-(14,27)
(14,31)-(14,33)
(14,39)-(14,68)
(14,51)-(14,52)
(14,39)-(14,50)
(14,40)-(14,49)
(14,40)-(14,45)
(14,46)-(14,47)
(14,48)-(14,49)
(14,53)-(14,68)
(14,54)-(14,67)
(14,54)-(14,63)
(14,64)-(14,65)
(14,66)-(14,67)
(14,74)-(14,76)
(16,14)-(21,24)
(16,27)-(16,68)
(16,31)-(16,68)
(16,37)-(16,38)
(16,52)-(16,53)
(16,66)-(16,68)
(17,14)-(21,24)
(17,17)-(17,29)
(17,17)-(17,24)
(17,18)-(17,19)
(17,22)-(17,23)
(17,27)-(17,29)
(19,16)-(20,71)
(19,34)-(19,35)
(19,16)-(19,33)
(19,17)-(19,27)
(19,28)-(19,29)
(19,30)-(19,32)
(20,18)-(20,71)
(20,53)-(20,54)
(20,19)-(20,52)
(20,20)-(20,51)
(20,20)-(20,32)
(20,21)-(20,26)
(20,27)-(20,28)
(20,29)-(20,31)
(20,35)-(20,51)
(20,36)-(20,45)
(20,46)-(20,48)
(20,49)-(20,50)
(20,55)-(20,70)
(20,56)-(20,69)
(20,56)-(20,65)
(20,66)-(20,67)
(20,68)-(20,69)
(21,19)-(21,24)
(21,19)-(21,20)
(21,23)-(21,24)
*)
