
let remainder x y = if (x * y) > 10 then (x * y) mod 10 else 0;;

let rec mulByDigit i l =
  if i <= 0
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> [remainder i h]
          | h'::t' -> (h' * i) @ (mulByDigit i t')));;


(* fix

let remainder x y = if (x * y) > 10 then (x * y) mod 10 else 0;;

let rec mulByDigit i l =
  if i <= 0
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> [remainder i h]
          | h'::t' -> [h' * i] @ (mulByDigit i t')));;

*)

(* changed spans
(13,22)-(13,30)
*)

(* type error slice
(13,22)-(13,30)
(13,22)-(13,50)
(13,31)-(13,32)
*)

(* all spans
(2,14)-(2,62)
(2,16)-(2,62)
(2,20)-(2,62)
(2,23)-(2,35)
(2,23)-(2,30)
(2,24)-(2,25)
(2,28)-(2,29)
(2,33)-(2,35)
(2,41)-(2,55)
(2,41)-(2,48)
(2,42)-(2,43)
(2,46)-(2,47)
(2,53)-(2,55)
(2,61)-(2,62)
(4,19)-(13,52)
(4,21)-(13,52)
(5,2)-(13,52)
(5,5)-(5,11)
(5,5)-(5,6)
(5,10)-(5,11)
(6,7)-(6,9)
(8,4)-(13,52)
(8,11)-(8,21)
(8,11)-(8,19)
(8,20)-(8,21)
(9,13)-(9,15)
(11,9)-(13,51)
(11,16)-(11,17)
(12,18)-(12,33)
(12,19)-(12,32)
(12,19)-(12,28)
(12,29)-(12,30)
(12,31)-(12,32)
(13,22)-(13,50)
(13,31)-(13,32)
(13,22)-(13,30)
(13,23)-(13,25)
(13,28)-(13,29)
(13,33)-(13,50)
(13,34)-(13,44)
(13,45)-(13,46)
(13,47)-(13,49)
*)
