
let rec mulByDigit i l =
  match l with
  | [] -> []
  | h::l' ->
      let res = mulByDigit i l' in
      if (List.length res) = 0
      then (if (h * i) > 9 then [(h * i) / 10; (h * i) mod 10] else [h * i])
      else
        if (List.length res) = l'
        then
          (if (h * i) > 9
           then ((h * i) / 10) :: ((h * i) mod 10) :: res
           else (h * i) :: res)
        else
          (match res with
           | h'::res' ->
               if ((h * i) + h') > 9
               then (((h * i) + h') / 10) :: (((h * i) + h') mod 10) :: res'
               else ((h * i) + h') :: res);;


(* fix

let rec mulByDigit i l =
  match l with
  | [] -> []
  | h::l' ->
      let res = mulByDigit i l' in
      if (List.length res) = 0
      then (if (h * i) > 9 then [(h * i) / 10; (h * i) mod 10] else [h * i])
      else
        if (List.length res) = (List.length l')
        then
          (if (h * i) > 9
           then ((h * i) / 10) :: ((h * i) mod 10) :: res
           else (h * i) :: res)
        else
          (match res with
           | h'::res' ->
               if ((h * i) + h') > 9
               then (((h * i) + h') / 10) :: (((h * i) + h') mod 10) :: res'
               else ((h * i) + h') :: res);;

*)

(* changed spans
(10,31)-(10,33)
*)

(* type error slice
(3,2)-(20,42)
(10,11)-(10,28)
(10,11)-(10,33)
(10,12)-(10,23)
(10,31)-(10,33)
*)

(* all spans
(2,19)-(20,42)
(2,21)-(20,42)
(3,2)-(20,42)
(3,8)-(3,9)
(4,10)-(4,12)
(6,6)-(20,42)
(6,16)-(6,31)
(6,16)-(6,26)
(6,27)-(6,28)
(6,29)-(6,31)
(7,6)-(20,42)
(7,9)-(7,30)
(7,9)-(7,26)
(7,10)-(7,21)
(7,22)-(7,25)
(7,29)-(7,30)
(8,11)-(8,76)
(8,15)-(8,26)
(8,15)-(8,22)
(8,16)-(8,17)
(8,20)-(8,21)
(8,25)-(8,26)
(8,32)-(8,62)
(8,33)-(8,45)
(8,33)-(8,40)
(8,34)-(8,35)
(8,38)-(8,39)
(8,43)-(8,45)
(8,47)-(8,61)
(8,47)-(8,54)
(8,48)-(8,49)
(8,52)-(8,53)
(8,59)-(8,61)
(8,68)-(8,75)
(8,69)-(8,74)
(8,69)-(8,70)
(8,73)-(8,74)
(10,8)-(20,42)
(10,11)-(10,33)
(10,11)-(10,28)
(10,12)-(10,23)
(10,24)-(10,27)
(10,31)-(10,33)
(12,10)-(14,31)
(12,14)-(12,25)
(12,14)-(12,21)
(12,15)-(12,16)
(12,19)-(12,20)
(12,24)-(12,25)
(13,16)-(13,57)
(13,16)-(13,30)
(13,17)-(13,24)
(13,18)-(13,19)
(13,22)-(13,23)
(13,27)-(13,29)
(13,34)-(13,57)
(13,34)-(13,50)
(13,35)-(13,42)
(13,36)-(13,37)
(13,40)-(13,41)
(13,47)-(13,49)
(13,54)-(13,57)
(14,16)-(14,30)
(14,16)-(14,23)
(14,17)-(14,18)
(14,21)-(14,22)
(14,27)-(14,30)
(16,10)-(20,42)
(16,17)-(16,20)
(18,15)-(20,41)
(18,18)-(18,36)
(18,18)-(18,32)
(18,19)-(18,26)
(18,20)-(18,21)
(18,24)-(18,25)
(18,29)-(18,31)
(18,35)-(18,36)
(19,20)-(19,76)
(19,20)-(19,41)
(19,21)-(19,35)
(19,22)-(19,29)
(19,23)-(19,24)
(19,27)-(19,28)
(19,32)-(19,34)
(19,38)-(19,40)
(19,45)-(19,76)
(19,45)-(19,68)
(19,46)-(19,60)
(19,47)-(19,54)
(19,48)-(19,49)
(19,52)-(19,53)
(19,57)-(19,59)
(19,65)-(19,67)
(19,72)-(19,76)
(20,20)-(20,41)
(20,20)-(20,34)
(20,21)-(20,28)
(20,22)-(20,23)
(20,26)-(20,27)
(20,31)-(20,33)
(20,38)-(20,41)
*)
