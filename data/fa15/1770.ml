
let rec filter l a =
  match l with
  | [] -> []
  | h::t -> if a = h then filter t a else h :: (filter t a);;

let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t ->
        let seen' = h in
        let rest' = h :: (filter (t h)) in helper (seen', rest') in
  List.rev (helper ([], l));;


(* fix

let rec filter l a =
  match l with
  | [] -> []
  | h::t -> if h = a then filter t a else h :: (filter t a);;

let removeDuplicates l =
  let rec helper (seen,rest) =
    match rest with
    | [] -> seen
    | h::t ->
        let seen' = h :: seen in
        let rest' = filter t h in helper (seen', rest') in
  List.rev (helper ([], l));;

*)

(* changed spans
(5,15)-(5,16)
(5,26)-(5,36)
(12,20)-(12,21)
(13,8)-(13,64)
(13,25)-(13,39)
(13,26)-(13,32)
(13,33)-(13,38)
*)

(* type error slice
(5,47)-(5,59)
(5,48)-(5,54)
(9,4)-(13,64)
(13,20)-(13,39)
(13,25)-(13,39)
(13,26)-(13,32)
(13,33)-(13,38)
(13,34)-(13,35)
*)

(* all spans
(2,15)-(5,59)
(2,17)-(5,59)
(3,2)-(5,59)
(3,8)-(3,9)
(4,10)-(4,12)
(5,12)-(5,59)
(5,15)-(5,20)
(5,15)-(5,16)
(5,19)-(5,20)
(5,26)-(5,36)
(5,26)-(5,32)
(5,33)-(5,34)
(5,35)-(5,36)
(5,42)-(5,59)
(5,42)-(5,43)
(5,47)-(5,59)
(5,48)-(5,54)
(5,55)-(5,56)
(5,57)-(5,58)
(7,21)-(14,27)
(8,2)-(14,27)
(8,18)-(13,64)
(9,4)-(13,64)
(9,10)-(9,14)
(10,12)-(10,16)
(12,8)-(13,64)
(12,20)-(12,21)
(13,8)-(13,64)
(13,20)-(13,39)
(13,20)-(13,21)
(13,25)-(13,39)
(13,26)-(13,32)
(13,33)-(13,38)
(13,34)-(13,35)
(13,36)-(13,37)
(13,43)-(13,64)
(13,43)-(13,49)
(13,50)-(13,64)
(13,51)-(13,56)
(13,58)-(13,63)
(14,2)-(14,27)
(14,2)-(14,10)
(14,11)-(14,27)
(14,12)-(14,18)
(14,19)-(14,26)
(14,20)-(14,22)
(14,24)-(14,25)
*)
