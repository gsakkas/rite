
let carry x y = (x * y) / 10;;

let remainder x y = if (x * y) > 10 then (x * y) mod 10 else 0;;

let rec mulByDigit i l =
  if i <= 0
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t -> [(mulByDigit i t) + (carry h i)] @ [remainder i t]);;


(* fix

let remainder x y = if (x * y) > 10 then (x * y) mod 10 else 0;;

let rec mulByDigit i l =
  if i <= 0
  then []
  else
    (match List.rev l with
     | [] -> []
     | h::t ->
         (match t with
          | [] -> [remainder i h]
          | h'::t' -> [h' * i] @ (mulByDigit i t')));;

*)

(* changed spans
(2,16)-(2,23)
(2,16)-(2,28)
(2,17)-(2,18)
(2,21)-(2,22)
(2,26)-(2,28)
(4,14)-(4,62)
(4,16)-(4,62)
(12,15)-(12,65)
(12,16)-(12,32)
(12,16)-(12,46)
(12,17)-(12,27)
(12,28)-(12,29)
(12,30)-(12,31)
(12,36)-(12,41)
(12,42)-(12,43)
(12,48)-(12,49)
(12,50)-(12,65)
*)

(* type error slice
(4,3)-(4,64)
(4,14)-(4,62)
(4,16)-(4,62)
(4,23)-(4,30)
(4,28)-(4,29)
(6,3)-(12,68)
(6,19)-(12,66)
(6,21)-(12,66)
(7,2)-(12,66)
(10,4)-(12,66)
(10,4)-(12,66)
(10,4)-(12,66)
(12,15)-(12,65)
(12,16)-(12,32)
(12,16)-(12,46)
(12,17)-(12,27)
(12,48)-(12,49)
(12,51)-(12,60)
(12,51)-(12,64)
(12,63)-(12,64)
*)
