
let rec digitsOfInt n =
  let x = n mod 10 in if n > 9 then (digitsOfInt (n / 10)) :: x else n;;


(* fix

let rec digitsOfInt n =
  let x = n mod 10 in if n > 9 then (digitsOfInt (n / 10)) @ [x] else [n];;

*)

(* changed spans
(3,36)-(3,58)
(3,36)-(3,63)
(3,62)-(3,63)
(3,69)-(3,70)
*)

(* type error slice
(3,2)-(3,70)
(3,10)-(3,11)
(3,10)-(3,18)
(3,22)-(3,70)
(3,36)-(3,63)
(3,62)-(3,63)
(3,69)-(3,70)
*)

(* all spans
(2,20)-(3,70)
(3,2)-(3,70)
(3,10)-(3,18)
(3,10)-(3,11)
(3,16)-(3,18)
(3,22)-(3,70)
(3,25)-(3,30)
(3,25)-(3,26)
(3,29)-(3,30)
(3,36)-(3,63)
(3,36)-(3,58)
(3,37)-(3,48)
(3,49)-(3,57)
(3,50)-(3,51)
(3,54)-(3,56)
(3,62)-(3,63)
(3,69)-(3,70)
*)
