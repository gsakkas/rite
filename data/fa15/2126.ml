
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let len = (List.length l1) - (List.length l2) in
  if len <= 0
  then ((((clone 0 (-1)) * len) @ l1), l2)
  else (l1, ((clone 0 len) @ l2));;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let len = (List.length l1) - (List.length l2) in
  if len <= 0
  then (((clone 0 ((-1) * len)) @ l1), l2)
  else (l1, ((clone 0 len) @ l2));;

*)

(* changed spans
(7,9)-(7,31)
(7,19)-(7,23)
*)

(* type error slice
(2,43)-(2,65)
(2,48)-(2,65)
(2,49)-(2,54)
(7,8)-(7,37)
(7,9)-(7,31)
(7,10)-(7,24)
(7,11)-(7,16)
(7,32)-(7,33)
*)

(* all spans
(2,14)-(2,65)
(2,16)-(2,65)
(2,20)-(2,65)
(2,23)-(2,29)
(2,23)-(2,24)
(2,28)-(2,29)
(2,35)-(2,37)
(2,43)-(2,65)
(2,43)-(2,44)
(2,48)-(2,65)
(2,49)-(2,54)
(2,55)-(2,56)
(2,57)-(2,64)
(2,58)-(2,59)
(2,62)-(2,63)
(4,12)-(8,33)
(4,15)-(8,33)
(5,2)-(8,33)
(5,12)-(5,47)
(5,12)-(5,28)
(5,13)-(5,24)
(5,25)-(5,27)
(5,31)-(5,47)
(5,32)-(5,43)
(5,44)-(5,46)
(6,2)-(8,33)
(6,5)-(6,13)
(6,5)-(6,8)
(6,12)-(6,13)
(7,7)-(7,42)
(7,8)-(7,37)
(7,32)-(7,33)
(7,9)-(7,31)
(7,10)-(7,24)
(7,11)-(7,16)
(7,17)-(7,18)
(7,19)-(7,23)
(7,27)-(7,30)
(7,34)-(7,36)
(7,39)-(7,41)
(8,7)-(8,33)
(8,8)-(8,10)
(8,12)-(8,32)
(8,27)-(8,28)
(8,13)-(8,26)
(8,14)-(8,19)
(8,20)-(8,21)
(8,22)-(8,25)
(8,29)-(8,31)
*)
