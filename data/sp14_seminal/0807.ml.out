------------------------------------------------------------------
File "0807.ml", line 30, characters 8-25:
This expression has type float but is here used with type int
Relevant code: (eval (e1, x, y))
------------------------------------------------------------------
Triaged the following locations:
File "0807.ml", line 30, characters 53-54:
And modified the following location:
File "0807.ml", line 30, characters 6-52:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    ((eval (e1, x, y)) + (eval (e2, x, y))) ** 2
with
    [[...]]
The actual replacement has type
    'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> (sin (pi *. (eval (e', x, y))))
                              | Cosine e' -> (cos (pi *. (eval (e', x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (e1, e2, e3, e4) ->
                                (if (eval (e1, x, y)) < (eval (e2, x, y)) then
                                    (eval (e3, x, y))
                                    else
                                    (eval (e4, x, y)))
                              | Sqrt e -> (sqrt (abs_float (eval (e, x, y))))
                              | Quad (e1, e2, e3) ->
                                ([[...]] +; [[...]] (eval (e3, x, y)))
                              | _ ->
                                (failwith
                                    "we are seriously writing a lisp compiler god save us all")) ;; 
==============================
