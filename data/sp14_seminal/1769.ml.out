------------------------------------------------------------------
File "1769.ml", line 21, characters 46-62:
This expression has type int but is here used with type 'a list
Relevant code: ((i + j) mod 10)
------------------------------------------------------------------
Triaged the following locations:
File "1769.ml", line 21, characters 65-66:
And modified the following location:
File "1769.ml", line 21, characters 46-62:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    =
If you ignore other surrounding code, try replacing
    (mod (i + j) 10)
with
    (mod (i + j) 10); [[...]]
The actual replacement has type
    'b list
within context
    fun a
      x ->
        (let (i, j) = x in
            let (s, t) = a in
            ((i + j) / 10, t :: (mod (i + j) 10); [[...]] =; [[...]] a))
==============================
Triaged the following locations:
File "1769.ml", line 21, characters 65-66:
And modified the following location:
File "1769.ml", line 21, characters 40-63:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    =
If you ignore other surrounding code, try replacing
    t :: (mod (i + j) 10)
with
    t, (mod (i + j) 10)
The actual replacement has type
    'c * int
within context
    fun a
      x ->
        (let (i, j) = x in
            let (s, t) = a in ((i + j) / 10, (t, (mod (i + j) 10)) =; [[...]] a))
==============================
Triaged the following locations:
File "1769.ml", line 21, characters 65-66:
And modified the following location:
File "1769.ml", line 21, characters 23-64:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    =
If you ignore other surrounding code, try replacing
    (i + j) / 10, t :: (mod (i + j) 10)
with
    (i + j) / 10
The actual replacement has type
    int
within context
    fun a x -> (let (i, j) = x in let (s, t) = a in ((i + j) / 10 =; [[...]] a))
==============================
