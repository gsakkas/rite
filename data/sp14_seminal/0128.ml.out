------------------------------------------------------------------
File "0128.ml", line 21, characters 70-71:
This expression has type int * int list but is here used with type int list
Relevant code: a
------------------------------------------------------------------
Triaged the following locations:
File "0128.ml", line 22, characters 4-113:
And modified the following location:
File "0128.ml", line 21, characters 70-71:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a
with
    a; [[...]]
The actual replacement has type
    int list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match x with 
                                                  | ([], []) ->
                                                    (let (carry, num) = a in
                                                          0,
                                                              (if carry > 0 then
                                                                carry :: num
                                                                else
                                                                num))
                                                  | (l1, l2) ->
                                                    (let (carry, num) = a in
                                                          let addit =
                                                          ((List.hd l1)
                                                                + (List.hd l2))
                                                            + carry
                                                          in
                                                          (if addit > 10 then
                                                                (mod addit 10)
                                                                else
                                                                0)
                                                              ,
                                                              addit / 10 ::
                                                                  a;
                                                                  [[...]])) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0128.ml", line 22, characters 4-113:
And modified the following location:
File "0128.ml", line 13, characters 4-449:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = (match x with 
                 | ([], []) ->
                   (let (carry, num) = a in
                         0, (if carry > 0 then carry :: num else num))
                 | (l1, l2) ->
                   (let (carry, num) = a in
                         let addit = ((List.hd l1) + (List.hd l2)) + carry in
                         (if addit > 10 then (mod addit 10) else 0),
                             addit / 10 ::
                                 a)) in let base = 0, 0 in
      let args = (List.combine l1 l2) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'a
==============================
