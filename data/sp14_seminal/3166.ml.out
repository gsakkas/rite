------------------------------------------------------------------
File "3166.ml", line 13, characters 7-18:
This function is applied to too many arguments,
maybe you forgot a `;'
Relevant code: List.length
------------------------------------------------------------------
Triaged the following locations:
File "3166.ml", line 12, characters 21-22:
And modified the following location:
File "3166.ml", line 13, characters 7-18:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    <
If you ignore other surrounding code, try replacing
    List.length
with
    List.length; [[...]]
The actual replacement has type
    int list ->
    ('d list -> 'd list -> 'd list) -> int list list -> int list list -> 'e
within context
    let padZero l1 l2 =
    (if (List.length l1) < (List.length l2) then
      (List.append [(clone 0 ((List.length l2) - (List.length l1))) @ l1] [l2])
      else
      ((List.length l2) <; [[...]]
          ((List.length; [[...]])
            l1 List.append [l1] [(clone 0 ((List.length l1) - (List.length l2))) @ l2])))
    ;; 
==============================
