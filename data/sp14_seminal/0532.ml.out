------------------------------------------------------------------
File "0532.ml", line 33, characters 18-35:
This expression has type float but is here used with type int
Relevant code: (eval (a', x, y))
------------------------------------------------------------------
Triaged the following locations:
File "0532.ml", line 34, characters 6-204:
And modified the following location:
File "0532.ml", line 33, characters 18-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (eval (a', x, y))
with
    (eval (a', x, y)); [[...]]
The actual replacement has type
    int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a', b', c) ->
                                (let a = (abs ((eval (a', x, y)); [[...]])) in
                                      [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "0532.ml", line 34, characters 6-204:
And modified the following location:
File "0532.ml", line 33, characters 14-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    abs
with
    abs; [[...]]
The actual replacement has type
    float -> 'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a', b', c) ->
                                (let a = ((abs; [[...]]) (eval (a', x, y))) in
                                      [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "0532.ml", line 34, characters 6-204:
And modified the following location:
File "0532.ml", line 33, characters 14-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    abs
with
    <
The actual replacement has type
    float -> float -> bool
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a', b', c) ->
                                (let a = (< (eval (a', x, y))) in
                                      [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "0532.ml", line 34, characters 6-204:
And modified the following location:
File "0532.ml", line 33, characters 14-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    abs
with
    cos
The actual replacement has type
    float -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a', b', c) ->
                                (let a = (cos (eval (a', x, y))) in
                                      [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "0532.ml", line 34, characters 6-204:
And modified the following location:
File "0532.ml", line 33, characters 6-243:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let a = (abs (eval (a', x, y))) in
      let b = (abs (eval (b', x, y))) in
      (if (eval (c, x, y)) < 0.0 then
          (log (a *. 100.0)) ** (sin (b *. 100.0)) -. 1.0
          else
          (-1.0 *. (log (b *. 100.0)) ** (sin (a *. 100.0)) -. 1.0))
with
    [[...other program...]]
The actual replacement has type
    float
==============================
Triaged the following locations:
File "0532.ml", line 19, characters 14-42:
File "0532.ml", line 20, characters 16-44:
File "0532.ml", line 21, characters 23-70:
File "0532.ml", line 22, characters 21-59:
File "0532.ml", line 24, characters 6-100:
File "0532.ml", line 28, characters 6-127:
And modified the following location:
File "0532.ml", line 35, characters 6-165:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (if (eval (c, x, y)) < 0.0 then (log (a *. 100.0)) ** (sin (b *. 100.0)) -. 1.0
      else
      (-1.0 *. (log (b *. 100.0)) ** (sin (a *. 100.0)) -. 1.0))
with
    [[...]]
The actual replacement has type
    int
==============================
