------------------------------------------------------------------
File "2233.ml", line 25, characters 28-32:
This expression has type int * int -> int but is here used with type
  (int * int -> int) * int
Relevant code: rand
------------------------------------------------------------------
File "2233.ml", line 19, characters 14-26:
Try replacing
    fun (rand, depth) -> (if depth > 0 then (match (rand (0, 6)) with 
                                             | 0 -> (buildX ())
                                             | 1 -> (buildY ())
                                             | 2 ->
                                               (buildSine (build rand (depth - 1)))
                                             | 3 ->
                                               (buildCosine
                                                   (build
                                                     rand
                                                     (depth
                                                         -
                                                         1)))) else (match
                                                                     (rand (0, 1))
                                                                     with
                                                                     
                                                                     | 0 ->
                                                                       (buildX ())
                                                                     | 1 ->
                                                                       (buildY ())))
with
    fun rand depth -> (if depth > 0 then (match (rand (0, 6)) with 
                                          | 0 -> (buildX ())
                                          | 1 -> (buildY ())
                                          | 2 ->
                                            (buildSine (build rand (depth - 1)))
                                          | 3 ->
                                            (buildCosine
                                                (build
                                                  rand
                                                  (depth
                                                      -
                                                      1)))) else (match
                                                                  (rand (0, 1))
                                                                  with
                                                                  
                                                                  | 0 -> (buildX ())
                                                                  | 1 ->
                                                                    (buildY ())))
of type
    (int * int -> int) -> int -> expr
==============================
