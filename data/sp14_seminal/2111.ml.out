------------------------------------------------------------------
File "2111.ml", line 15, characters 29-43:
This expression has type expr * expr * expr but is here used with type
  expr * float * float
Relevant code: (VarX, a1, a2)
------------------------------------------------------------------
Triaged the following locations:
File "2111.ml", line 15, characters 23-44:
File "2111.ml", line 15, characters 45-46:
And modified the following location:
File "2111.ml", line 15, characters 48-52:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    eval
with
    eval; [[...]]
The actual replacement has type
    expr * expr * expr ->
    'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> (x +. 0.0)
                              | VarY -> (y +. 0.0)
                              | Average (a1, a2) ->
                                ([[...other program...]] +; [[...]]
                                      ((eval; [[...]]) (VarY, a1, a2)))) ;; 
==============================
Triaged the following locations:
File "2111.ml", line 15, characters 45-46:
File "2111.ml", line 15, characters 47-68:
And modified the following location:
File "2111.ml", line 15, characters 29-43:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    VarX, a1, a2
with
    VarX, a1, a2; [[...]]
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> (x +. 0.0)
                              | VarY -> (y +. 0.0)
                              | Average (a1, a2) ->
                                ((eval (VarX, a1, a2; [[...]]))
                                      +; [[...]] [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "2111.ml", line 15, characters 23-44:
File "2111.ml", line 15, characters 45-46:
And modified the following location:
File "2111.ml", line 15, characters 53-67:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    VarY, a1, a2
with
    VarY, a1, a2; [[...]]
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> (x +. 0.0)
                              | VarY -> (y +. 0.0)
                              | Average (a1, a2) ->
                                ([[...other program...]] +; [[...]]
                                      (eval (VarY, a1, a2; [[...]])))) ;; 
==============================
Triaged the following locations:
File "2111.ml", line 15, characters 45-46:
File "2111.ml", line 15, characters 47-68:
And modified the following location:
File "2111.ml", line 15, characters 24-28:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    eval
with
    eval; [[...]]
The actual replacement has type
    expr * expr * expr ->
    'b
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> (x +. 0.0)
                              | VarY -> (y +. 0.0)
                              | Average (a1, a2) ->
                                (((eval; [[...]]) (VarX, a1, a2))
                                      +; [[...]] [[...other program...]])) ;; 
==============================
