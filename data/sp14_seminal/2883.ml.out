------------------------------------------------------------------
File "2883.ml", line 20, characters 27-29:
This expression has type expr but is here used with type expr * float * float
Relevant code: e1
------------------------------------------------------------------
Triaged the following locations:
File "2883.ml", line 20, characters 34-43:
And modified the following location:
File "2883.ml", line 20, characters 27-29:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e1; [[...]]
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1; [[...]]))
                                      *. [[...other program...]])) ;; 
==============================
Triaged the following locations:
File "2883.ml", line 20, characters 21-30:
And modified the following location:
File "2883.ml", line 20, characters 35-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    eval
with
    eval; [[...]]
The actual replacement has type
    expr -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ([[...other program...]] *.
                                      ((eval; [[...]]) e2))) ;; 
==============================
Triaged the following locations:
File "2883.ml", line 20, characters 21-30:
And modified the following location:
File "2883.ml", line 20, characters 40-42:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e2; [[...]]
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ([[...other program...]] *.
                                      (eval (e2; [[...]])))) ;; 
==============================
Triaged the following locations:
File "2883.ml", line 20, characters 34-43:
And modified the following location:
File "2883.ml", line 20, characters 22-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    eval
with
    eval; [[...]]
The actual replacement has type
    expr -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                (((eval; [[...]]) e1)
                                      *. [[...other program...]])) ;; 
==============================
