------------------------------------------------------------------
File "1867.ml", line 30, characters 4-20:
The constructor Crazy expects 2 argument(s),
but is here applied to 3 argument(s)
Relevant code: Crazy (e1,e2,e3)
------------------------------------------------------------------
File "1867.ml", line 30, characters 4-31:
Try replacing
    (match e with 
     | VarX -> x
     | VarY -> y
     | Sine e' -> (sin (pi *. (eval (e', x, y))))
     | Cosine e' -> (cos (pi *. (eval (e', x, y))))
     | Average (e1, e2) -> (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
     | Times (e1, e2) -> ((eval (e1, x, y)) *. (eval (e2, x, y)))
     | Thresh (e1, e2, e3, e4) ->
       (if (eval (e1, x, y)) < (eval (e2, x, y)) then (eval (e3, x, y)) else
           (eval (e4, x, y)))
     | Acossin (e1, e2) ->
       ((((acos (eval (e1, x, y))) *. (asin (eval (e2, x, y)))) *. 2.0)
             /. (pi *. pi))
     | Crazy (e1, e2, e3) -> (eval e1))
with
    (match e with 
     | VarX -> x
     | VarY -> y
     | Sine e' -> (sin (pi *. (eval (e', x, y))))
     | Cosine e' -> (cos (pi *. (eval (e', x, y))))
     | Average (e1, e2) -> (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
     | Times (e1, e2) -> ((eval (e1, x, y)) *. (eval (e2, x, y)))
     | Thresh (e1, e2, e3, e4) ->
       (if (eval (e1, x, y)) < (eval (e2, x, y)) then (eval (e3, x, y)) else
           (eval (e4, x, y)))
     | Acossin (e1, e2) ->
       ((((acos (eval (e1, x, y))) *. (asin (eval (e2, x, y)))) *. 2.0)
             /. (pi *. pi))
     | _ -> [[...]])
of type
    float
==============================
Triaged the following locations:
File "1867.ml", line 17, characters 13-14:
File "1867.ml", line 18, characters 13-14:
File "1867.ml", line 19, characters 15-44:
File "1867.ml", line 20, characters 17-46:
File "1867.ml", line 21, characters 23-70:
File "1867.ml", line 22, characters 21-59:
File "1867.ml", line 24, characters 6-100:
File "1867.ml", line 28, characters 6-91:
File "1867.ml", line 30, characters 24-31:
And modified the following location:
File "1867.ml", line 30, characters 11-13:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, e2, e3
with
    e2, e3
The actual replacement has type
    expr * 'i * 'j -> 'k
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> [[...other program...]]
                              | VarY -> [[...other program...]]
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e2, e3) -> [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1867.ml", line 17, characters 13-14:
File "1867.ml", line 18, characters 13-14:
File "1867.ml", line 19, characters 15-44:
File "1867.ml", line 20, characters 17-46:
File "1867.ml", line 21, characters 23-70:
File "1867.ml", line 22, characters 21-59:
File "1867.ml", line 24, characters 6-100:
File "1867.ml", line 28, characters 6-91:
File "1867.ml", line 30, characters 24-31:
And modified the following location:
File "1867.ml", line 30, characters 14-16:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, e2, e3
with
    e1, e3
The actual replacement has type
    expr * 'f * 'g -> 'h
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> [[...other program...]]
                              | VarY -> [[...other program...]]
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e3) -> [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1867.ml", line 17, characters 13-14:
File "1867.ml", line 18, characters 13-14:
File "1867.ml", line 19, characters 15-44:
File "1867.ml", line 20, characters 17-46:
File "1867.ml", line 21, characters 23-70:
File "1867.ml", line 22, characters 21-59:
File "1867.ml", line 24, characters 6-100:
File "1867.ml", line 28, characters 6-91:
File "1867.ml", line 30, characters 24-31:
And modified the following location:
File "1867.ml", line 30, characters 17-19:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, e2, e3
with
    e1, e2
The actual replacement has type
    expr * 'c * 'd -> 'e
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> [[...other program...]]
                              | VarY -> [[...other program...]]
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2) -> [[...other program...]]) ;; 
==============================
