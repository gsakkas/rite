------------------------------------------------------------------
File "0062.ml", line 3, characters 59-60:
This expression has type 'a -> 'b -> 'c -> 'd -> 'a
but is here used with type 'a -> 'b -> 'a
Relevant code: f
------------------------------------------------------------------
File "0062.ml", line 3, characters 8-11:
Try replacing
    fun a x fn fn2 -> a
with
    fun x a fn fn2 -> a
of type
    'e -> 'f -> 'g -> 'h -> 'f
within context
    let pipe fs =
    let f x a fn fn2 = a in let base b = b in (List.fold_left f base  fs)
    ;; 
==============================
File "0062.ml", line 3, characters 10-18:
Try replacing
    fun x fn fn2 -> a
with
    fun (x, fn, fn2) -> a
of type
    'i * 'j * 'k -> 'l
within context
    let pipe fs =
    let f a (x, fn, fn2) = a in let base b = b in (List.fold_left f base  fs)
    ;; 
==============================
File "0062.ml", line 3, characters 44-60:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left (f base fs))
of type
    ('m -> 'm) -> 'n list -> 'm -> 'm
within context
    let pipe fs =
    let f a x fn fn2 = a in let base b = b in (List.fold_left (f base fs))
    ;; 
==============================
File "0062.ml", line 3, characters 44-58:
Try replacing
    List.fold_left
with
    f
of type
    ('o -> 'p -> 'q -> 'r -> 'o) ->
    ('s -> 's) -> 't -> 'u -> 'o -> 'p -> 'q -> 'r -> 'o
within context
    let pipe fs = let f a x fn fn2 = a in let base b = b in (f f base  fs) ;; 
==============================
File "0062.ml", line 3, characters 44-58:
Try replacing
    List.fold_left
with
    base
of type
    (('v -> 'v) -> 'w -> 'x -> 'y -> 'v -> 'v) ->
    ('v -> 'v) -> 'w -> 'x -> 'y -> 'v -> 'v
within context
    let pipe fs = let f a x fn fn2 = a in let base b = b in (base f base  fs) ;; 
==============================
File "0062.ml", line 3, characters 21-22:
Try replacing
    a
with
    fn2
of type
    'z
within context
    let f a x fn fn2 = fn2 in let base b = b in (List.fold_left f base  fs)
==============================
File "0062.ml", line 3, characters 21-22:
Try replacing
    a
with
    x
of type
    'a1
within context
    let f a x fn fn2 = x in let base b = b in (List.fold_left f base  fs)
==============================
File "0062.ml", line 3, characters 21-22:
Try replacing
    a
with
    fs
of type
    'b1 list
within context
    let f a x fn fn2 = fs in let base b = b in (List.fold_left f base  fs)
==============================
