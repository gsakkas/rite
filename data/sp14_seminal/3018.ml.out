------------------------------------------------------------------
File "3018.ml", line 12, characters 40-44:
This expression has type int but is here used with type int list
Relevant code: len1
------------------------------------------------------------------
Triaged the following locations:
File "3018.ml", line 13, characters 7-48:
And modified the following location:
File "3018.ml", line 12, characters 40-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len1
with
    l2
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then (List.append (clone 0 (( ~- ) diff)) l2), len2 else
              [[...other program...]]))
==============================
Triaged the following locations:
File "3018.ml", line 13, characters 7-48:
And modified the following location:
File "3018.ml", line 12, characters 40-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len1
with
    len1; [[...]]
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then
              (List.append (clone 0 (( ~- ) diff)) (len1; [[...]])), len2
              else
              [[...other program...]]))
==============================
Triaged the following locations:
File "3018.ml", line 13, characters 7-48:
And modified the following location:
File "3018.ml", line 12, characters 40-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len1
with
    l1
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then (List.append (clone 0 (( ~- ) diff)) l1), len2 else
              [[...other program...]]))
==============================
Triaged the following locations:
File "3018.ml", line 12, characters 7-52:
And modified the following location:
File "3018.ml", line 13, characters 9-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    List.append
with
    List.append; [[...]]
The actual replacement has type
    int list -> int -> 'a
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then [[...other program...]] else
              ((List.append; [[...]]) (clone 0 diff) len2), len1))
==============================
Triaged the following locations:
File "3018.ml", line 12, characters 7-52:
And modified the following location:
File "3018.ml", line 13, characters 36-40:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len2
with
    len2; [[...]]
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then [[...other program...]] else
              (List.append (clone 0 diff) (len2; [[...]])), len1))
==============================
Triaged the following locations:
File "3018.ml", line 12, characters 7-52:
And modified the following location:
File "3018.ml", line 13, characters 36-40:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len2
with
    l1
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then [[...other program...]] else
              (List.append (clone 0 diff) l1), len1))
==============================
Triaged the following locations:
File "3018.ml", line 12, characters 7-52:
And modified the following location:
File "3018.ml", line 13, characters 36-40:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    len2
with
    l2
The actual replacement has type
    int list
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then [[...other program...]] else
              (List.append (clone 0 diff) l2), len1))
==============================
Triaged the following locations:
File "3018.ml", line 13, characters 7-48:
And modified the following location:
File "3018.ml", line 12, characters 9-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    List.append
with
    List.append; [[...]]
The actual replacement has type
    int list -> int -> 'b
within context
    fun l2 ->
      (let len1 = (List.length l1) in
          let len2 = (List.length l2) in
          let diff = len1 - len2 in
          (if diff < 0 then
              ((List.append; [[...]]) (clone 0 (( ~- ) diff)) len1), len2
              else
              [[...other program...]]))
==============================
