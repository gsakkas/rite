------------------------------------------------------------------
File "1686.ml", line 36, characters 10-91:
This expression has type expr * expr * expr but is here used with type
  expr * expr * expr * expr
Relevant code: ((build (rand, depth)), (build (rand, depth)),
            (build (rand, depth)))
------------------------------------------------------------------
File "1686.ml", line 36, characters 10-91:
Try replacing
    (build (rand, depth)), (build (rand, depth)), (build (rand, depth))
with
    (build (rand, depth)), [[...]], (build (rand, depth)), (build (rand, depth))
of type
    expr * expr * expr *
    expr
within context
    fun (rand, depth) ->
      (if depth > 0 then (let depth = depth - 1 in (match (rand (0, 4)) with 
                                                    | 0 ->
                                                      (buildSine
                                                          (build (rand, depth)))
                                                    | 1 ->
                                                      (buildCosine
                                                          (build (rand, depth)))
                                                    | 2 ->
                                                      (buildAverage
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 3 ->
                                                      (buildTimes
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 4 ->
                                                      (buildThresh
                                                          ((build (rand, depth)),
                                                              [[...]],
                                                              (build (rand, depth)),
                                                              (build
                                                                (rand,
                                                                    depth)))))) else (match
                                                                                      (rand
                                                                                        (0
                                                                                            ,
                                                                                            1))
                                                                                      with
                                                                                      
                                                                                      |
                                                                                        0
                                                                                        ->
                                                                                        (buildX
                                                                                            ())
                                                                                      |
                                                                                        1
                                                                                        ->
                                                                                        (buildY
                                                                                            ())))
==============================
File "1686.ml", line 36, characters 10-91:
Try replacing
    (build (rand, depth)), (build (rand, depth)), (build (rand, depth))
with
    (build (rand, depth)), (build (rand, depth)), (build (rand, depth)), [[...]]
of type
    expr * expr * expr *
    expr
within context
    fun (rand, depth) ->
      (if depth > 0 then (let depth = depth - 1 in (match (rand (0, 4)) with 
                                                    | 0 ->
                                                      (buildSine
                                                          (build (rand, depth)))
                                                    | 1 ->
                                                      (buildCosine
                                                          (build (rand, depth)))
                                                    | 2 ->
                                                      (buildAverage
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 3 ->
                                                      (buildTimes
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 4 ->
                                                      (buildThresh
                                                          ((build (rand, depth)),
                                                              (build (rand, depth)),
                                                              (build (rand, depth)),
                                                              [[...]])))) else (match
                                                                                (rand
                                                                                  (0
                                                                                      ,
                                                                                      1))
                                                                                with
                                                                                
                                                                                | 0
                                                                                  ->
                                                                                  (buildX
                                                                                      ())
                                                                                | 1
                                                                                  ->
                                                                                  (buildY
                                                                                      ())))
==============================
File "1686.ml", line 36, characters 10-91:
Try replacing
    (build (rand, depth)), (build (rand, depth)), (build (rand, depth))
with
    (build (rand, depth)), (build (rand, depth)), [[...]], (build (rand, depth))
of type
    expr * expr * expr *
    expr
within context
    fun (rand, depth) ->
      (if depth > 0 then (let depth = depth - 1 in (match (rand (0, 4)) with 
                                                    | 0 ->
                                                      (buildSine
                                                          (build (rand, depth)))
                                                    | 1 ->
                                                      (buildCosine
                                                          (build (rand, depth)))
                                                    | 2 ->
                                                      (buildAverage
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 3 ->
                                                      (buildTimes
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 4 ->
                                                      (buildThresh
                                                          ((build (rand, depth)),
                                                              (build (rand, depth)),
                                                              [[...]],
                                                              (build
                                                                (rand,
                                                                    depth)))))) else (match
                                                                                      (rand
                                                                                        (0
                                                                                            ,
                                                                                            1))
                                                                                      with
                                                                                      
                                                                                      |
                                                                                        0
                                                                                        ->
                                                                                        (buildX
                                                                                            ())
                                                                                      |
                                                                                        1
                                                                                        ->
                                                                                        (buildY
                                                                                            ())))
==============================
File "1686.ml", line 36, characters 10-91:
Try replacing
    (build (rand, depth)), (build (rand, depth)), (build (rand, depth))
with
    [[...]], (build (rand, depth)), (build (rand, depth)), (build (rand, depth))
of type
    expr * expr * expr *
    expr
within context
    fun (rand, depth) ->
      (if depth > 0 then (let depth = depth - 1 in (match (rand (0, 4)) with 
                                                    | 0 ->
                                                      (buildSine
                                                          (build (rand, depth)))
                                                    | 1 ->
                                                      (buildCosine
                                                          (build (rand, depth)))
                                                    | 2 ->
                                                      (buildAverage
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 3 ->
                                                      (buildTimes
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 4 ->
                                                      (buildThresh
                                                          ([[...]],
                                                              (build (rand, depth)),
                                                              (build (rand, depth)),
                                                              (build
                                                                (rand,
                                                                    depth)))))) else (match
                                                                                      (rand
                                                                                        (0
                                                                                            ,
                                                                                            1))
                                                                                      with
                                                                                      
                                                                                      |
                                                                                        0
                                                                                        ->
                                                                                        (buildX
                                                                                            ())
                                                                                      |
                                                                                        1
                                                                                        ->
                                                                                        (buildY
                                                                                            ())))
==============================
File "1686.ml", line 35, characters 8-19:
Try replacing
    buildThresh
with
    buildThresh; [[...]]
of type
    expr * expr * expr ->
    expr
within context
    fun (rand, depth) ->
      (if depth > 0 then (let depth = depth - 1 in (match (rand (0, 4)) with 
                                                    | 0 ->
                                                      (buildSine
                                                          (build (rand, depth)))
                                                    | 1 ->
                                                      (buildCosine
                                                          (build (rand, depth)))
                                                    | 2 ->
                                                      (buildAverage
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 3 ->
                                                      (buildTimes
                                                          ((build (rand, depth)),
                                                              (build
                                                                (rand, depth))))
                                                    | 4 ->
                                                      ((buildThresh; [[...]])
                                                          ((build (rand, depth)),
                                                              (build (rand, depth)),
                                                              (build
                                                                (rand,
                                                                    depth)))))) else (match
                                                                                      (rand
                                                                                        (0
                                                                                            ,
                                                                                            1))
                                                                                      with
                                                                                      
                                                                                      |
                                                                                        0
                                                                                        ->
                                                                                        (buildX
                                                                                            ())
                                                                                      |
                                                                                        1
                                                                                        ->
                                                                                        (buildY
                                                                                            ())))
==============================
