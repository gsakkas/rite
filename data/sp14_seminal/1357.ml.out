------------------------------------------------------------------
File "1357.ml", line 18, characters 33-34:
This expression has type int -> int list -> int list
but is here used with type int -> int list -> int
Relevant code: f
------------------------------------------------------------------
File "1357.ml", line 18, characters 18-32:
Try replacing
    List.fold_left
with
    List.fold_left; [[...]]
of type
    (int -> int list -> int list) -> 'a list -> ('b * 'c) list -> 'd * 'e
within context
    let f a x = (match x with 
                 | _ -> [(mod a 10)]
                 | h :: t ->
                   [(mod (a + h) 10)
                         ]) in let base = [] in
      let args = (List.combine l1 l2) in
      let (_, res) = ((List.fold_left; [[...]]) f base  args) in res
==============================
