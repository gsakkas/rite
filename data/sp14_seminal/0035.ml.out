------------------------------------------------------------------
File "0035.ml", line 29, characters 18-33:
This expression has type int list * int list but is here used with type
  int list * 'a list list
Relevant code: (padZero l1 l2)
------------------------------------------------------------------
File "0035.ml", line 29, characters 18-33:
Try replacing
    (padZero l1 l2)
with
    (padZero l1 l2); [[...]]
of type
    int list * 'b list list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match a with 
                                                  | (h1 :: t1, rh :: rt) ->
                                                    (match x with 
                                                     | h2 :: t2 ->
                                                       (t1,
                                                             (mod (h1 + rh) 10) ::
                                                                 rt))) in let base =
              l1, [0]
              in
              let args = l2 in
              let (_, res) = (List.fold_left f base  args) in
              res in (removeZero (add ((padZero l1 l2); [[...]]))))
==============================
File "0035.ml", line 29, characters 14-17:
Try replacing
    add
with
    add; [[...]]
of type
    int list * int list -> int list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match a with 
                                                  | (h1 :: t1, rh :: rt) ->
                                                    (match x with 
                                                     | h2 :: t2 ->
                                                       (t1,
                                                             (mod (h1 + rh) 10) ::
                                                                 rt))) in let base =
              l1, [0]
              in
              let args = l2 in
              let (_, res) = (List.fold_left f base  args) in
              res in (removeZero ((add; [[...]]) (padZero l1 l2))))
==============================
File "0035.ml", line 22, characters 10-251:
Try replacing
    fun (l1, l2) -> (let f a x = (match a with 
                                  | (h1 :: t1, rh :: rt) -> (match x with 
                                                             | h2 :: t2 ->
                                                               (t1,
                                                                     (mod
                                                                           (h1 + rh) 10)
                                                                         ::
                                                                         rt))) in let
          base
          =
          l1, [0]
          in
          let args = l2 in let (_, res) = (List.fold_left f base  args) in res)
with
    fun (l1, l2) -> (let f a x = (match a with 
                                  | (h1 :: t1, rh :: rt) -> (match x with 
                                                             | h2 :: t2 ->
                                                               (t1,
                                                                     (mod
                                                                           (h1 + rh) 10)
                                                                         ::
                                                                         rt))) in let
          base
          =
          l1, [0]
          in
          let args = l2 in
          let (_, res) = (List.fold_left f base  args) in res); [[...]]
of type
    'c
==============================
