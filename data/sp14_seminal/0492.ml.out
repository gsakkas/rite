------------------------------------------------------------------
File "0492.ml", line 27, characters 35-39:
This expression has type int * int but is here used with type
  (int * int) list
Relevant code: base
------------------------------------------------------------------
File "0492.ml", line 27, characters 18-32:
Try replacing
    List.fold_left
with
    List.fold_left; [[...]]
of type
    ((int * int) list -> int * int -> (int * int) list) ->
    int * int -> ('a * 'b) list -> 'c * 'd
within context
    let f a x =
      let (x1, x2) = x in
        let ha :: _ = a in
        let (a1, a2) = ha in
        let tens = (x1 + x2) + a1 / 10 in
        let ones = (x1 + x2) + (mod a1 10) in tens, ones :: a
      in
      let base = 0, 0 in
      let args = (List.rev (List.combine l1 l2)) in
      let (_, res) = ((List.fold_left; [[...]]) f base  args) in res
==============================
