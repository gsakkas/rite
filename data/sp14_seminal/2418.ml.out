------------------------------------------------------------------
File "2418.ml", line 3, characters 2-171:
This expression has type int list but is here used with type int
Relevant code: match List.rev l with
  | [] -> []
  | h::t ->
      let prod = h * i in
      if prod > 10
      then [prod mod 10; (prod / 10) + (mulByDigit i t)]
      else prod :: t
------------------------------------------------------------------
File "2418.ml", line 2, characters 19-196:
Try replacing
    fun i l -> (match (List.rev l) with 
                | [] -> []
                | h :: t ->
                  (let prod = h * i in
                        (if prod > 10 then
                            [(mod prod 10) ; prod / 10 + (mulByDigit i t)]
                            else
                            prod :: t)))
with
    fun i l -> (match (List.rev l) with 
                | [] -> []
                | h :: t ->
                  (let prod = h * i in
                        (if prod > 10 then
                            [(mod prod 10) ; prod / 10 + (mulByDigit i t)]
                            else
                            prod :: t))); [[...]]
of type
    int -> int list -> int
==============================
