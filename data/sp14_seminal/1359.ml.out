------------------------------------------------------------------
File "1359.ml", line 18, characters 36-50:
This expression has type int but is here used with type int list
Relevant code: ((a + h) / 10)
------------------------------------------------------------------
Triaged the following locations:
File "1359.ml", line 19, characters 4-124:
And modified the following location:
File "1359.ml", line 18, characters 36-50:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (a + h) / 10
with
    (a + h) / 10; [[...]]
The actual replacement has type
    int list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match x with 
                                                  | _ -> [(mod a 10)]
                                                  | h :: t ->
                                                    (mod (a + h) 10) ::
                                                          (a + h) / 10;
                                                          [[...]]) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "1359.ml", line 19, characters 4-124:
And modified the following location:
File "1359.ml", line 15, characters 4-237:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = (match x with 
                 | _ -> [(mod a 10)]
                 | h :: t ->
                   (mod (a + h) 10) ::
                         (a + h)
                           /
                           10) in let base = 0, 0 in
      let args = (List.rev (List.combine l1 l2)) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'a
==============================
