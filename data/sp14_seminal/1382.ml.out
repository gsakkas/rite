------------------------------------------------------------------
File "1382.ml", line 2, characters 49-50:
This expression has type 'a list but is here used with type 'a
Relevant code: x
------------------------------------------------------------------
File "1382.ml", line 2, characters 42-59:
Try replacing
    (if (n <= 0) then x else (clone [x] (n - 1)))
with
    (if (n <= 0) then x)
of type
    unit
within context
    let rec clone x n = (if (n <= 0) then x) ;; 
==============================
File "1382.ml", line 2, characters 49-50:
Try replacing
    x
with
    -
of type
    int -> int -> int
within context
    fun x n -> (if (n <= 0) then x else (clone [-] (n - 1)))
==============================
File "1382.ml", line 2, characters 49-50:
Try replacing
    x
with
    <=
of type
    'b -> 'b -> bool
within context
    fun x n -> (if (n <= 0) then x else (clone [<=] (n - 1)))
==============================
File "1382.ml", line 2, characters 49-50:
Try replacing
    x
with
    n
of type
    int
within context
    fun x n -> (if (n <= 0) then x else (clone [n] (n - 1)))
==============================
