------------------------------------------------------------------
File "2613.ml", line 3, characters 40-41:
This expression has type 'a list but is here used with type 'a
Relevant code: x
------------------------------------------------------------------
File "2613.ml", line 3, characters 39-49:
Try replacing
    x :: acc
with
    x :: acc; [[...]]
of type
    'b
within context
    fun x
      n ->
        (let acc = [x] in
            (if n > 0 then (clone (x :: acc; [[...]]) (n - 1)) else []))
==============================
File "2613.ml", line 3, characters 33-38:
Try replacing
    clone
with
    clone; [[...]]
of type
    'c list -> int -> 'd list
within context
    fun x
      n ->
        (let acc = [x] in
            (if n > 0 then ((clone; [[...]]) x :: acc (n - 1)) else []))
==============================
