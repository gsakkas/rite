------------------------------------------------------------------
File "0903.ml", line 16, characters 56-60:
This expression has type int but is here used with type 'a list
Relevant code: args
------------------------------------------------------------------
File "0903.ml", line 16, characters 15-16:
Try replacing
    0
with
    0; [[...]]
of type
    'b
within context
    let add (l1, l2) =
      let f a x = a in
        let base = [], [] in
        let args = 0; [[...]] in let (_, res) = (List.fold_left f base  args) in res
      in
      (removeZero (add (padZero l1 l2)))
==============================
File "0903.ml", line 16, characters 56-60:
Try replacing
    args
with
    args; [[...]]
of type
    'c list
within context
    let f a x = a in
      let base = [], [] in
      let args = 0 in let (_, res) = (List.fold_left f base  (args; [[...]])) in res
==============================
File "0903.ml", line 16, characters 34-48:
Try replacing
    List.fold_left
with
    List.fold_left; [[...]]
of type
    ('d -> 'e -> 'd) -> 'f list * 'g list -> int -> 'h * 'i
within context
    let f a x = a in
      let base = [], [] in
      let args = 0 in let (_, res) = ((List.fold_left; [[...]]) f base  args) in res
==============================
