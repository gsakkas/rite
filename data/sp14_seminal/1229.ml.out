------------------------------------------------------------------
File "1229.ml", line 20, characters 43-59:
This expression has type int but is here used with type int list
Relevant code: ((w + y) mod 10)
------------------------------------------------------------------
Triaged the following locations:
File "1229.ml", line 22, characters 4-132:
And modified the following location:
File "1229.ml", line 20, characters 38-59:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a :: (mod (w + y) 10)
with
    [[...]]
The actual replacement has type
    int list
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match x with 
                                                  | (w, y) :: t ->
                                                    (w + y) / 10 :: [[...]]
                                                  | _ ->
                                                    a) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "1229.ml", line 22, characters 4-132:
And modified the following location:
File "1229.ml", line 18, characters 4-245:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = (match x with 
                 | (w, y) :: t -> (w + y) / 10 :: a :: (mod (w + y) 10)
                 | _ ->
                   a) in let base = [] in
      let args = (List.rev (List.combine l1 l2) :: 0 :: 0) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'a
==============================
