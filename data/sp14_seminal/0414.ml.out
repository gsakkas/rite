------------------------------------------------------------------
File "0414.ml", line 5, characters 9-63:
This expression has type ('a -> 'a * bool) * ('a -> 'a * bool)
but is here used with type ('a -> 'a * bool) * 'a
Relevant code: ((let w b = let fb = f b in (fb, (fb = b)) in f b), b)
------------------------------------------------------------------
File "0414.ml", line 5, characters 43-45:
Try replacing
    fb = b
with
    ( = ) (fb, b)
of type
    ('b -> 'b * bool) * (('b -> 'b * bool) * 'b -> bool)
within context
    (let w b = let fb = (f b) in fb, ( = ) (fb, b) in (f b)), b
==============================
File "0414.ml", line 5, characters 2-8:
Try replacing
    wwhile
with
    =
of type
    'c * 'c -> 'c * 'c -> bool
within context
    let fixpoint (f, b) = (= ((let w b = let fb = (f b) in fb, fb = b in (f b)), b))
    ;; 
==============================
File "0414.ml", line 5, characters 61-62:
Try replacing
    b
with
    =
of type
    (('d -> 'd -> bool) -> ('d -> 'd -> bool) * bool) * ('d -> 'd -> bool)
within context
    let fixpoint (f, b) =
    (wwhile ((let w b = let fb = (f b) in fb, fb = b in (f b)), =))
    ;; 
==============================
File "0414.ml", line 5, characters 32-33:
Try replacing
    b
with
    =
of type
    'e -> 'e -> bool
within context
    (let w b = let fb = (f =) in fb, fb = b in (f b)), b
==============================
File "0414.ml", line 5, characters 61-62:
Try replacing
    b
with
    wwhile
of type
    ((('f -> 'f * bool) * 'f -> 'f) -> (('f -> 'f * bool) * 'f -> 'f) * bool) *
    (('f -> 'f * bool) * 'f -> 'f)
within context
    let fixpoint (f, b) =
    (wwhile ((let w b = let fb = (f b) in fb, fb = b in (f b)), wwhile))
    ;; 
==============================
File "0414.ml", line 5, characters 32-33:
Try replacing
    b
with
    wwhile
of type
    ('g -> 'g * bool) * 'g -> 'g
within context
    (let w b = let fb = (f wwhile) in fb, fb = b in (f b)), b
==============================
File "0414.ml", line 5, characters 48-49:
Try replacing
    b
with
    fb
of type
    'h -> 'h * bool
within context
    let w b = let fb = (f b) in fb, fb = fb in (f b)
==============================
