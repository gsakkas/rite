------------------------------------------------------------------
File "1049.ml", line 30, characters 21-44:
This expression has type 'a * 'b but is here used with type expr
Relevant code: (build (rand, (d - 1)))
------------------------------------------------------------------
File "1049.ml", line 25, characters 14-610:
Try replacing
    fun (rand, depth) -> (let expChooser (r, d) = (match r with 
                                                   | 0 -> (buildX ())
                                                   | 1 -> (buildY ())
                                                   | 2 ->
                                                     (buildSine
                                                         (build (rand, d - 1)))
                                                   | 3 ->
                                                     (buildCosine
                                                         (build (rand, d - 1)))
                                                   | 4 ->
                                                     (buildAverage
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1))))
                                                   | 5 ->
                                                     (buildTimes
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1))))
                                                   | 6 ->
                                                     (buildThresh
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1)),
                                                             (build (rand, d - 1)),
                                                             (build
                                                               (rand,
                                                                   d
                                                                     -
                                                                     1))))) in (if
              depth < 1
              then
              (expChooser (rand (0, 2))), depth
              else
              (expChooser (rand (2, 7))), depth))
with
    fun (rand, depth) -> (let expChooser (r, d) = (match r with 
                                                   | 0 -> (buildX ())
                                                   | 1 -> (buildY ())
                                                   | 2 ->
                                                     (buildSine
                                                         (build (rand, d - 1)))
                                                   | 3 ->
                                                     (buildCosine
                                                         (build (rand, d - 1)))
                                                   | 4 ->
                                                     (buildAverage
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1))))
                                                   | 5 ->
                                                     (buildTimes
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1))))
                                                   | 6 ->
                                                     (buildThresh
                                                         ((build (rand, d - 1)),
                                                             (build (rand, d - 1)),
                                                             (build (rand, d - 1)),
                                                             (build
                                                               (rand,
                                                                   d
                                                                     -
                                                                     1))))) in (if
              depth < 1
              then
              (expChooser (rand (0, 2))), depth
              else
              (expChooser (rand (2, 7))), depth)); [[...]]
of type
    (int * int -> int * int) * int -> expr
==============================
