------------------------------------------------------------------
File "1759.ml", line 23, characters 32-44:
This expression has type int * int but is here used with type unit
Relevant code: (0, (i + j))
------------------------------------------------------------------
Triaged the following locations:
File "1759.ml", line 24, characters 4-135:
And modified the following location:
File "1759.ml", line 23, characters 11-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (if (i + j <= 9) then 0, i + j)
with
    [[...]]
The actual replacement has type
    int * int
within context
    fun l1
      l2 ->
        (let add (l1, l2) =
            let f a x =
              let (i, j) = x in (if i + j > 9 then 1, (i + j) - 10 else [[...]])
              in
              [[...other program...]]
            in
            (removeZero (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "1759.ml", line 24, characters 4-135:
And modified the following location:
File "1759.ml", line 19, characters 4-274:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x =
      let (i, j) = x in
        (if i + j > 9 then 1, (i + j) - 10 else (if (i + j <= 9) then 0, i + j))
      in
      let base = 0, 0 in
      let args = (List.combine (List.rev l1) (List.rev l2)) in
      let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'a
==============================
