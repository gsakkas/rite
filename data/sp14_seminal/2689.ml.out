------------------------------------------------------------------
File "2689.ml", line 27, characters 15-31:
This expression has type float but is here used with type int
Relevant code: (eval (a, x, y))
------------------------------------------------------------------
Triaged the following locations:
File "2689.ml", line 27, characters 52-53:
And modified the following location:
File "2689.ml", line 27, characters 32-33:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    *
If you ignore other surrounding code, try replacing
    *
with
    <
The actual replacement has type
    float -> float -> bool
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a ->
                                (eval (a, (sin (pi *. x)), (sin (pi *. y))))
                              | Cosine a ->
                                (eval (a, (cos (pi *. x)), (cos (pi *. y))))
                              | Average (a, b) ->
                                (((eval (a, x, y)) +. (eval (b, x, y))) /. 2.0)
                              | Times (a, b) ->
                                ((eval (a, x, y)) *. (eval (b, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))
                              | Cube a ->
                                ((eval (a, x, y)) < (eval (a, x, y))
                                      *; [[...]] (eval (a, x, y)))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 27, characters 52-53:
And modified the following location:
File "2689.ml", line 27, characters 32-33:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    *
If you ignore other surrounding code, try replacing
    *
with
    *; [[...]]
The actual replacement has type
    float -> float -> 'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a ->
                                (eval (a, (sin (pi *. x)), (sin (pi *. y))))
                              | Cosine a ->
                                (eval (a, (cos (pi *. x)), (cos (pi *. y))))
                              | Average (a, b) ->
                                (((eval (a, x, y)) +. (eval (b, x, y))) /. 2.0)
                              | Times (a, b) ->
                                ((eval (a, x, y)) *. (eval (b, x, y)))
                              | Thresh (a, b, c, d) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (c, x, y))
                                    else
                                    (eval (d, x, y)))
                              | Cube a ->
                                (((eval (a, x, y)) *; [[...]] (eval (a, x, y)))
                                      *; [[...]] (eval (a, x, y)))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 16-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    eval
with
    eval
The actual replacement has type
    expr * int * int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 22-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a
with
    e
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (e, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 22-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a
with
    a
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 25-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, y, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 25-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 22-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a, x, y
with
    a, x, y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 28-29:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, x)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 28-29:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 25-29:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a, x, y
with
    a, y, x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, y, x)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 16-30:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (eval (a, x, y))
with
    (eval ((a, x, y)))
The actual replacement has type
    int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval ((a, x, y))) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 32-33:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    *
with
    *
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 35-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    eval
with
    eval
The actual replacement has type
    expr * int * int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
Triaged the following locations:
File "2689.ml", line 19, characters 14-56:
File "2689.ml", line 20, characters 16-58:
File "2689.ml", line 21, characters 21-66:
File "2689.ml", line 22, characters 19-55:
File "2689.ml", line 24, characters 6-96:
And modified the following location:
File "2689.ml", line 27, characters 41-42:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    a
with
    a
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine a -> [[...other program...]]
                              | Cosine a -> [[...other program...]]
                              | Average (a, b) -> [[...other program...]]
                              | Times (a, b) -> [[...other program...]]
                              | Thresh (a, b, c, d) -> [[...other program...]]
                              | Cube a ->
                                ((eval (a, x, y)) * (eval (a, x, y)))
                                    * (eval (a, x, y))) ;; 
==============================
