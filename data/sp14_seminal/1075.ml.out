------------------------------------------------------------------
File "1075.ml", line 23, characters 34-35:
This expression has type int * int list -> int * int -> int * int list
but is here used with type int * int list -> int * int -> int * int
Relevant code: f
------------------------------------------------------------------
File "1075.ml", line 23, characters 18-33:
Try replacing
    List.fold_right
with
    List.fold_right; [[...]]
of type
    (int * int list -> int * int -> int * int list) ->
    int * 'a list -> ('b * 'c) list -> 'd * 'e
within context
    let f a x =
      let sum = (fst a) + ((fst x) + (snd x)) in sum / 10, (mod sum 10) :: (snd a)
      in
      let base = 0, [] in
      let args = (List.combine l1 l2) in
      let (_, res) = ((List.fold_right; [[...]]) f base  args) in res
==============================
