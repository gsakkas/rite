------------------------------------------------------------------
File "1776.ml", line 23, characters 46-47:
This expression has type int but is here used with type 'a list list
Relevant code: 0
------------------------------------------------------------------
Triaged the following locations:
File "1776.ml", line 23, characters 28-48:
And modified the following location:
File "1776.ml", line 23, characters 51-59:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    List.rev
with
    List.rev; [[...]]
The actual replacement has type
    int -> int
within context
    fun (l1, l2) ->
      (let f a x =
          let (i, j) = x in
            let (s, t) = a in ((i + j) + s) / 10, (mod ((i + j) + s) 10) :: t
          in
          let base = 0, [] in
          let args =
          (List.combine [[...other program...]] ((List.rev; [[...]]) 0) :: l2)
          in
          let (_, res) = (List.fold_left f base  args) in res)
==============================
