------------------------------------------------------------------
File "0902.ml", line 16, characters 50-51:
This expression has type (int list -> 'a) -> 'b -> 'a
but is here used with type (int list -> 'a) -> 'b -> int list -> 'a
Relevant code: f
------------------------------------------------------------------
File "0902.ml", line 14, characters 10-13:
Try replacing
    fun a x -> (a [0])
with
    fun x a -> (a [0])
of type
    'c -> (int list -> 'd) -> 'd
within context
    fun l1
      l2 ->
        (let add (l1, l2) =
            let f x a = (a [0]) in
              let base = [], [] in
              let args = [] in let (_, res) = (List.fold_left f base  args) in res
            in
            (removeZero (add (padZero l1 l2))))
==============================
