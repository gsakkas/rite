------------------------------------------------------------------
File "0010.ml", line 23, characters 72-74:
This expression has type int list but is here used with type int
Relevant code: at
------------------------------------------------------------------
Triaged the following locations:
File "0010.ml", line 24, characters 4-89:
And modified the following location:
File "0010.ml", line 23, characters 72-74:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    at
with
    at; [[...]]
The actual replacement has type
    int
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match a with 
                                                  | ah :: at -> (match x with 
                                                                 | xh :: xt ->
                                                                   ah +
                                                                       (at;
                                                                         [[...]]))) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0010.ml", line 24, characters 4-89:
And modified the following location:
File "0010.ml", line 23, characters 72-74:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    at
with
    ah
The actual replacement has type
    int
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match a with 
                                                  | ah :: at -> (match x with 
                                                                 | xh :: xt ->
                                                                   ah
                                                                       +
                                                                       ah)) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0010.ml", line 24, characters 4-89:
And modified the following location:
File "0010.ml", line 23, characters 70-71:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    +
with
    +; [[...]]
The actual replacement has type
    'a -> 'a list -> 'b
within context
    fun l1 l2 -> (let add (l1, l2) = let f a x = (match a with 
                                                  | ah :: at -> (match x with 
                                                                 | xh :: xt ->
                                                                   (ah
                                                                         +; [[...]]
                                                                         at))) in [[...other program...]] in (removeZero
                (add (padZero l1 l2))))
==============================
Triaged the following locations:
File "0010.ml", line 24, characters 4-89:
And modified the following location:
File "0010.ml", line 23, characters 4-168:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    let f a x = (match a with 
                 | ah :: at -> (match x with 
                                | xh :: xt ->
                                  ah
                                      +
                                      at)) in let base = l1 in
      let args = l2 in let (_, res) = (List.fold_left f base  args) in res
with
    [[...other program...]]
The actual replacement has type
    'c
==============================
