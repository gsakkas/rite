------------------------------------------------------------------
File "1667.ml", line 53, characters 11-111:
This expression has type expr * expr * expr but is here used with type
  expr * expr * expr * 'a
Relevant code: ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
             (build (rand, (depth - 1))))
------------------------------------------------------------------
File "1667.ml", line 53, characters 11-111:
Try replacing
    (build (rand, depth - 1)), (build (rand, depth - 1)), (build (rand, depth - 1))
with
    (build (rand, depth - 1)),
      (build (rand, depth - 1)), [[...]], (build (rand, depth - 1))
of type
    expr * expr * expr *
    expr
within context
    let rec build (rand, depth) =
    (if depth = 0 then (buildX ()) else (match (rand (1, 8)) with 
                                         | 1 ->
                                           (buildSine (build (rand, depth - 1)))
                                         | 2 ->
                                           (buildCosine (build (rand, depth - 1)))
                                         | 3 ->
                                           (buildAverage
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 4 ->
                                           (buildTimes
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 5 ->
                                           (buildThresh
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 6 -> (buildX ())
                                         | 7 -> (buildY ())
                                         | 8 ->
                                           (buildMagic (build (rand, depth - 1)))
                                         | 9 ->
                                           (buildWeird
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   [[...]],
                                                   (build (rand, depth - 1))))
                                         | _ -> (buildX ())))
    ;; 
==============================
File "1667.ml", line 53, characters 11-111:
Try replacing
    (build (rand, depth - 1)), (build (rand, depth - 1)), (build (rand, depth - 1))
with
    [[...]],
      (build (rand, depth - 1)),
      (build (rand, depth - 1)), (build (rand, depth - 1))
of type
    expr * expr * expr *
    expr
within context
    let rec build (rand, depth) =
    (if depth = 0 then (buildX ()) else (match (rand (1, 8)) with 
                                         | 1 ->
                                           (buildSine (build (rand, depth - 1)))
                                         | 2 ->
                                           (buildCosine (build (rand, depth - 1)))
                                         | 3 ->
                                           (buildAverage
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 4 ->
                                           (buildTimes
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 5 ->
                                           (buildThresh
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 6 -> (buildX ())
                                         | 7 -> (buildY ())
                                         | 8 ->
                                           (buildMagic (build (rand, depth - 1)))
                                         | 9 ->
                                           (buildWeird
                                               ([[...]],
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | _ -> (buildX ())))
    ;; 
==============================
File "1667.ml", line 53, characters 11-111:
Try replacing
    (build (rand, depth - 1)), (build (rand, depth - 1)), (build (rand, depth - 1))
with
    (build (rand, depth - 1)),
      [[...]], (build (rand, depth - 1)), (build (rand, depth - 1))
of type
    expr * expr * expr *
    expr
within context
    let rec build (rand, depth) =
    (if depth = 0 then (buildX ()) else (match (rand (1, 8)) with 
                                         | 1 ->
                                           (buildSine (build (rand, depth - 1)))
                                         | 2 ->
                                           (buildCosine (build (rand, depth - 1)))
                                         | 3 ->
                                           (buildAverage
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 4 ->
                                           (buildTimes
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 5 ->
                                           (buildThresh
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 6 -> (buildX ())
                                         | 7 -> (buildY ())
                                         | 8 ->
                                           (buildMagic (build (rand, depth - 1)))
                                         | 9 ->
                                           (buildWeird
                                               ((build (rand, depth - 1)),
                                                   [[...]],
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | _ -> (buildX ())))
    ;; 
==============================
File "1667.ml", line 53, characters 11-111:
Try replacing
    (build (rand, depth - 1)), (build (rand, depth - 1)), (build (rand, depth - 1))
with
    (build (rand, depth - 1)),
      (build (rand, depth - 1)), (build (rand, depth - 1)), [[...]]
of type
    expr * expr * expr * 'b
within context
    let rec build (rand, depth) =
    (if depth = 0 then (buildX ()) else (match (rand (1, 8)) with 
                                         | 1 ->
                                           (buildSine (build (rand, depth - 1)))
                                         | 2 ->
                                           (buildCosine (build (rand, depth - 1)))
                                         | 3 ->
                                           (buildAverage
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 4 ->
                                           (buildTimes
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 5 ->
                                           (buildThresh
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 6 -> (buildX ())
                                         | 7 -> (buildY ())
                                         | 8 ->
                                           (buildMagic (build (rand, depth - 1)))
                                         | 9 ->
                                           (buildWeird
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   [[...]]))
                                         | _ -> (buildX ())))
    ;; 
==============================
File "1667.ml", line 52, characters 9-19:
Try replacing
    buildWeird
with
    buildWeird; [[...]]
of type
    expr * expr * expr ->
    expr
within context
    let rec build (rand, depth) =
    (if depth = 0 then (buildX ()) else (match (rand (1, 8)) with 
                                         | 1 ->
                                           (buildSine (build (rand, depth - 1)))
                                         | 2 ->
                                           (buildCosine (build (rand, depth - 1)))
                                         | 3 ->
                                           (buildAverage
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 4 ->
                                           (buildTimes
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 5 ->
                                           (buildThresh
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | 6 -> (buildX ())
                                         | 7 -> (buildY ())
                                         | 8 ->
                                           (buildMagic (build (rand, depth - 1)))
                                         | 9 ->
                                           ((buildWeird; [[...]])
                                               ((build (rand, depth - 1)),
                                                   (build (rand, depth - 1)),
                                                   (build (rand, depth - 1))))
                                         | _ -> (buildX ())))
    ;; 
==============================
