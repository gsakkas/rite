------------------------------------------------------------------
File "3373.ml", line 12, characters 18-20:
This expression has type 'a list but is here used with type int
Relevant code: []
------------------------------------------------------------------
File "3373.ml", line 12, characters 11-17:
Try replacing
    helper
with
    helper; [[...]]
of type
    'b list -> int -> int list
within context
    fun l -> (match l with 
              | [] -> []
              | h :: t ->
                (match
                 (mulByDigit i (List.rev (List.map (fun x -> x * 10) t))) @ [h * i]
                 with
                 
                 | [] -> []
                 | h :: t ->
                   (let rec helper acc v = (if v = 0 then acc else (mod v 10)) in
                         ((helper; [[...]]) [] h))))
==============================
File "3373.ml", line 11, characters 26-65:
Try replacing
    fun acc v -> (if v = 0 then acc else (mod v 10))
with
    fun acc v -> (if v = 0 then acc else (mod v 10)); [[...]]
of type
    'c
within context
    fun i l -> (match l with 
                | [] -> []
                | h :: t ->
                  (match
                   (mulByDigit i (List.rev (List.map (fun x -> x * 10) t)))
                     @ [h * i]
                   with
                   
                   | [] -> []
                   | h :: t ->
                     (let rec helper =
                           fun acc v -> (if v = 0 then acc else (mod v 10)); [[...]]
                           in
                           (helper [] h))))
==============================
