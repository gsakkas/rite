------------------------------------------------------------------
File "0451.ml", line 31, characters 8-25:
This expression has type float but is here used with type int
Relevant code: (eval (e1, x, y))
------------------------------------------------------------------
Triaged the following locations:
File "0451.ml", line 31, characters 6-98:
File "0451.ml", line 33, characters 8-9:
And modified the following location:
File "0451.ml", line 33, characters 29-30:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    *
with
    *; [[...]]
The actual replacement has type
    float -> float -> 'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, a_less, b_less) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (a_less, x, y))
                                    else
                                    (eval (b_less, x, y)))
                              | Percent e1 -> ((eval (e1, x, y)) *. 0.01)
                              | Negate e1 -> ((eval (e1, x, y)) *. -1.0)
                              | SumSquared (e1, e2, e3) ->
                                ([[...other program...]] +; [[...]]
                                      ((eval (e3, x, y))
                                          *; [[...]] (eval (e3, x, y))))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 31, characters 6-98:
File "0451.ml", line 33, characters 8-9:
And modified the following location:
File "0451.ml", line 33, characters 29-30:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    *
with
    <
The actual replacement has type
    float -> float -> bool
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (a, b, a_less, b_less) ->
                                (if (eval (a, x, y)) < (eval (b, x, y)) then
                                    (eval (a_less, x, y))
                                    else
                                    (eval (b_less, x, y)))
                              | Percent e1 -> ((eval (e1, x, y)) *. 0.01)
                              | Negate e1 -> ((eval (e1, x, y)) *. -1.0)
                              | SumSquared (e1, e2, e3) ->
                                ([[...other program...]] +; [[...]]
                                      (eval (e3, x, y)) < (eval (e3, x, y)))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 9-13:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    eval
with
    eval
The actual replacement has type
    expr * int * int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 15-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e2
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e2, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 15-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e1
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 15-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e, x, y)) * (eval (e1, x, y)) +
                                        (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 15-17:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e3
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e3, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 15-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, x, y
with
    e1, x, y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 19-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 19-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, y, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 19-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, x, y
with
    e1, y, x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, y, x)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 22-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    y
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 22-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    x
The actual replacement has type
    expr * int * int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, x)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 9-24:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (eval (e1, x, y))
with
    (eval ((e1, x, y)))
The actual replacement has type
    int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval ((e1, x, y))) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
Triaged the following locations:
File "0451.ml", line 20, characters 15-44:
File "0451.ml", line 21, characters 17-46:
File "0451.ml", line 22, characters 23-70:
File "0451.ml", line 23, characters 21-59:
File "0451.ml", line 25, characters 6-106:
File "0451.ml", line 28, characters 18-43:
File "0451.ml", line 29, characters 17-44:
And modified the following location:
File "0451.ml", line 31, characters 26-27:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    *
with
    *
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (a, b, a_less, b_less) ->
                                [[...other program...]]
                              | Percent e1 -> [[...other program...]]
                              | Negate e1 -> [[...other program...]]
                              | SumSquared (e1, e2, e3) ->
                                ((eval (e1, x, y)) * (eval (e1, x, y))
                                        + (eval (e2, x, y)) * (eval (e2, x, y)))
                                    + (eval (e3, x, y)) * (eval (e3, x, y))) ;; 
==============================
