------------------------------------------------------------------
File "1289.ml", line 48, characters 15-179:
This expression has type expr but is here used with type unit
Relevant code: buildThresh
                 ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
                   (build (rand, (depth - 1))), (build (rand, (depth - 1))))
------------------------------------------------------------------
Triaged the following locations:
File "1289.ml", line 33, characters 7-591:
And modified the following location:
File "1289.ml", line 31, characters 10-19:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildSine
with
    buildSine; [[...]]
The actual replacement has type
    (unit -> expr) -> unit -> expr
within context
    let rec build (rand, depth) =
    (if depth = 0 then (if (rand (0, 2)) < 1 then buildX else buildY) else
      (let x = (rand (0, 5)) in
          (if x = 0 then ((buildSine; [[...]]) (build (rand, depth - 1))) else
              [[...other program...]])))
    ;; 
==============================
