------------------------------------------------------------------
File "1521.ml", line 3, characters 58-59:
This expression has type ('a -> 'b -> 'c) -> 'b -> 'a -> 'c
but is here used with type ('a -> 'b -> 'c) -> 'b -> 'a -> 'b -> 'c
Relevant code: f
------------------------------------------------------------------
File "1521.ml", line 3, characters 8-11:
Try replacing
    fun a x k -> (a k x)
with
    fun x a k -> (a k x)
of type
    'd -> ('e -> 'd -> 'f) -> 'e -> 'f
within context
    let pipe fs =
    let f x a k = (a k x) in let base y = y in (List.fold_left f base  fs)
    ;; 
==============================
File "1521.ml", line 3, characters 12-21:
Try replacing
    fun k -> (a k x)
with
    fun k _ -> (a k x)
of type
    'g -> 'h -> 'i
within context
    let pipe fs =
    let f a x k _ = (a k x) in let base y = y in (List.fold_left f base  fs)
    ;; 
==============================
File "1521.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    base
of type
    ((('j -> 'k) -> 'j -> 'k) -> 'j -> ('j -> 'k) -> 'k) ->
    (('j -> 'k) -> 'j -> 'k) -> 'j -> ('j -> 'k) -> 'k
within context
    let pipe fs = let f a x k = (a k x) in let base y = y in (base f base  fs) ;; 
==============================
File "1521.ml", line 3, characters 43-57:
Try replacing
    List.fold_left
with
    f
of type
    (('l -> ('m -> 'm) -> 'n) -> ('m -> 'm) -> 'l -> 'n) ->
    ('m -> 'm) -> ('l -> ('m -> 'm) -> 'n) -> 'l -> 'n
within context
    let pipe fs = let f a x k = (a k x) in let base y = y in (f f base  fs) ;; 
==============================
