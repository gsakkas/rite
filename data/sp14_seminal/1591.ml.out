------------------------------------------------------------------
File "1591.ml", line 21, characters 17-18:
This expression has type int but is here used with type float
Relevant code: 1
------------------------------------------------------------------
Triaged the following locations:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 23, characters 23-70:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 21, characters 17-18:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    1
with
    1; [[...]]
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e ->
                                (1; [[...]] /. (sin (pi *. (eval (e, x, y)))))
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 23, characters 23-70:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 21, characters 19-21:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    /.
with
    /.; [[...]]
The actual replacement has type
    int -> float -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e ->
                                (1 /.; [[...]] (sin (pi *. (eval (e, x, y)))))
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 56-60:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2, x, y
with
    e2, y, x
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, y, x))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 23, characters 23-70:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 22, characters 21-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    /.
with
    /.; [[...]]
The actual replacement has type
    int -> float -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e ->
                                (1 /.; [[...]] (cos (pi *. (eval (e, x, y)))))
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 23, characters 23-70:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 22, characters 19-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    1
with
    1; [[...]]
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e ->
                                (1; [[...]] /. (cos (pi *. (eval (e, x, y)))))
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 31-33:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e2
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e2, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 25-40:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (eval (e1, x, y))
with
    (eval ((e1, x, y)))
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval ((e1, x, y))) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 31-33:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e1
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 31-33:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 35-36:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    x
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 35-36:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    x
with
    y
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, y, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 38-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    y
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 38-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    y
with
    x
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, x)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 35-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, x, y
with
    e1, y, x
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, y, x)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "1591.ml", line 21, characters 17-52:
File "1591.ml", line 22, characters 19-54:
File "1591.ml", line 24, characters 21-59:
File "1591.ml", line 26, characters 6-100:
And modified the following location:
File "1591.ml", line 23, characters 31-36:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1, x, y
with
    e1, x, y
The actual replacement has type
    expr * float * float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e -> (sin (pi *. (eval (e, x, y))))
                              | Cosine e -> (sin (pi *. (eval (e, x, y))))
                              | ArcSine e -> [[...other program...]]
                              | ArcCosine e -> [[...other program...]]
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) ->
                                [[...other program...]]) ;; 
==============================
