------------------------------------------------------------------
File "1684.ml", line 28, characters 24-45:
This expression has type expr but is here used with type expr * expr
Relevant code: (build (rand, depth))
------------------------------------------------------------------
Triaged the following locations:
File "1684.ml", line 27, characters 11-44:
File "1684.ml", line 28, characters 11-45:
File "1684.ml", line 29, characters 11-43:
File "1684.ml", line 30, characters 11-44:
And modified the following location:
File "1684.ml", line 26, characters 11-20:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildSine
with
    buildSine; [[...]]
The actual replacement has type
    unit -> unit
within context
    let rec build (rand, depth) =
    (if depth > 0 then (let d = depth - 1 in (match (rand (0, 4)) with 
                                              | 0 ->
                                                ((buildSine; [[...]])
                                                    (build (rand, d)))
                                              | 1 -> [[...other program...]]
                                              | 2 -> [[...other program...]]
                                              | 3 -> [[...other program...]]
                                              | 4 -> [[...other program...]])))
    ;; 
==============================
Triaged the following locations:
File "1684.ml", line 26, characters 11-38:
File "1684.ml", line 28, characters 11-45:
File "1684.ml", line 29, characters 11-43:
File "1684.ml", line 30, characters 11-44:
And modified the following location:
File "1684.ml", line 27, characters 11-22:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildCosine
with
    buildCosine; [[...]]
The actual replacement has type
    unit -> unit
within context
    let rec build (rand, depth) =
    (if depth > 0 then (let d = depth - 1 in (match (rand (0, 4)) with 
                                              | 0 -> [[...other program...]]
                                              | 1 ->
                                                ((buildCosine; [[...]])
                                                    (build (rand, depth)))
                                              | 2 -> [[...other program...]]
                                              | 3 -> [[...other program...]]
                                              | 4 -> [[...other program...]])))
    ;; 
==============================
Triaged the following locations:
File "1684.ml", line 26, characters 11-38:
File "1684.ml", line 27, characters 11-44:
File "1684.ml", line 29, characters 11-43:
File "1684.ml", line 30, characters 11-44:
And modified the following location:
File "1684.ml", line 28, characters 11-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildAverage
with
    buildAverage; [[...]]
The actual replacement has type
    unit -> unit
within context
    let rec build (rand, depth) =
    (if depth > 0 then (let d = depth - 1 in (match (rand (0, 4)) with 
                                              | 0 -> [[...other program...]]
                                              | 1 -> [[...other program...]]
                                              | 2 ->
                                                ((buildAverage; [[...]])
                                                    (build (rand, depth)))
                                              | 3 -> [[...other program...]]
                                              | 4 -> [[...other program...]])))
    ;; 
==============================
Triaged the following locations:
File "1684.ml", line 26, characters 11-38:
File "1684.ml", line 27, characters 11-44:
File "1684.ml", line 28, characters 11-45:
File "1684.ml", line 29, characters 11-43:
And modified the following location:
File "1684.ml", line 30, characters 11-22:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildThresh
with
    buildThresh; [[...]]
The actual replacement has type
    unit -> unit
within context
    let rec build (rand, depth) =
    (if depth > 0 then (let d = depth - 1 in (match (rand (0, 4)) with 
                                              | 0 -> [[...other program...]]
                                              | 1 -> [[...other program...]]
                                              | 2 -> [[...other program...]]
                                              | 3 -> [[...other program...]]
                                              | 4 ->
                                                ((buildThresh; [[...]])
                                                    (build (rand, depth))))))
    ;; 
==============================
Triaged the following locations:
File "1684.ml", line 26, characters 11-38:
File "1684.ml", line 27, characters 11-44:
File "1684.ml", line 28, characters 11-45:
File "1684.ml", line 30, characters 11-44:
And modified the following location:
File "1684.ml", line 29, characters 11-21:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildTimes
with
    buildTimes; [[...]]
The actual replacement has type
    unit -> unit
within context
    let rec build (rand, depth) =
    (if depth > 0 then (let d = depth - 1 in (match (rand (0, 4)) with 
                                              | 0 -> [[...other program...]]
                                              | 1 -> [[...other program...]]
                                              | 2 -> [[...other program...]]
                                              | 3 ->
                                                ((buildTimes; [[...]])
                                                    (build (rand, depth)))
                                              | 4 -> [[...other program...]])))
    ;; 
==============================
