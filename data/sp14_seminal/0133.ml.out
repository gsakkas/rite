------------------------------------------------------------------
File "0133.ml", line 18, characters 23-26:
This expression has type 'a list but is here used with type int
Relevant code: l1'
------------------------------------------------------------------
File "0133.ml", line 16, characters 8-15:
Try replacing
    [], []
with
    _
of type
    int * int list
within context
    let f a x = let (carry, num) = a in (match x with 
                                         | _ ->
                                           (0,
                                                 (if carry > 0 then carry :: num
                                                   else
                                                   num))
                                         | (l1', l2') ->
                                           (let addit = (l1' + l2') + carry in
                                                 (if addit > 10 then (mod addit 10)
                                                       else
                                                       0)
                                                     ,
                                                     addit / 10 ::
                                                         num)) in let base = 0, []
      in
      let args = (List.combine l1 l2) in
      let (_, res) = (List.fold_left f base  args) in res
==============================
