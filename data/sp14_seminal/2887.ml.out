------------------------------------------------------------------
File "2887.ml", line 29, characters 29-30:
This expression has type int but is here used with type float
Relevant code: 2
------------------------------------------------------------------
Triaged the following locations:
File "2887.ml", line 29, characters 6-59:
File "2887.ml", line 29, characters 60-61:
And modified the following location:
File "2887.ml", line 30, characters 27-29:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    **
with
    **; [[...]]
The actual replacement has type
    float -> int -> 'a
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (e1, e2, e3, e4) ->
                                (if (eval (e1, x, y)) < (eval (e2, x, y)) then
                                    (eval (e3, x, y))
                                    else
                                    (eval (e4, x, y)))
                              | Log e1 ->
                                (let b = (eval (e1, x, y)) in
                                      (if b > 1.0 then (log b) else 0.0))
                              | SumOfSquares (e1, e2, e3) ->
                                ([[...other program...]] +; [[...]]
                                      ((eval (e3, x, y)) **; [[...]] 2))) ;; 
==============================
Triaged the following locations:
File "2887.ml", line 29, characters 6-59:
File "2887.ml", line 29, characters 60-61:
And modified the following location:
File "2887.ml", line 30, characters 30-31:
Your code has several type errors.  The following subexpressions are type-correct on their own, but do not fit with the rest of the program:
    +
If you ignore other surrounding code, try replacing
    2
with
    2; [[...]]
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e1 -> (sin (pi *. (eval (e1, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (e1, e2, e3, e4) ->
                                (if (eval (e1, x, y)) < (eval (e2, x, y)) then
                                    (eval (e3, x, y))
                                    else
                                    (eval (e4, x, y)))
                              | Log e1 ->
                                (let b = (eval (e1, x, y)) in
                                      (if b > 1.0 then (log b) else 0.0))
                              | SumOfSquares (e1, e2, e3) ->
                                ([[...other program...]] +; [[...]]
                                      (eval (e3, x, y)) ** (2; [[...]]))) ;; 
==============================
