------------------------------------------------------------------
File "1393.ml", line 3, characters 62-63:
This expression has type 'a -> 'b -> ('c -> 'd) -> ('a -> 'c) -> 'd
but is here used with type 'a -> 'b -> 'a
Relevant code: f
------------------------------------------------------------------
File "1393.ml", line 3, characters 8-15:
Try replacing
    fun a x f x -> (f (x a))
with
    fun x x f a -> (f (x a))
of type
    'e -> ('f -> 'g) -> ('g -> 'h) -> 'f -> 'h
within context
    let pipe fs =
    let f x x f a = (f (x a)) in let base z = z in (List.fold_left f base  fs)
    ;; 
==============================
File "1393.ml", line 3, characters 47-61:
Try replacing
    List.fold_left
with
    base
of type
    (('i -> 'i) -> 'j -> ('k -> 'l) -> (('i -> 'i) -> 'k) -> 'l) ->
    ('i -> 'i) -> 'j -> ('k -> 'l) -> (('i -> 'i) -> 'k) -> 'l
within context
    let pipe fs = let f a x f x = (f (x a)) in let base z = z in (base f base  fs)
    ;; 
==============================
File "1393.ml", line 3, characters 47-61:
Try replacing
    List.fold_left
with
    f
of type
    ('m -> 'n -> ('o -> 'p) -> ('m -> 'o) -> 'p) ->
    ('q -> 'q) ->
    ('r -> 's) -> (('m -> 'n -> ('o -> 'p) -> ('m -> 'o) -> 'p) -> 'r) -> 's
within context
    let pipe fs = let f a x f x = (f (x a)) in let base z = z in (f f base  fs) ;; 
==============================
