------------------------------------------------------------------
File "1869.ml", line 30, characters 24-40:
This expression has type expr but is here used with type float
Relevant code: Average (e1, e2)
------------------------------------------------------------------
File "1869.ml", line 30, characters 24-40:
Try replacing
    (Average e1, e2)
with
    (Average e1, e2); [[...]]
of type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> (sin (pi *. (eval (e', x, y))))
                              | Cosine e' -> (cos (pi *. (eval (e', x, y))))
                              | Average (e1, e2) ->
                                (((eval (e1, x, y)) +. (eval (e2, x, y))) /. 2.0)
                              | Times (e1, e2) ->
                                ((eval (e1, x, y)) *. (eval (e2, x, y)))
                              | Thresh (e1, e2, e3, e4) ->
                                (if (eval (e1, x, y)) < (eval (e2, x, y)) then
                                    (eval (e3, x, y))
                                    else
                                    (eval (e4, x, y)))
                              | Acossin (e1, e2) ->
                                ((((acos (eval (e1, x, y)))
                                              *. (asin (eval (e2, x, y))))
                                          *. 2.0)
                                      /. (pi *. pi))
                              | Crazy (e1, e2, e3) ->
                                ((Average e1, e2); [[...]])) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e3
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e3, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e1
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    e2
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e2, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    y
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average y, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 33-35:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e1
with
    x
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average x, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e3
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, e3)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, e)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e2
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, e2)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    e1
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, e1)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    y
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, y)) ;; 
==============================
Triaged the following locations:
File "1869.ml", line 19, characters 15-44:
File "1869.ml", line 20, characters 17-46:
File "1869.ml", line 21, characters 23-70:
File "1869.ml", line 22, characters 21-59:
File "1869.ml", line 24, characters 6-100:
File "1869.ml", line 28, characters 6-91:
And modified the following location:
File "1869.ml", line 30, characters 37-39:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    e2
with
    x
The actual replacement has type
    expr
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e' -> [[...other program...]]
                              | Cosine e' -> [[...other program...]]
                              | Average (e1, e2) -> [[...other program...]]
                              | Times (e1, e2) -> [[...other program...]]
                              | Thresh (e1, e2, e3, e4) -> [[...other program...]]
                              | Acossin (e1, e2) -> [[...other program...]]
                              | Crazy (e1, e2, e3) -> (Average e1, x)) ;; 
==============================
