------------------------------------------------------------------
File "0799.ml", line 37, characters 6-292:
This expression has type expr but is here used with type unit -> expr
Relevant code: (match rand (1, 7) with
       | 1 -> buildSine next
       | 2 -> buildCosine next
       | 3 -> buildAverage (next, next)
       | 4 -> buildTimes (next, next)
       | 5 -> buildThresh (next, next, next, next)
       | 6 -> buildSqrt next
       | 7 -> buildGauss (next, next, next))
------------------------------------------------------------------
File "0799.ml", line 34, characters 9-61:
Try replacing
    (match (rand (1, 2)) with 
     | 1 -> buildX
     | 2 -> buildY)
with
    (match (rand (1, 2)) with 
     | 1 -> buildX
     | 2 -> buildY); [[...]]
of type
    expr
==============================
Triaged the following locations:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 43, characters 14-28:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 38, characters 14-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildSine
with
    buildSine; [[...]]
The actual replacement has type
    (unit -> expr) -> unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> ((buildSine; [[...]]) next)
                                            | 2 -> [[...other program...]]
                                            | 3 -> [[...other program...]]
                                            | 4 -> [[...other program...]]
                                            | 5 -> [[...other program...]]
                                            | 6 -> [[...other program...]]
                                            | 7 -> [[...other program...]]))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 43, characters 14-28:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 39, characters 14-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildCosine
with
    buildCosine; [[...]]
The actual replacement has type
    (unit -> expr) -> unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> ((buildCosine; [[...]]) next)
                                            | 3 -> [[...other program...]]
                                            | 4 -> [[...other program...]]
                                            | 5 -> [[...other program...]]
                                            | 6 -> [[...other program...]]
                                            | 7 -> [[...other program...]]))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 43, characters 14-28:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 40, characters 14-26:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildAverage
with
    buildAverage; [[...]]
The actual replacement has type
    (unit -> expr) * (unit -> expr) ->
    unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> [[...other program...]]
                                            | 3 ->
                                              ((buildAverage; [[...]]) (next, next))
                                            | 4 -> [[...other program...]]
                                            | 5 -> [[...other program...]]
                                            | 6 -> [[...other program...]]
                                            | 7 -> [[...other program...]]))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 43, characters 14-28:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 41, characters 14-24:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildTimes
with
    buildTimes; [[...]]
The actual replacement has type
    (unit -> expr) * (unit -> expr) ->
    unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> [[...other program...]]
                                            | 3 -> [[...other program...]]
                                            | 4 ->
                                              ((buildTimes; [[...]]) (next, next))
                                            | 5 -> [[...other program...]]
                                            | 6 -> [[...other program...]]
                                            | 7 -> [[...other program...]]))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 43, characters 14-28:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 42, characters 14-25:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildThresh
with
    buildThresh; [[...]]
The actual replacement has type
    (unit -> expr) * (unit -> expr) *
    (unit -> expr) * (unit -> expr) ->
    unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> [[...other program...]]
                                            | 3 -> [[...other program...]]
                                            | 4 -> [[...other program...]]
                                            | 5 ->
                                              ((buildThresh; [[...]])
                                                  (next, next, next, next))
                                            | 6 -> [[...other program...]]
                                            | 7 -> [[...other program...]]))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 43, characters 14-28:
And modified the following location:
File "0799.ml", line 44, characters 14-24:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildGauss
with
    buildGauss; [[...]]
The actual replacement has type
    (unit -> expr) * (unit -> expr) *
    (unit -> expr) -> unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> [[...other program...]]
                                            | 3 -> [[...other program...]]
                                            | 4 -> [[...other program...]]
                                            | 5 -> [[...other program...]]
                                            | 6 -> [[...other program...]]
                                            | 7 ->
                                              ((buildGauss; [[...]])
                                                  (next, next, next))))) ;; 
==============================
Triaged the following locations:
File "0799.ml", line 38, characters 14-28:
File "0799.ml", line 39, characters 14-30:
File "0799.ml", line 40, characters 14-39:
File "0799.ml", line 41, characters 14-37:
File "0799.ml", line 42, characters 14-50:
File "0799.ml", line 44, characters 14-43:
And modified the following location:
File "0799.ml", line 43, characters 14-23:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    buildSqrt
with
    buildSqrt; [[...]]
The actual replacement has type
    (unit -> expr) -> unit -> expr
within context
    let rec build (rand, depth) = (match depth with 
                                   | 0 -> (match (rand (1, 2)) with 
                                           | 1 -> buildX
                                           | 2 -> buildY)
                                   | _ ->
                                     (let next = (build (rand, depth - 1)) in
                                           (match (rand (1, 7)) with 
                                            | 1 -> [[...other program...]]
                                            | 2 -> [[...other program...]]
                                            | 3 -> [[...other program...]]
                                            | 4 -> [[...other program...]]
                                            | 5 -> [[...other program...]]
                                            | 6 -> ((buildSqrt; [[...]]) next)
                                            | 7 -> [[...other program...]]))) ;; 
==============================
