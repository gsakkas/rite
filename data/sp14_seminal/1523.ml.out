------------------------------------------------------------------
File "1523.ml", line 3, characters 60-61:
This expression has type 'a -> ('b -> 'c) -> ('a -> 'b) -> 'c
but is here used with type 'a -> ('b -> 'c) -> 'a
Relevant code: f
------------------------------------------------------------------
File "1523.ml", line 3, characters 10-13:
Try replacing
    fun x k -> (x (k a))
with
    fun (x, k) -> (x (k a))
of type
    ('d -> 'e) * ('f -> 'd) -> 'e
within context
    let pipe fs =
    let f a (x, k) = (x (k a)) in let base y = y in (List.fold_left f base  fs)
    ;; 
==============================
File "1523.ml", line 3, characters 45-61:
Try replacing
    (List.fold_left f base  fs)
with
    (List.fold_left (f base fs))
of type
    (('g -> 'g) -> 'h) -> 'i list -> ('g -> 'g) -> 'h
within context
    let pipe fs =
    let f a x k = (x (k a)) in let base y = y in (List.fold_left (f base fs))
    ;; 
==============================
File "1523.ml", line 3, characters 45-59:
Try replacing
    List.fold_left
with
    f
of type
    ('j -> ('k -> 'l) -> ('j -> 'k) -> 'l) ->
    ('m -> 'm) -> (('j -> ('k -> 'l) -> ('j -> 'k) -> 'l) -> 'm) -> 'm
within context
    let pipe fs = let f a x k = (x (k a)) in let base y = y in (f f base  fs) ;; 
==============================
File "1523.ml", line 3, characters 45-59:
Try replacing
    List.fold_left
with
    base
of type
    (('n -> 'n) -> ('o -> 'p) -> (('n -> 'n) -> 'o) -> 'p) ->
    ('n -> 'n) -> ('o -> 'p) -> (('n -> 'n) -> 'o) -> 'p
within context
    let pipe fs = let f a x k = (x (k a)) in let base y = y in (base f base  fs) ;; 
==============================
File "1523.ml", line 3, characters 21-22:
Try replacing
    a
with
    List.fold_left
of type
    ('q -> 'r -> 'q) -> 'q -> 'r list -> 'q
within context
    fun a x k -> (x (k List.fold_left))
==============================
