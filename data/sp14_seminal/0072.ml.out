------------------------------------------------------------------
File "0072.ml", line 3, characters 64-65:
This expression has type ('a -> 'b) -> 'c -> 'a -> 'd -> ('b -> 'e) -> 'e
but is here used with type ('a -> 'b) -> 'c -> 'a -> 'b
Relevant code: f
------------------------------------------------------------------
File "0072.ml", line 3, characters 8-11:
Try replacing
    fun a x c y z -> (z (a c))
with
    fun x a c y z -> (z (a c))
of type
    'f -> ('g -> 'h) -> 'g -> 'i -> ('h -> 'j) -> 'j
within context
    let pipe fs =
    let f x a c y z = (z (a c)) in let base b = b in (List.fold_left f base  fs)
    ;; 
==============================
File "0072.ml", line 3, characters 49-63:
Try replacing
    List.fold_left
with
    base
of type
    (('k -> 'k) -> 'l -> 'k -> 'm -> ('k -> 'n) -> 'n) ->
    ('k -> 'k) -> 'l -> 'k -> 'm -> ('k -> 'n) -> 'n
within context
    let pipe fs = let f a x c y z = (z (a c)) in let base b = b in (base f base  fs)
    ;; 
==============================
File "0072.ml", line 3, characters 49-63:
Try replacing
    List.fold_left
with
    f
of type
    (('o -> 'p) -> 'q -> 'o -> 'r -> ('p -> 's) -> 's) ->
    ('t -> 't) ->
    ('o -> 'p) -> 'u -> (('q -> 'o -> 'r -> ('p -> 's) -> 's) -> 'v) -> 'v
within context
    let pipe fs = let f a x c y z = (z (a c)) in let base b = b in (f f base  fs)
    ;; 
==============================
File "0072.ml", line 3, characters 20-21:
Try replacing
    z
with
    x
of type
    'w -> 'x
within context
    fun x c y z -> (x (a c))
==============================
File "0072.ml", line 3, characters 23-24:
Try replacing
    a
with
    x
of type
    'y -> 'z
within context
    fun c y z -> (z (x c))
==============================
