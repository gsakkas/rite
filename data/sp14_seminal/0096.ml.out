------------------------------------------------------------------
File "0096.ml", line 19, characters 18-44:
This expression has type 'a -> 'a but is here used with type 'b * 'c
Relevant code: List.fold_left f base args
------------------------------------------------------------------
File "0096.ml", line 19, characters 18-32:
Try replacing
    List.fold_left
with
    base
of type
    (('d -> 'd) -> ('e * 'f) list -> 'g * 'h) ->
    ('d -> 'd) -> ('e * 'f) list -> 'g * 'h
within context
    let f a x = (failwith "") in
      let base x = x in
      let args = (List.combine (List.rev l1) (List.rev l2)) in
      let (_, res) = (base f base  args) in res
==============================
File "0096.ml", line 19, characters 18-32:
Try replacing
    List.fold_left
with
    f
of type
    ('i -> 'j -> 'k) -> ('l -> 'l) -> ('m * 'n) list -> 'o * 'p
within context
    let f a x = (failwith "") in
      let base x = x in
      let args = (List.combine (List.rev l1) (List.rev l2)) in
      let (_, res) = (f f base  args) in res
==============================
