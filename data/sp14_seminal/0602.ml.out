------------------------------------------------------------------
File "0602.ml", line 17, characters 50-62:
This expression has type int but is here used with type int * int
Relevant code: (sum mod 10)
------------------------------------------------------------------
Triaged the following locations:
File "0602.ml", line 16, characters 18-19:
File "0602.ml", line 17, characters 16-27:
File "0602.ml", line 17, characters 31-69:
And modified the following location:
File "0602.ml", line 15, characters 14-110:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    fun c ->
      (let (s, t) = x in let sum = (c + s) + t in sum / 10, x :: (mod sum 10) :: a)
with
    fun c ->
      (let (s, t) = [[...other program...]] in
          let sum = [[...other program...]] in [[...other program...]]);
    [[...]]
The actual replacement has type
    'a
within context
    fun (l1, l2) ->
      (let f a x =
          fun c ->
            (let (s, t) = [[...other program...]] in
                let sum = [[...other program...]] in [[...other program...]]);
          [[...]]
          in
          let base = 0, [0] in
          let args = (List.rev (List.combine l1 l2)) in
          let (_, res) = (List.fold_left f base  args) in res)
==============================
