------------------------------------------------------------------
File "0919.ml", line 17, characters 18-44:
This expression has type (int * int) list but is here used with type 'a * 'b
Relevant code: List.fold_left f base args
------------------------------------------------------------------
File "0919.ml", line 15, characters 15-23:
Try replacing
    [0, 0]
with
    (0, 0), []
of type
    (int * int) * 'c list
within context
    fun l2 ->
      (let add (l1, l2) =
          let f a x = (failwith "to be implemented") in
            let base = (0, 0), [] in
            let args = [(List.combine l1), l2] in
            let (_, res) = (List.fold_left f base  args) in res
          in
          (removeZero (add (padZero l1 l2))))
==============================
File "0919.ml", line 17, characters 18-32:
Try replacing
    List.fold_left
with
    f
of type
    ('d -> 'e -> 'f) ->
    (int * int) list -> (('g list -> ('h * 'g) list) * 'i) list -> 'j * 'k
within context
    let f a x = (failwith "to be implemented") in
      let base = [0, 0] in
      let args = [(List.combine l1), l2] in let (_, res) = (f f base  args) in res
==============================
