------------------------------------------------------------------
File "0531.ml", line 35, characters 35-38:
This expression has type int but is here used with type float
Relevant code: 100
------------------------------------------------------------------
Triaged the following locations:
File "0531.ml", line 35, characters 8-93:
And modified the following location:
File "0531.ml", line 39, characters 11-93:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (log ((eval (b, x, y)) *. 100)) ** (sin ((eval (a, x, y)) *. 100))
with
    [[...]]
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a, b, c) ->
                                (if (eval (c, x, y)) < 0.0 then
                                    [[...other program...]]
                                    else
                                    (-1.0 *. [[...]] -. 1.0))) ;; 
==============================
Triaged the following locations:
File "0531.ml", line 38, characters 8-132:
And modified the following location:
File "0531.ml", line 35, characters 8-76:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    (log ((eval (a, x, y)) *. 100)) ** (sin ((eval (b, x, y)) *. 100))
with
    [[...]]
The actual replacement has type
    float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine i -> (sin (pi *. (eval (i, x, y))))
                              | Cosine i -> (cos (pi *. (eval (i, x, y))))
                              | Average (i1, i2) ->
                                (((eval (i1, x, y)) +. (eval (i2, x, y))) /. 2.0)
                              | Times (i1, i2) ->
                                ((eval (i1, x, y)) *. (eval (i2, x, y)))
                              | Thresh (i1, i2, i3, i4) ->
                                (if (eval (i1, x, y)) < (eval (i2, x, y)) then
                                    (eval (i3, x, y))
                                    else
                                    (eval (i4, x, y)))
                              | ECosSin (a, b) ->
                                2.71 **
                                      (((sin (pi *. (eval (a, x, y))))
                                              +. (cos (pi *. (eval (b, x, y)))))
                                          -. 1.0)
                                    -. 1.0
                              | SinLog (a, b, c) ->
                                (if (eval (c, x, y)) < 0.0 then [[...]] -. 1.0 else
                                    [[...other program...]])) ;; 
==============================
