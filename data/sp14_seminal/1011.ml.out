------------------------------------------------------------------
File "1011.ml", line 2, characters 70-74:
This expression has type ('a -> 'b) -> 'a -> 'b but is here used with type
  ('a -> 'b) -> 'b
Relevant code: base
------------------------------------------------------------------
File "1011.ml", line 2, characters 44-49:
Try replacing
    fun d -> d
with
    fun _ d -> d
of type
    'c -> 'd -> 'd
within context
    let pipe fs =
    let f a x a = (a x) in let base _ d = d in (List.fold_left f base  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 24-31:
Try replacing
    fun a -> (a x)
with
    fun a _ -> (a x)
of type
    ('e -> 'f) -> 'g -> 'f
within context
    let pipe fs =
    let f a x a _ = (a x) in let base d = d in (List.fold_left f base  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 24-31:
Try replacing
    fun a -> (a x)
with
    fun _ a -> (a x)
of type
    'h -> ('i -> 'j) -> 'j
within context
    let pipe fs =
    let f a x _ a = (a x) in let base d = d in (List.fold_left f base  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 53-67:
Try replacing
    List.fold_left
with
    f
of type
    ('k -> 'l -> ('l -> 'm) -> 'm) -> ('n -> 'n) -> (('n -> 'n) -> 'o) -> 'o
within context
    let pipe fs = let f a x a = (a x) in let base d = d in (f f base  fs) ;; 
==============================
File "1011.ml", line 2, characters 53-67:
Try replacing
    List.fold_left
with
    base
of type
    (('p -> 'p) -> 'q -> ('q -> 'r) -> 'r) ->
    ('p -> 'p) -> 'q -> ('q -> 'r) -> 'r
within context
    let pipe fs = let f a x a = (a x) in let base d = d in (base f base  fs) ;; 
==============================
File "1011.ml", line 2, characters 70-74:
Try replacing
    base
with
    f
of type
    ('s -> 't -> ('t -> 'u) -> 'u) -> 't -> ('t -> 'u) -> 'u
within context
    let pipe fs = let f a x a = (a x) in let base d = d in (List.fold_left f f  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 28-29:
Try replacing
    a
with
    List.fold_left
of type
    ('v -> 'w -> 'v) -> 'v -> 'w list -> 'v
within context
    let f a x a = (List.fold_left x) in
      let base d = d in (List.fold_left f base  fs)
==============================
File "1011.ml", line 2, characters 48-49:
Try replacing
    d
with
    fs
of type
    'x list
within context
    let pipe fs =
    let f a x a = (a x) in let base d = fs in (List.fold_left f base  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 48-49:
Try replacing
    d
with
    List.fold_left
of type
    ('y -> 'z -> 'y) -> 'y -> 'z list -> 'y
within context
    let pipe fs =
    let f a x a = (a x) in
      let base d = List.fold_left in (List.fold_left f base  fs)
    ;; 
==============================
File "1011.ml", line 2, characters 48-49:
Try replacing
    d
with
    f
of type
    'a1 -> 'b1 -> ('b1 -> 'c1) -> 'c1
within context
    let pipe fs =
    let f a x a = (a x) in let base d = f in (List.fold_left f base  fs)
    ;; 
==============================
