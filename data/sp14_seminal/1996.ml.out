------------------------------------------------------------------
File "1996.ml", line 22, characters 40-44:
This expression has type int * int but is here used with type
  (int * int) list
Relevant code: args
------------------------------------------------------------------
File "1996.ml", line 22, characters 18-32:
Try replacing
    List.fold_left
with
    List.fold_left; [[...]]
of type
    (int list -> int * int -> int list) -> 'a list -> int * int -> 'b * 'c
within context
    let f a x = (match x with 
                 | (m, n) ->
                   m + n ::
                         a) in let base = [] in
      let args = (match (List.rev (List.combine l1 l2)) with 
                  | [] -> (0, 0)
                  | h :: t ->
                    h) in let (_, res) = ((List.fold_left; [[...]]) f base  args) in
      res
==============================
