------------------------------------------------------------------
File "2783.ml", line 19, characters 23-63:
This expression has type float but is here used with type int
Relevant code: ((eval (e2, x, y)) +. (eval (e3, x, y)))
------------------------------------------------------------------
File "2783.ml", line 19, characters 64-65:
Try replacing
    /
with
    /; [[...]]
of type
    float -> int -> float
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e0 -> (sin (pi *. (eval (e0, x, y))))
                              | Cosine e1 -> (cos (pi *. (eval (e1, x, y))))
                              | Average (e2, e3) ->
                                (((eval (e2, x, y)) +. (eval (e3, x, y)))
                                      /; [[...]] 2)
                              | Times (e4, e5) ->
                                ((eval (e4, x, y)) *. (eval (e5, x, y)))
                              | Thresh (e6, e7, e8, e9) ->
                                (if (eval (e6, x, y)) < (eval (e7, x, y)) then
                                    (eval (e8, x, y))
                                    else
                                    (eval (e9, x, y)))) ;; 
==============================
Triaged the following locations:
File "2783.ml", line 17, characters 15-44:
File "2783.ml", line 18, characters 17-46:
File "2783.ml", line 20, characters 21-59:
File "2783.ml", line 22, characters 6-100:
And modified the following location:
File "2783.ml", line 19, characters 42-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    +.
with
    +.; [[...]]
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e0 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e2, e3) ->
                                ((eval (e2, x, y)) +.; [[...]] (eval (e3, x, y)))
                                    / 2
                              | Times (e4, e5) -> [[...other program...]]
                              | Thresh (e6, e7, e8, e9) ->
                                [[...other program...]]) ;; 
==============================
Triaged the following locations:
File "2783.ml", line 17, characters 15-44:
File "2783.ml", line 18, characters 17-46:
File "2783.ml", line 20, characters 21-59:
File "2783.ml", line 22, characters 6-100:
And modified the following location:
File "2783.ml", line 19, characters 42-44:
Your code has several type errors.  If you ignore other surrounding code, try replacing
    +.
with
    /
The actual replacement has type
    int -> int -> int
within context
    let rec eval (e, x, y) = (match e with 
                              | VarX -> x
                              | VarY -> y
                              | Sine e0 -> [[...other program...]]
                              | Cosine e1 -> [[...other program...]]
                              | Average (e2, e3) ->
                                ((eval (e2, x, y)) / (eval (e3, x, y))) / 2
                              | Times (e4, e5) -> [[...other program...]]
                              | Thresh (e6, e7, e8, e9) ->
                                [[...other program...]]) ;; 
==============================
