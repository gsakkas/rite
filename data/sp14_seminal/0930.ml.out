------------------------------------------------------------------
File "0930.ml", line 17, characters 40-44:
This expression has type ('a * 'b) list but is here used with type
  'c list list
Relevant code: args
------------------------------------------------------------------
File "0930.ml", line 17, characters 33-34:
Try replacing
    f
with
    f; [[...]]
of type
    int * 'd list -> 'e * 'f -> int * 'd list
within context
    let f a x = (match x with 
                 | [] -> a
                 | h :: t ->
                   a) in let base = 0, [] in
      let args = (List.combine l1 l2) in
      let (_, res) = (List.fold_left (f; [[...]]) base  args) in res
==============================
File "0930.ml", line 17, characters 40-44:
Try replacing
    args
with
    args; [[...]]
of type
    'g list list
within context
    let f a x = (match x with 
                 | [] -> a
                 | h :: t ->
                   a) in let base = 0, [] in
      let args = (List.combine l1 l2) in
      let (_, res) = (List.fold_left f base  (args; [[...]])) in res
==============================
File "0930.ml", line 17, characters 18-32:
Try replacing
    List.fold_left
with
    List.fold_left; [[...]]
of type
    ('h -> 'i list -> 'h) -> int * 'j list -> ('k * 'l) list -> 'm * 'n
within context
    let f a x = (match x with 
                 | [] -> a
                 | h :: t ->
                   a) in let base = 0, [] in
      let args = (List.combine l1 l2) in
      let (_, res) = ((List.fold_left; [[...]]) f base  args) in res
==============================
File "0930.ml", line 16, characters 15-33:
Try replacing
    (List.combine l1 l2)
with
    (List.combine l1 l2); [[...]]
of type
    'o
within context
    let add (l1, l2) = let f a x = (match x with 
                                    | [] -> a
                                    | h :: t ->
                                      a) in let base = 0, [] in
        let args = (List.combine l1 l2); [[...]] in
        let (_, res) = (List.fold_left f base  args) in
        res in (removeZero (add (padZero l1 l2)))
==============================
File "0930.ml", line 14, characters 10-50:
Try replacing
    fun a x -> (match x with 
                | [] -> a
                | h :: t -> a)
with
    fun a x -> (match x with 
                | [] -> a
                | h :: t -> a); [[...]]
of type
    'p
==============================
