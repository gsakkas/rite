VarG
a
x
toSum1
toSum2
carry
intermediateValue
intermediateValue
carry
valueToAddToArray
currentSum
List.rev
List.combine
l1
l2
numZeros
generatePadding
numZeros
(@)
intermediateSum
generatePadding
abs
numZeros
numZeros
l1
l2
absNumZeros
abs
numZeros
absNumZeros
abs
numZeros
absNumZeros
abs
numZeros
absNumZeros
abs
numZeros
absNumZeros
abs
numZeros
absNumZeros
abs
numZeros
absNumZeros
x
x
List.map
f
l
newList
List.map
f
l
newList
n
n
(@)
(@)
(@)
(@)
a
x
cin
d1
d2
cin
d1
d2
res
res
x
cin
acc
helper
acc
cin
acc
helper
sum
helper
y
y
y
y
y
a
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
x
y
x
y
x
y
x
(^)
(^)
(^)
result
result
foo
result
result
foo
digitsOfInt
abs
n
digits
d
s
digitsOfInt
abs
n
digits
d
s
(@)
(@)
print_int
n
(@)
h
(@)
t
(@)
h
t
t
h
t
t
t
h
t
h
t
h
h
eval
x
y
eval
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
y
eval
x
x
eval
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
exprToString
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
x
seen
h
seen
t
seen
h
seen
t
digitsOfInt
abs
n
digits
x
x
n
(@)
tl
xs
h
l
d
t
x
f
x
f
b
g
x
f
b
g
depth
buildX
buildY
x
y
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
x
y
eval
x
y
eval
x
y
eval
x
y
eval
eval
x
y
eval
x
y
eval
x
y
eval
(^)
ff
b
ff
n
ff
ff
n
ff
b
ff
f
b
ff
ff
ff
b
ff
ff
b
ff
b
ff
ff
ff
ff
ff
b
ff
ff
n
b
ff
ff
n
b
ff
ff
ff
b
ff
ff
b
ff
ff
b
ff
b
ff
f
b
f
x
f
x
f
x
x
x
n
seen
seen
h
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
seen
x
y
x
a
addition
m
n
addition
m
n
List.rev
x
cloneHelper
n
cloneHelper
x
cloneHelper
n
cloneHelper
cloneHelper
x
n
cloneHelper
cloneHelper
cloneHelper
cloneHelper
x
cloneHelper
t
a
(@)
l1
l2
l2
l1
l1
n
cloneHelper
x
n
l1
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
l1
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
l1
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
(@)
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
l1
(@)
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
clone
diff
l2
l2
l1
clone
l1
n
cloneHelper
x
n
clone
diff
l2
l2
l1
clone
l1
n
cloneHelper
x
n
l1
(@)
clone
l2
l2
l1
clone
l1
n
cloneHelper
x
n
l1
(@)
clone
l2
l1
l2
(@)
clone
n
cloneHelper
x
n
l1
(@)
clone
l2
l1
l2
(@)
clone
l1
(@)
l2
l2
(@)
l1
l1
l2
l2
(@)
l1
l1
l2
l1
l2
l1
n
n
n
n
n
n
n
n
n
a
n
n
a
n
n
n
n
n
n
n
x
x
x
x
h
t
mulByDigit
x
l1
List.append
accumulate
l1
accumulate
multed
l1
l2
mulByDigit
x
l1
accumulate
l1
accumulate
multed
l1
l2
mulByDigit
x
l1
accumulate
l1
accumulate
multed
mulByDigit
x
l1
accumulate
l1
accumulate
multed
mulByDigit
x
l1
accumulate
l1
accumulate
multed
l1
l1
a
p_pre
b
f
b
b
f
b
f
b
List.append
l1
l2
List.append
List.append
l1
l2
List.append
b
n
(^)
x
sep
t
depth
depth
depth
depth
depth
rand
depth
rand
depth
depth
depth
depth
e
buildSine
depth
depth
buildSine
depth
buildSine
depth
e
buildSine
depth
depth
build
rand
e
(^)
(^)
y
b
b
b
funt
wwhile
b
f
wwhile
funt
b
b
f
b
b
funt
wwhile
f
b
funt
b
funt
b
f
b
b
b
funt
f
b
b
b
funt
f
b
b
b
funt
b
f
wwhile
funt
b
f
b
b
b
funt
b
f
wwhile
funt
b
f
b
b
b
funt
b
f
b
wwhile
funt
b
b
f
wwhile
funt
b
b
f
wwhile
funt
b
b
b
b
b
wwhile
funt
b
b
f
b
wwhile
funt
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
b
wwhile
funt
b
f
f
b
b
b
f
b
b
f
f
f
xx
xx
xx
xx
xx
xx
isFPoint
x
isFPoint
gs
isFPoint
gs
isFPoint
gs
x
isFPoint
gs
isFPoint
gs
isFPoint
gs
s
s
isFPoint
x
x
s
s
isFPoint
x
x
s
s
isFPoint
x
x
s
s
x
f
s
s
f
isFPoint
s
s
x
f
s
s
f
s
s
x
f
f
isFPoint
x
f
isFPoint
x
f
x
f
f
isFPoint
x
f
x
gs
List.mem
res
xs
h
sumList
t
sumList
digits
digits
a
x1
x2
carry
sum
List.combine
l1'
l2'
a
x1
x2
carry
sum
List.combine
l1'
l2'
a
x1
x2
carry
sum
List.combine
l1'
l2'
a
x1
x2
carry
sum
List.combine
l1'
l2'
a
x1
x2
carry
sum
padZero
List.combine
l1'
l2'
a
carry
sum
x
acc
List.combine
acc
l
a
n
a
n
a
n
a
n
a
n
a
n
a
n
x
x
n
x
n
a
List.fold_left
x
x
List.fold_left
x
y
assoc
x
(^)
b'
b'
x
f
l1
l2
(@)
(@)
(@)
(@)
(@)
l1
l2
(@)
(@)
(@)
(@)
(@)
l1
l2
(@)
(@)
(@)
(@)
(@)
l1
l2
(@)
(@)
(@)
(@)
l1
l2
(@)
(@)
(@)
(@)
(@)
l1
l2
(@)
(@)
(@)
l1
l2
fs
fs
a
fs
a
fs
a
a
x
a
a
x
(^)
(^)
seen
(@)
seen
(@)
seen
seen
not
List.length
List.nth
l1
List.length
List.nth
l2
l1
l2
lr1
lr2
l1
l2
l2
l1
l1
a
x
a1
x1
x2
x1
x2
val2
val1
a2
a
x
a1
x1
x2
x1
x2
val1
a2
val2
a
x
a1
x1
x2
x1
x2
val1
a2
val2
a
a1
x1
x2
x1
x2
val2
val1
a2
a
x
a1
x1
x2
x1
x2
val1
a2
val2
a
a1
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val2
val1
a2
x1
x2
val2
val1
a2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val1
a2
val2
x1
x2
val2
val1
a2
x1
x2
val2
val1
a2
x1
x2
val2
val1
a2
x1
x2
val1
a2
val2
List.append
x
(@)
x
List.rev
x
a
g
k
a
g
k
a
g
k
a
g
k
a
g
k
a
g
k
g
k
a
g
k
g
k
a
g
k
a
g
k
a
g
k
a
g
k
x
g
k
k
(^)
add
add
xs
xf
xb
xs
xf
xb
xs
buildX
buildX
buildX
buildX
buildX
(^)
exp
b
(^)
c
(^)
exp
c
(^)
(^)
(^)
exp
c
(^)
(^)
(^)
exp
c
(^)
(^)
(^)
exp
c
(^)
a
b
a_less
b_less
buildThresh
cos
eval
y
pi
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
eval
x
y
eval
e1
(^)
(^)
e1
h
h
seen
t
h
h
seen
t
h
seen
h
t
rand'
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
rand
(^)
(^)
(^)
b
n
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
a
a1
x1
x2
a1
a2
(@)
(@)
(@)
(@)
(@)
(@)
append
append
(@)
sumList
digitsOfInt
x
sumList
x
sumList
digitsOfInt
x
i
(@)
i
n
incre
i
i
n
incre
x0
n1
x0
n1
x0
n_
n_
n_
ss
(@)
modulus
ss
(@)
modulus
fst
sec
fst
sec
fst
sec
a
sec'
digits
(@)
fst'
digits
(@)
fst'
carry'
digits'
(@)
a
sec'
fst'
fst'
carry'
digits'
a
sec'
fst'
fst'
carry'
digits'
digits
digits
digits
digits
l2
l2
(@)
l2
(@)
y
sep
(^)
(^)
sep
(^)
t
a
x
sepConcat
(^)
l
listReverse
xs'
(@)
x
xs
x
a
l1e
l2e
carry
num
(@)
list
x
a
l1e
l2e
carry
num
(@)
list
x
a
l1e
l2e
carry
num
(@)
list
a
carry
(@)
list
a
carry
(@)
list
a
l1e
l2e
carry
num
(@)
list
a
carry
(@)
list
a
carry
(@)
list
a
carry
(@)
list
num
num
(@)
list
(@)
(@)
aNum
l
(@)
l2
(@)
(@)
l2
(@)
(@)
l2
(@)
(@)
l2
(@)
l2
(@)
a
z
a
z
q
z
q
q
q
List.fold_left
d
n
m
n
m
x
x
sin
pi
eval
x
y
atan
x
sin
y
pi
cos
pi
atan
x
sin
y
pi
cos
pi
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
String.concat
f
b
x
x
b
f
f
b
x
x
b
f
f
b
x
x
b
f
f
b
x
x
b
f
b
f
f
f
f
b
f
b
f
x
b
f
f
f
b
seen
(@)
y
x
h
x
append
z
t
append
y
x
h
x
append
z
t
append
y
x
x
y
x
x
y
x
x
r
s
y
m
m
z
List.combine
l2
r
s
y
m
m
z
List.combine
l2
a
r
s
y
m
m
z
a
y
m
m
z
a
r
s
y
m
m
z
x
r
s
y
m
m
z
l2
l2
l1
l2
l2
l1
l2
l1
l1
l2
l1
l2
l1
l2
l1
l2
bigAdd
List.rev
l2
x
c
h
List.hd
t
c
bigAdd
x
c
h
List.hd
t
c
bigAdd
x
c
h
List.hd
t
c
bigAdd
x
c
h
List.hd
t
c
x
c
h
List.hd
t
c
x
c
List.hd
x
m
helper
clone
x
m
helper
clone
bigAdd
l1
(@)
l2
(@)
l2
l1
n
x
a
a
x
x
a
x
x
x
a
a
a
a
a
a
x
x
a
a
x
a
a
x
x
x
x
x
a
x
List.hd
xs
x
h
b
h
b
t
b
b
h
b
h
b
t
b
b
h
b
h
b
t
b
b
h
b
h
b
b
b
a
h
b
h
b
b
b
a
h
b
h
b
b
b
fst
snd
x
a
h
h
b
b
fst
snd
x
b
b
b
b
fst
snd
x
b
b
b
b
List.rev
fst
snd
x
b
b
b
b
List.rev
a
a
a
b
a
b
a
a
b
a
b
a
a
b
a
b
t
t
c
c
t
c
t
t
t
t
t
t
t
t
t
sl
a
(^)
sep
(^)
x
h
t
List.fold_left
f
base
l
int_of_string
sepConcat
List.map
string_of_int
l
intListToInt
intListToInt
sl
a
(^)
sep
(^)
x
h
t
List.fold_left
f
base
l
int_of_string
sepConcat
List.map
string_of_int
l
intListToInt
intListToInt
int_of_string
sepConcat
List.map
string_of_int
l
i
bigAdd
l
mulByDigit
i
l
intListToInt
intListToInt
intListToInt
intListToInt
mulByDigit
intListToInt
l1
s
res
x
l
h
h
h
h
l
build
rand
depth
build
rand
depth
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
(^)
h
h
h
c'
c'
wwhile
b'
b'
c'
b'
wwhile
b'
wwhile
x
x
x
x
x
x
x
x'
l2
sum
a
sum
a
List.length
a
b
i
a
b
i
x
n
head
(@)
(@)
(@)
(@)
(@)
(@)
n
n
explode
a
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
a
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
a
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
a
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
l2
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
x1
x2
carry
s
s
rem
temp
List.length
acc
List.length
l1
carry'
acc
carry'
acc
List.rev
List.combine
l2
carry
List.length
l2
List.length
retTuple
l2
l2
retTuple
retTuple
(@)
l1
(@)
l2
f'
f'
t
f
f
buildX
buildY
buildX
buildY
buildX
buildY
buildX
buildY
sine
x
y
pi
eval
cosine
atan
pi
sine
x
y
pi
eval
cosine
y
cos
pi
cosine
x
atan
pi
y
cos
pi
cosine
x
cos
pi
cosine
atan
pi
cos
pi
cosine
cos
pi
cosine
cos
pi
cosine
cos
pi
cosine
x
y
(**)
x
y
eval
x
y
x
y
eval
(**)
(**)
(**)
(**)
exprToString
bt
bt
bt
bt
f
bt
bt
bt
bt
bt
seen
seen
seen
x
xs
h
sumList
t
sumList
xs
h
sumList
t
sumList
xs
h
sumList
t
digits
sumList
h
t
xs
h
sumList
t
sumList
xs
sumList
n
(@)
(@)
(@)
rand
buildX
rand
rand
buildX
rand
buildX
rand
rand
buildX
rand
buildX
rand
buildX
cos
x
y
pi
eval
e1
eval
e2
eval
e1
eval
e2
cos
x
y
pi
eval
e1
eval
e2
eval
e1
eval
e2
y
x
x
y
eval
e1
eval
e2
eval
e1
eval
e2
y
x
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e2
eval
e1
eval
e1
eval
e2
eval
e1
eval
e1
eval
e2
t
t
t
g
f
t
t
g
t
t
g
t
t
g
t
f
b
t
f
b
t
t
g
f
b
t
t
g
t
t
t
g
t
t
g
t
t
g
t
b
t
g
t
b
t
g
h
seen
seen
(@)
seen
seen
h
seen
seen
seen
fst
x
snd
x
sum
sum
sum
sum
fst
x
snd
x
sum
sum
sum
sum
b
b
b
h
y
b
b
b
b
h
y
b
x
a
y
x
a
y
build
rand
depth
rand
buildX
build
rand
depth
rand
buildX
build
rand
depth
x
y
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
eval
eval
x
y
eval
x
y
f
b
b
b
f'
f
b
f'
b
f'
b
f
b
b
f
b
x
x
f
f
h1
f
n
(@)
l
(@)
(@)
w
explode
explode
(^)
sepConcat
(^)
(^)
(^)
List.map
(^)
(^)
(^)
(^)
l
listReverse
t
(@)
h
listReverse
explode
explode
(@)
(@)
(@)
(@)
(@)
(@)
n
(@)
n
(@)
n
(@)
n
(@)
(@)
(@)
y
cos
pi
eval
x
y
eval
x
y
eval
x
y
eval
x
x
y
eval
y
eval
x
y
eval
x
y
eval
x
y
eval
x
x
y
y
y
helper
y
y
y
helper
x
x
helper
x
y
x
y
y
helper
x
y
x
y
y
helper
f
x
y
x
y
y
f
x
y
x
y
y
x
y
x
y
y
helper
seen
a
y
z
carry
a
x
carry
ans
x
y
z
carry
(@)
ans
a
y
z
carry
a
x
carry
ans
x
y
z
carry
(@)
ans
a
y
z
carry
a
x
carry
ans
x
y
z
carry
(@)
ans
a
carry
a
carry
ans
a
carry
ans
a
carry
a
carry
ans
carry
ans
a
carry
a
carry
ans
carry
ans
a
carry
a
carry
ans
carry
ans
a
carry
a
carry
ans
carry
ans
a
carry
a
carry
ans
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
a
carry
a
(@)
carry
ans
(@)
carry
ans
ans
a
(@)
ans
i
z
List.map
f
(@)
(@)
h
xs
t
l
h1
l
d
l
h1
l
d
a
b
a_less
b_less
e1
e2
rand
rand
exprToString
exprToString
exprToString
exprToString
f
f'
f'
b
b
f'
b
f
f'
f'
digitsOfInt
digitsOfInt
n
n
n
digitsOfInt
n
n
digitsOfInt
b
f
b
x
f2
x
a
seen
seen
h
h
filter
tl
h
e1
e1
e
(^)
(^)
(^)
x
x
x
h
x
x
x
h
x
build
build
e
(^)
xx
xx
xx
g
seen
t
seen
t
seen
seen
t
seen
t
h
seen
t
seen
t
seen
t
List.mem
h
r
seen
h
seen
assignSeen
r
List.mem
h
r
seen
h
seen
r
assignSeen
seen
wwhile
t
i
eval
x
y
eval
x
y
eval
eval
x
y
x
y
(^)
(^)
n
(@)
(@)
count
(@)
eval
x
y
eval
x
y
eval
a
(^)
f
b
f
b
b
func
b
b
b
func
f
b
func
f
seen
wwhile
c'
wwhile
print_int
print_int
print_int
n
print_int
print_int
print_int
n
(@)
(@)
x
a
x1
x2
carry
x1
x2
carry
res
List.rev
List.combine
l2
x
a
x1
x2
carry
x1
x2
carry
res
List.rev
a
carry
x1
x2
carry
res
a
carry
x1
x2
carry
res
a
carry
x1
x2
carry
res
a
carry
x1
x2
carry
res
a
carry
carry
res
a
carry
x1
x2
carry
res
(@)
l1
h
l2
helper
t
l2
carry
(@)
bigAdd
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
x
carry
(@)
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
x
carry
(@)
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
x
carry
(@)
(@)
x1
x2
carry
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
l1
h
l2
helper
t
l2
carry
(@)
a
(@)
x1
x2
carry
res
List.rev
helper
l1
x
x
(@)
l1
l2
(@)
l1
l1
(@)
(@)
l1
l1
l2
l1
l2
b
b
b
b
b
b
b
b
b
b
b
b
b
b
a
x
sep
t
x
eval
n
x
y
d
eval
m
x
y
sqrt
d
(**)
d
(^)
y
z
(^)
(^)
z
g
g
g
g
g
h
seen
seen
a
w
x
y
w
z
a
w
x
y
w
z
a
x
y
w
z
w
a
x
y
w
z
w
a
w
w
z
a
w
w
z
y
z
(@)
y
z
(@)
y
z
a
n
a
x
a
a
y
m
(^)
sep
h
h
x
(@)
(@)
separated
explode
n
x
x
l1
List.length
l2
(@)
l1
l2
l1
clone
(@)
l1
(@)
List.length
l2
l1
l2
l1
clone
(@)
l1
(@)
List.length
l2
l2
l1
l2
l1
clone
(@)
sepConcat
a
List.combine
l1
x
x
y
exprToString
exprToString
exprToString
exprToString
exprToString
exprToString
exprToString
exprToString
exprToString
exprToString
x
seen
List.rev
fst
snd
x
sum
sum
fst
snd
a
sum
fst
a
snd
a
List.combine
l1
fst
x
snd
x
sum
sum
fst
a
snd
a
sum
fst
snd
a
List.combine
l1
fst
x
snd
x
sum
sum
fst
a
snd
a
sum
fst
snd
a
List.combine
l1
fst
x
snd
x
sum
sum
fst
a
snd
a
sum
fst
snd
a
List.combine
l1
l1
a
y
x
x
buildX
b
result
result
b
f
b
result
result
b
result
b
f
b'
b'
mod_float
comb
mod_float
comb
mod_float
comb
mod_float
comb
mod_float
comb
not
a
o
x
o
x
l
a
b
List.map
combine
a
o
l
o
a
b
List.map
combine
a
o
x
o
x
l
combine
a
o
x
o
x
l
a
o
x
o
x
l
a
o
x
o
x
l
a
o
x
o
x
l
o
o
x
l
o
o
x
l
(@)
x
(@)
l
o
bigAdd
l1
o
bigAdd
l1
o
bigAdd
mulByDigit
o
l1
o
l
o
o
x
prod
o
x
prod
o
x
prod
place
l
place
l
digit
List.rev
List.rev
List.rev
List.rev
List.rev
bigAdd
l
l
l'
bigAdd
l
l
l'
bigAdd
l
l
l'
bigAdd
l
l
l'
x
x'
a
buildCotangent
build
build
(^)
(^)
(^)
(^)
y
(^)
y
(^)
x
(^)
y
(^)
(^)
(^)
y
(^)
y
(^)
x
(^)
y
(^)
y
(^)
y
(^)
x
(^)
y
y
(^)
y
(^)
x
(^)
y
y
y
(^)
x
(^)
y
y
y
(^)
x
(^)
y
(^)
(^)
(^)
(^)
(^)
e
e
(^)
(^)
not
seen
h
l
h
s
f
x
y
y
x
x
y
x
y
x
y
x
y
x
y
x
y
x
y
(**)
b'
f
b'
wwhile
f'
f
b'
wwhile
f'
f
b'
wwhile
f'
b'
f
b'
b'
wwhile
f'
(@)
(@)
(@)
(@)
(@)
explode
x
explode
x
matchHeads
explode
x
explode
x
explode
x
matchHeads
explode
x
matchHeads
explode
listReverse
z
t
matchHeads
loseTail
t
l
listReverse
t
(@)
h
listReverse
x
listReverse
t
matchHeads
l
listReverse
t
(@)
h
listReverse
x
listReverse
t
l
listReverse
t
(@)
h
listReverse
x
listReverse
t
matchHeads
l
listReverse
t
(@)
h
listReverse
x
listReverse
t
matchHeads
l
listReverse
t
(@)
h
listReverse
x
listReverse
t
l
listReverse
t
(@)
h
explode
l
listReverse
t
(@)
h
h
List.hd
w
w
matchHeads
x
x
y
g
x
x
y
g
seen
seen
a1
l1x
l2x
a2
List.rev
a1
l1x
l2x
a2
List.rev
x
a1
l1x
l2x
a2
List.rev
a1
l1x
l2x
a2
List.rev
a1
l1x
l2x
a2
List.rev
x
a1
l1x
l2x
a2
List.rev
x
a1
l1x
l2x
a2
List.rev
a
a1
a2
List.rev
a
a1
a2
List.rev
List.combine
l2
a1
l1x
l2x
a2
List.rev
List.combine
l2
a
a1
a2
List.rev
x
a1
l1x
l2x
a2
List.rev
a
a1
l2x
a2
List.rev
a
a1
a2
List.rev
a
a1
a2
List.rev
a
a1
a2
List.rev
a
a1
a2
a
a1
a2
x
a1
l1x
l2x
a2
a
a1
l1x
l2x
a2
a1
l1x
l2x
a2
a
a1
a2
a
a1
a2
a
a1
a2
a2
a1
h
test
a1
h
test
a1
a2
a2
sum
a2
a1
a2
sum
a1
a2
sum
a1
a
a1
a1
a2
x
x
x
c
x
(@)
(@)
(@)
(@)
(@)
l
l1
x
y
x
y
x
y
input
input
seen
seen
seen
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.rev
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.rev
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.rev
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
x
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.rev
List.combine
x
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
x
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
List.combine
x
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
a
x1
x2
x1
x2
a1
a2
x1
x2
a1
a2
a2
a2
a2
a2
x
l
(@)
appZero
x
l
a1
a1
appZero
l2
mulByDigit
i
i
l
mulByDigit
i
i
l
l1
pad
(@)
pad
(@)
l1
pad
(@)
pad
(@)
l1
pad
(@)
pad
(@)
(@)
(@)
(@)
(@)
(@)
(@)
a
b
x
a
b
x
a
x
x
a
x
x
a
x
x
a
x
x
a
x
x
a
List.fold_left
x
a
x
x
atan
atan
pi
eval
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
eval
x
y
not
b
not
y
(@)
t
t
t
a
i
j
m
i
j
m
n
i
j
m
n
a
i
j
m
i
j
m
n
i
j
m
n
(@)
l1
l1
y
a
y
a
x
a
x1
x2
a1
x1
x2
a2
List.rev
List.combine
x
a
x1
x2
a1
x1
x2
a2
List.combine
l1
l2
List.rev
x2
x1
a1
x1
x2
a2
x
a
x1
x2
a1
x1
x2
a2
List.rev
x2
x1
a1
x1
x2
a2
List.rev
x2
x1
a1
x1
x2
a2
List.rev
(@)
a1
a1
a
y
n
(@)
listZeros
n
bigAdd
(@)
listZeros
n
(@)
listZeros
n
bigAdd
(@)
listZeros
bigAdd
l
l
f
b
f
b
helper
fb
fb
fb
fb
fb
fb
a
y
y
exprToString
(^)
(^)
i
(^)
(^)
i
(^)
seen
seen
y
x
x
y
x
x
y
x
x
d
k
x
calcfx
calcfx
x
b
f
b
f
b
f
b
calcx
calcx
g
(@)
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
x
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
x
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
x
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
List.rev
t
List.rev
u
h
h'
addHelper
t
t'
(@)
h'
h
addHelper
t
t'
(@)
h'
h
addHelper
x
res
res
h
(@)
i
mulByDigit
i
t
i
i
l
i
t
remainder
(@)
mulByDigit
h'
i
t'
remainder
i
h
h
i
t
l1
len2
f
List.map
string_of_int
a
x
x
x
x
x
a
x
a
f
f
x
x
x
a
f
f
a
a
x
f
f
a
a
f
f
x
x
x
x
a
f
x
a
f
x
List.map
f
List.map
f
sepConcat
sepConcat
o
p
m
z
z
n
z
n
lt1
curList
helper
h
List.hd
lt2
curList
t
List.tl
lt2
helper
l2
o
p
m
z
z
n
z
n
lt1
curList
helper
h
List.hd
lt2
curList
t
List.tl
lt2
helper
o
m
z
z
n
z
n
lt1
curList
h
List.hd
lt2
curList
t
List.tl
lt2
helper
(@)
l1
l2
l1
(@)
y
x
y
y
y
y
y
y
y
List.fold_left
a
x
sl
a
x
eval
p
x
y
q
eval
p
x
y
eval
q
x
y
eval
p
x
y
eval
q
x
y
diff
p
eval
q
x
y
eval
p
x
y
q
p
eval
q
x
y
diff
p
eval
q
x
y
eval
p
x
y
q
p
eval
q
x
y
diff
p
eval
q
x
y
eval
p
x
y
q
p
eval
q
x
y
diff
p
eval
q
x
y
eval
p
x
y
q
p
eval
q
x
y
diff
x
x
x
x
x
x
x
x
x
x
x
f
x
f
x
x
f
x
x
x
f
x
f
x
x
x
x
a
lh1
lh2
carry
num
num
res
List.combine
l1
x
a
lh1
lh2
carry
num
num
res
List.combine
l1
x
a
lh1
lh2
carry
num
num
res
List.rev
List.combine
x
a
lh1
lh2
carry
num
num
res
List.rev
List.combine
x
a
lh1
lh2
carry
num
num
res
List.rev
List.combine
x
a
lh1
lh2
carry
num
num
res
x
a
lh1
lh2
carry
num
num
res
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
num
a
lh1
lh2
carry
num
res
a
lh1
lh2
carry
num
num
res
a
lh1
lh2
carry
num
num
res
lh1
lh2
carry
num
num
res
lh1
num
lh2
carry
num
res
a
res
a
res
a
res
res
x
res
l
a
y
i
y
i
y
i
y
i
y
i
y
i
List.length
sep
List.length
t
sep
t
(^)
fx
(^)
b
fx
(^)
(^)
(^)
List.map
f
(^)
a
l
l
m
l
m
List.combine
a
l
l
m
l
m
a
l
l
m
l
m
List.combine
List.rev
l2
a
l
l
m
l
m
l
l
m
l
m
l
l
m
l
m
args
l
l
m
l
m
l
l
m
l
m
x
l
l
m
l
m
m
m
x
x
x
l1
l1
l1
a
(^)
(^)
a
num1
num2
carry
carry
sum
a
num1
num2
carry
carry
sum
a
num1
num2
carry
carry
sum
a
num1
num2
carry
carry
sum
num1
num2
carry
carry
sum
carry
carry
sum
a
carry
carry
sum
a
carry
carry
sum
a
carry
carry
sum
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
base
(@)
base
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
(@)
a
a
a
x
n
$x
x
f'
x
not
e
x
y
x
y
x
y
abs_float
expr2
x
y
x
y
abs_float
expr2
expr3
x
y
abs_float
expr2
expr3
x
y
abs_float
expr2
expr3
abs_float
f
b
b
b
b
f
b
f
(@)
l'
l'
x
y
x
y
f
b'
f
b'
f
b'
seen
(^)
(^)
(^)
x
x
x
x
fixb
x
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x2
x1
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
l2
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x1
x2
x2
List.combine
x
x1
x2
x2
List.combine
l2
x2
List.combine
l2
x
x1
x2
x2
x2
x2
x2
x2
y
c
x1
x2
a2
(@)
a1
x1
x2
c
(@)
c
(@)
(@)
y
a1
c
c
a2
(@)
x1
x2
c
v
v
v
(@)
a2
List.rev
c
v
v
v
a2
List.rev
v
v
v
a2
List.rev
l
l
h
removeZero
t
l
c
v
(@)
a2
List.rev
removeZero
l
l
h
removeZero
t
l
c
v
a2
List.rev
removeZero
l
l
h
removeZero
t
l
c
a2
List.rev
removeZero
l
(@)
a
bigAdd
m
a'
c
s
l
(@)
a
bigAdd
m
a'
c
s
l
(@)
a
bigAdd
m
a'
c
s
l
(@)
a
bigAdd
m
a'
c
s
(@)
x
(@)
x
(@)
x
x
x
x'
x
x
x'
mulByDigit
i
(@)
x'
x
(@)
x
i
x'
x'
x
x
i
x'
x
x
i
x'
(@)
(@)
x'
(@)
(@)
(@)
x'
(@)
(@)
(@)
x'
(@)
(@)
(@)
x'
(@)
(@)
x'
(@)
(@)
x'
(@)
(@)
(@)
z
(@)
z
x
l
x
l
l
h
removeZero
t
l
c
v
a2
List.rev
removeZero
i
x
a
y
c
g
y
c
g
