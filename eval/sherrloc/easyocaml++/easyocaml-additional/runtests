#!/bin/bash

if [ $# -ne 2 ] ; then
  echo "Synopsis: $0 <ecamlc> <examdir>"
  exit 1
fi

HELP='The file has no result annotation (either `(*F* ...` for failure or (*S* ... ` for success at the beginning of the first line.'
ECAMLC=$1
OCAMLC=ocamlc
DIRECTORY=$2
SUCCESS_STRING='^ *(\*S\*'
FAILURE_STRING='^ *(\*F\*'
export TIMEOUT=1.0

file=`mktemp`

ocamlcout=$file-ocaml
ecamlcout=$file-ecaml

for testfile in $DIRECTORY/*.ml ; do
  echo -n $testfile "... "
  
  if `head -n 1 $testfile | grep -q "$SUCCESS_STRING"` ; then
    expectedresult=0
  elif `head -n 1 $testfile | grep -q "$FAILURE_STRING"` ; then
    expectedresult=1
  else
    echo; echo $testfile": "$HELP
    exit 2
  fi


  $OCAMLC -c $testfile > $ocamlcout 2> $ocamlcout
  test $? -eq 0
  ocamlresult=$?

  $ECAMLC -c $testfile > $ecamlcout 2> $ecamlcout
  preocamlresult=$?
  if [ $preocamlresult -eq 100 ]
  then
	echo; echo "EduCaml failed!"
	cat $ecamlcout
	exit $preocamlresult
  fi
  if [ $preocamlresult -eq 101 ]
  then
	echo; echo "EduCaml missed!"
	cat $ecamlcout
	exit $preocamlresult
  fi
  test $preocamlresult -eq 0
  easyresult=$?

  if [ $expectedresult -ne $ocamlresult ] ; then
    echo
    echo ">>>>  Wrong result annotation for file $testfile (Expected $expectedresult vs. Ocaml returned $ocamlresult)"
    cat $testfile
    cat $ocamlcout
    exit 3
  elif [ $expectedresult -ne $easyresult ] ; then
    echo; echo ">>>>  EasyOcaml did not type well for file $testfile (Expected $expectedresult vs. Ecaml returned $easyresult)"
    cat $ecamlcout
  else
    if [ $easyresult -eq 0 ] ; then
      echo "success, ok"
    else
      echo "failed, ok"
    fi
  fi
done

rm $ocamlcout $ecamlcout
