{
    "bad": 4,
    "edges": [
        {
            "arrows": "to",
            "from": 0,
            "label": "SubTerm 1",
            "to": 1
        },
        {
            "arrows": "to",
            "from": 0,
            "label": "StepsTo BoringStep",
            "to": 4
        },
        {
            "arrows": "to",
            "from": 0,
            "label": "SubTerm 2",
            "to": 16
        },
        {
            "arrows": "to",
            "from": 0,
            "label": "SubTerm 0",
            "to": 18
        },
        {
            "arrows": "to",
            "from": 2,
            "label": "SubTerm 0",
            "to": 3
        },
        {
            "arrows": "to",
            "from": 2,
            "label": "SubTerm 1",
            "to": 11
        },
        {
            "arrows": "to",
            "from": 4,
            "label": "SubTerm 1",
            "to": 1
        },
        {
            "arrows": "to",
            "from": 4,
            "label": "SubTerm 2",
            "to": 16
        },
        {
            "arrows": "to",
            "from": 4,
            "label": "SubTerm 0",
            "to": 17
        },
        {
            "arrows": "to",
            "from": 5,
            "label": "SubTerm 0",
            "to": 2
        },
        {
            "arrows": "to",
            "from": 5,
            "label": "SubTerm 1",
            "to": 6
        },
        {
            "arrows": "to",
            "from": 5,
            "label": "SubTerm 2",
            "to": 15
        },
        {
            "arrows": "to",
            "from": 6,
            "label": "SubTerm 0",
            "to": 7
        },
        {
            "arrows": "to",
            "from": 7,
            "label": "SubTerm 0",
            "to": 12
        },
        {
            "arrows": "to",
            "from": 7,
            "label": "SubTerm 1",
            "to": 19
        },
        {
            "arrows": "to",
            "from": 8,
            "label": "SubTerm 1",
            "to": 9
        },
        {
            "arrows": "to",
            "from": 8,
            "label": "SubTerm 0",
            "to": 10
        },
        {
            "arrows": "to",
            "from": 13,
            "label": "StepsTo CallStep",
            "to": 0
        },
        {
            "arrows": "to",
            "from": 13,
            "label": "SubTerm 0",
            "to": 14
        },
        {
            "arrows": "to",
            "from": 13,
            "label": "SubTerm 1",
            "to": 20
        },
        {
            "arrows": "to",
            "from": 16,
            "label": "SubTerm 0",
            "to": 5
        },
        {
            "arrows": "to",
            "from": 16,
            "label": "SubTerm 1",
            "to": 8
        },
        {
            "arrows": "to",
            "from": 18,
            "label": "StepsTo BoringStep",
            "to": 17
        }
    ],
    "nodes": [
        {
            "annots": [
                [
                    6,
                    1,
                    "Redex"
                ]
            ],
            "env": [
                [
                    "n",
                    "1"
                ],
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 0,
            "label": "match n with\n| [] -> []\n| h :: t -> (let rest =\n               digitsOfInt t in\n             if h > 0\n             then h :: rest\n             else rest)",
            "span": {
                "endCol": 10,
                "endLine": 6,
                "startCol": 9,
                "startLine": 6
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 1,
            "label": "[]",
            "span": {
                "endCol": 15,
                "endLine": 7,
                "startCol": 13,
                "startLine": 7
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 2,
            "label": "h > 0",
            "span": {
                "endCol": 21,
                "endLine": 9,
                "startCol": 16,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 3,
            "label": "h",
            "span": {
                "endCol": 17,
                "endLine": 9,
                "startCol": 16,
                "startLine": 9
            }
        },
        {
            "annots": [
                [
                    0,
                    153,
                    "Redex"
                ]
            ],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "styleSegments": [
                [
                    { "text": "match 1 with", "underline": true },
                    { "text": "| [] -> []", "underline": true },
                    { "text": "| h :: t -> (let rest =", "underline": true },
                    { "text": "               digitsOfInt t in", "underline": true },
                    { "text": "             if h > 0", "underline": true },
                    { "text": "             then h :: rest", "underline": true },
                    { "text": "             else rest)", "underline": true }
                ]
            ],
            "id": 4,
            "label": "match 1 with\n| [] -> []\n| h :: t -> (let rest =\n               digitsOfInt t in\n             if h > 0\n             then h :: rest\n             else rest)",
            "span": {
                "endCol": 46,
                "endLine": 9,
                "startCol": 3,
                "startLine": 6
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 5,
            "label": "if h > 0\nthen h :: rest\nelse rest",
            "span": {
                "endCol": 46,
                "endLine": 9,
                "startCol": 13,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 6,
            "label": "h :: rest",
            "span": {
                "endCol": 36,
                "endLine": 9,
                "startCol": 27,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 7,
            "label": "(h , rest)",
            "span": {
                "endCol": 36,
                "endLine": 9,
                "startCol": 27,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 8,
            "label": "digitsOfInt t",
            "span": {
                "endCol": 37,
                "endLine": 8,
                "startCol": 24,
                "startLine": 8
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 9,
            "label": "t",
            "span": {
                "endCol": 37,
                "endLine": 8,
                "startCol": 36,
                "startLine": 8
            }
        },
        {
            "annots": [],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 10,
            "label": "digitsOfInt",
            "span": {
                "endCol": 35,
                "endLine": 8,
                "startCol": 24,
                "startLine": 8
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 11,
            "label": "0",
            "span": {
                "endCol": 21,
                "endLine": 9,
                "startCol": 20,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 12,
            "label": "h",
            "span": {
                "endCol": 28,
                "endLine": 9,
                "startCol": 27,
                "startLine": 9
            }
        },
        {
            "annots": [
                [
                    0,
                    13,
                    "Redex"
                ]
            ],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 13,
            "label": "digitsOfInt 1",
            "span": {
                "endCol": 22,
                "endLine": 11,
                "startCol": 9,
                "startLine": 11
            }
        },
        {
            "annots": [],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 14,
            "label": "digitsOfInt",
            "span": {
                "endCol": 20,
                "endLine": 11,
                "startCol": 9,
                "startLine": 11
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 15,
            "label": "rest",
            "span": {
                "endCol": 46,
                "endLine": 9,
                "startCol": 42,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [
                [
                    "digitsOfInt",
                    "fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"
                ]
            ],
            "id": 16,
            "label": "let rest = digitsOfInt t in\nif h > 0\nthen h :: rest\nelse rest",
            "span": {
                "endCol": 46,
                "endLine": 9,
                "startCol": 13,
                "startLine": 8
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 17,
            "label": "1",
            "span": {
                "endCol": 22,
                "endLine": 11,
                "startCol": 21,
                "startLine": 11
            }
        },
        {
            "annots": [
                [
                    0,
                    1,
                    "Redex"
                ]
            ],
            "env": [
                [
                    "n",
                    "1"
                ]
            ],
            "id": 18,
            "label": "n",
            "span": {
                "endCol": 10,
                "endLine": 6,
                "startCol": 9,
                "startLine": 6
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 19,
            "label": "rest",
            "span": {
                "endCol": 36,
                "endLine": 9,
                "startCol": 32,
                "startLine": 9
            }
        },
        {
            "annots": [],
            "env": [],
            "id": 20,
            "label": "1",
            "span": {
                "endCol": 22,
                "endLine": 11,
                "startCol": 21,
                "startLine": 11
            }
        }
    ],
    "reason": "Type error: stuck because `int' is incompatible with `list'",
    "result": "stuck",
    "root": 13,
    "stuck": 4
}
