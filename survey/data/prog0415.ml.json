{"root":15,"result":"stuck","reason":"Type error: stuck because `int' is incompatible with `list'","bad":5,"stuck":5,"edges":[{"arrows":"to","to":1,"from":0,"label":"SubTerm 1"},{"arrows":"to","to":4,"from":0,"label":"SubTerm 0"},{"arrows":"to","to":5,"from":0,"label":"StepsTo BoringStep"},{"arrows":"to","to":7,"from":0,"label":"SubTerm 2"},{"arrows":"to","to":3,"from":2,"label":"SubTerm 0"},{"arrows":"to","to":18,"from":2,"label":"SubTerm 1"},{"arrows":"to","to":6,"from":4,"label":"StepsTo BoringStep"},{"arrows":"to","to":1,"from":5,"label":"SubTerm 1"},{"arrows":"to","to":6,"from":5,"label":"SubTerm 0"},{"arrows":"to","to":7,"from":5,"label":"SubTerm 2"},{"arrows":"to","to":8,"from":7,"label":"SubTerm 0"},{"arrows":"to","to":12,"from":7,"label":"SubTerm 1"},{"arrows":"to","to":2,"from":8,"label":"SubTerm 0"},{"arrows":"to","to":11,"from":8,"label":"SubTerm 1"},{"arrows":"to","to":20,"from":8,"label":"SubTerm 2"},{"arrows":"to","to":10,"from":9,"label":"SubTerm 1"},{"arrows":"to","to":19,"from":9,"label":"SubTerm 0"},{"arrows":"to","to":9,"from":11,"label":"SubTerm 0"},{"arrows":"to","to":13,"from":12,"label":"SubTerm 1"},{"arrows":"to","to":14,"from":12,"label":"SubTerm 0"},{"arrows":"to","to":0,"from":15,"label":"StepsTo CallStep"},{"arrows":"to","to":16,"from":15,"label":"SubTerm 1"},{"arrows":"to","to":17,"from":15,"label":"SubTerm 0"}],"nodes":[{"span":{"startLine":2,"endLine":5,"endCol":46,"startCol":3},"env":[["n","1"],["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[[6,1,"Redex"]],"id":0,"label":"match n with\n| [] -> []\n| h :: t -> (let rest =\n               digitsOfInt t in\n             if h > 0\n             then h :: rest\n             else rest)"},{"span":{"startLine":3,"endLine":3,"endCol":15,"startCol":13},"env":[],"annots":[],"id":1,"label":"[]"},{"span":{"startLine":5,"endLine":5,"endCol":21,"startCol":16},"env":[],"annots":[[0,1,"Redex"]],"id":2,"label":"h > 0"},{"span":{"startLine":5,"endLine":5,"endCol":17,"startCol":16},"env":[],"annots":[[0,1,"Redex"]],"id":3,"label":"h"},{"span":{"startLine":2,"endLine":2,"endCol":10,"startCol":9},"env":[["n","1"]],"annots":[[0,1,"Redex"]],"id":4,"label":"n"},{"span":{"startLine":2,"endLine":5,"endCol":46,"startCol":3},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[[0,153,"Redex"]],"id":5,"label":"match 1 with\n| [] -> []\n| h :: t -> (let rest =\n               digitsOfInt t in\n             if h > 0\n             then h :: rest\n             else rest)"},{"span":{"startLine":7,"endLine":7,"endCol":22,"startCol":21},"env":[],"annots":[],"id":6,"label":"1"},{"span":{"startLine":4,"endLine":5,"endCol":46,"startCol":13},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[[23,1,"Redex"]],"id":7,"label":"let rest = digitsOfInt t in\nif h > 0\nthen h :: rest\nelse rest"},{"span":{"startLine":5,"endLine":5,"endCol":46,"startCol":13},"env":[],"annots":[[3,1,"Redex"]],"id":8,"label":"if h > 0\nthen h :: rest\nelse rest"},{"span":{"startLine":5,"endLine":5,"endCol":36,"startCol":27},"env":[],"annots":[[1,1,"Redex"],[5,4,"Redex"]],"id":9,"label":"(h , rest)"},{"span":{"startLine":5,"endLine":5,"endCol":36,"startCol":32},"env":[],"annots":[[0,4,"Redex"]],"id":10,"label":"rest"},{"span":{"startLine":5,"endLine":5,"endCol":36,"startCol":27},"env":[],"annots":[[0,1,"Redex"],[5,4,"Redex"]],"id":11,"label":"h :: rest"},{"span":{"startLine":4,"endLine":4,"endCol":37,"startCol":24},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[[12,1,"Redex"]],"id":12,"label":"digitsOfInt t"},{"span":{"startLine":4,"endLine":4,"endCol":37,"startCol":36},"env":[],"annots":[[0,1,"Redex"]],"id":13,"label":"t"},{"span":{"startLine":4,"endLine":4,"endCol":35,"startCol":24},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[],"id":14,"label":"digitsOfInt"},{"span":{"startLine":7,"endLine":7,"endCol":22,"startCol":9},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[[0,13,"Redex"]],"id":15,"label":"digitsOfInt 1"},{"span":{"startLine":7,"endLine":7,"endCol":22,"startCol":21},"env":[],"annots":[],"id":16,"label":"1"},{"span":{"startLine":7,"endLine":7,"endCol":20,"startCol":9},"env":[["digitsOfInt","fun n ->\n  match n with\n  | [] -> []\n  | h :: t -> (let rest =\n                 digitsOfInt t in\n               if h > 0\n               then h :: rest\n               else rest)"]],"annots":[],"id":17,"label":"digitsOfInt"},{"span":{"startLine":5,"endLine":5,"endCol":21,"startCol":20},"env":[],"annots":[],"id":18,"label":"0"},{"span":{"startLine":5,"endLine":5,"endCol":28,"startCol":27},"env":[],"annots":[[0,1,"Redex"]],"id":19,"label":"h"},{"span":{"startLine":5,"endLine":5,"endCol":46,"startCol":42},"env":[],"annots":[[0,4,"Redex"]],"id":20,"label":"rest"}]}