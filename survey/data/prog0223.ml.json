{"root":23,"result":"stuck","reason":"Type error: stuck because `2-tuple' is incompatible with `int'","bad":56,"stuck":56,"edges":[{"arrows":"to","to":1,"from":0,"label":"SubTerm 1"},{"arrows":"to","to":18,"from":0,"label":"SubTerm 0"},{"arrows":"to","to":80,"from":0,"label":"SubTerm 2"},{"arrows":"to","to":99,"from":0,"label":"SubTerm 3"},{"arrows":"to","to":3,"from":2,"label":"SubTerm 0"},{"arrows":"to","to":25,"from":2,"label":"StepsTo BoringStep"},{"arrows":"to","to":48,"from":2,"label":"SubTerm 1"},{"arrows":"to","to":5,"from":4,"label":"StepsTo BoringStep"},{"arrows":"to","to":41,"from":5,"label":"SubTerm 0"},{"arrows":"to","to":3,"from":8,"label":"SubTerm 0"},{"arrows":"to","to":64,"from":8,"label":"SubTerm 1"},{"arrows":"to","to":74,"from":8,"label":"StepsTo BoringStep"},{"arrows":"to","to":36,"from":10,"label":"SubTerm 0"},{"arrows":"to","to":58,"from":10,"label":"SubTerm 1"},{"arrows":"to","to":12,"from":11,"label":"SubTerm 0"},{"arrows":"to","to":71,"from":11,"label":"SubTerm 1"},{"arrows":"to","to":135,"from":11,"label":"StepsTo BoringStep"},{"arrows":"to","to":42,"from":12,"label":"SubTerm 1"},{"arrows":"to","to":60,"from":12,"label":"SubTerm 0"},{"arrows":"to","to":82,"from":14,"label":"SubTerm 0"},{"arrows":"to","to":52,"from":15,"label":"SubTerm 0"},{"arrows":"to","to":52,"from":15,"label":"SubTerm 0"},{"arrows":"to","to":17,"from":16,"label":"SubTerm 1"},{"arrows":"to","to":48,"from":16,"label":"StepsTo BoringStep"},{"arrows":"to","to":85,"from":16,"label":"SubTerm 3"},{"arrows":"to","to":90,"from":16,"label":"SubTerm 2"},{"arrows":"to","to":118,"from":16,"label":"SubTerm 0"},{"arrows":"to","to":44,"from":20,"label":"StepsTo BoringStep"},{"arrows":"to","to":22,"from":21,"label":"StepsTo BoringStep"},{"arrows":"to","to":14,"from":23,"label":"SubTerm 2"},{"arrows":"to","to":14,"from":23,"label":"SubTerm 2"},{"arrows":"to","to":14,"from":23,"label":"SubTerm 2"},{"arrows":"to","to":53,"from":23,"label":"SubTerm 1"},{"arrows":"to","to":53,"from":23,"label":"SubTerm 1"},{"arrows":"to","to":53,"from":23,"label":"SubTerm 1"},{"arrows":"to","to":68,"from":23,"label":"StepsTo CallStep"},{"arrows":"to","to":102,"from":23,"label":"SubTerm 0"},{"arrows":"to","to":102,"from":23,"label":"SubTerm 0"},{"arrows":"to","to":102,"from":23,"label":"SubTerm 0"},{"arrows":"to","to":3,"from":25,"label":"SubTerm 0"},{"arrows":"to","to":77,"from":25,"label":"SubTerm 1"},{"arrows":"to","to":113,"from":25,"label":"StepsTo CallStep"},{"arrows":"to","to":3,"from":26,"label":"SubTerm 0"},{"arrows":"to","to":27,"from":26,"label":"StepsTo BoringStep"},{"arrows":"to","to":70,"from":26,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":27,"label":"SubTerm 0"},{"arrows":"to","to":30,"from":27,"label":"SubTerm 1"},{"arrows":"to","to":51,"from":27,"label":"StepsTo BoringStep"},{"arrows":"to","to":20,"from":28,"label":"SubTerm 3"},{"arrows":"to","to":29,"from":28,"label":"SubTerm 0"},{"arrows":"to","to":65,"from":28,"label":"SubTerm 1"},{"arrows":"to","to":86,"from":28,"label":"StepsTo CallStep"},{"arrows":"to","to":93,"from":28,"label":"SubTerm 2"},{"arrows":"to","to":20,"from":30,"label":"SubTerm 3"},{"arrows":"to","to":29,"from":30,"label":"SubTerm 0"},{"arrows":"to","to":35,"from":30,"label":"StepsTo BoringStep"},{"arrows":"to","to":65,"from":30,"label":"SubTerm 1"},{"arrows":"to","to":105,"from":30,"label":"SubTerm 2"},{"arrows":"to","to":3,"from":31,"label":"SubTerm 0"},{"arrows":"to","to":86,"from":31,"label":"SubTerm 1"},{"arrows":"to","to":95,"from":31,"label":"StepsTo ReturnStep"},{"arrows":"to","to":34,"from":33,"label":"SubTerm 1"},{"arrows":"to","to":98,"from":33,"label":"SubTerm 0"},{"arrows":"to","to":20,"from":35,"label":"SubTerm 3"},{"arrows":"to","to":28,"from":35,"label":"StepsTo BoringStep"},{"arrows":"to","to":29,"from":35,"label":"SubTerm 0"},{"arrows":"to","to":65,"from":35,"label":"SubTerm 1"},{"arrows":"to","to":104,"from":35,"label":"SubTerm 2"},{"arrows":"to","to":37,"from":36,"label":"SubTerm 1"},{"arrows":"to","to":62,"from":36,"label":"SubTerm 0"},{"arrows":"to","to":29,"from":38,"label":"SubTerm 0"},{"arrows":"to","to":41,"from":38,"label":"SubTerm 2"},{"arrows":"to","to":44,"from":38,"label":"SubTerm 3"},{"arrows":"to","to":64,"from":38,"label":"StepsTo CallStep"},{"arrows":"to","to":65,"from":38,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":39,"label":"SubTerm 0"},{"arrows":"to","to":8,"from":39,"label":"StepsTo CallStep"},{"arrows":"to","to":38,"from":39,"label":"SubTerm 1"},{"arrows":"to","to":41,"from":40,"label":"SubTerm 0"},{"arrows":"to","to":45,"from":42,"label":"SubTerm 2"},{"arrows":"to","to":57,"from":42,"label":"SubTerm 0"},{"arrows":"to","to":69,"from":42,"label":"SubTerm 3"},{"arrows":"to","to":136,"from":42,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":43,"label":"SubTerm 0"},{"arrows":"to","to":28,"from":43,"label":"SubTerm 1"},{"arrows":"to","to":31,"from":43,"label":"StepsTo CallStep"},{"arrows":"to","to":47,"from":46,"label":"SubTerm 2"},{"arrows":"to","to":103,"from":46,"label":"SubTerm 1"},{"arrows":"to","to":130,"from":46,"label":"SubTerm 0"},{"arrows":"to","to":132,"from":46,"label":"SubTerm 3"},{"arrows":"to","to":17,"from":48,"label":"SubTerm 1"},{"arrows":"to","to":77,"from":48,"label":"StepsTo BoringStep"},{"arrows":"to","to":85,"from":48,"label":"SubTerm 3"},{"arrows":"to","to":91,"from":48,"label":"SubTerm 2"},{"arrows":"to","to":118,"from":48,"label":"SubTerm 0"},{"arrows":"to","to":50,"from":49,"label":"SubTerm 0"},{"arrows":"to","to":83,"from":49,"label":"SubTerm 2"},{"arrows":"to","to":119,"from":49,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":51,"label":"SubTerm 0"},{"arrows":"to","to":35,"from":51,"label":"SubTerm 1"},{"arrows":"to","to":43,"from":51,"label":"StepsTo BoringStep"},{"arrows":"to","to":131,"from":52,"label":"SubTerm 0"},{"arrows":"to","to":73,"from":53,"label":"SubTerm 0"},{"arrows":"to","to":3,"from":56,"label":"SubTerm 0"},{"arrows":"to","to":41,"from":56,"label":"SubTerm 1"},{"arrows":"to","to":59,"from":58,"label":"SubTerm 1"},{"arrows":"to","to":133,"from":58,"label":"SubTerm 0"},{"arrows":"to","to":20,"from":61,"label":"SubTerm 3"},{"arrows":"to","to":29,"from":61,"label":"SubTerm 0"},{"arrows":"to","to":38,"from":61,"label":"StepsTo BoringStep"},{"arrows":"to","to":41,"from":61,"label":"SubTerm 2"},{"arrows":"to","to":65,"from":61,"label":"SubTerm 1"},{"arrows":"to","to":46,"from":62,"label":"SubTerm 1"},{"arrows":"to","to":63,"from":62,"label":"SubTerm 0"},{"arrows":"to","to":21,"from":64,"label":"SubTerm 0"},{"arrows":"to","to":66,"from":64,"label":"SubTerm 2"},{"arrows":"to","to":108,"from":64,"label":"StepsTo BoringStep"},{"arrows":"to","to":117,"from":64,"label":"SubTerm 1"},{"arrows":"to","to":67,"from":66,"label":"SubTerm 0"},{"arrows":"to","to":116,"from":66,"label":"SubTerm 2"},{"arrows":"to","to":125,"from":66,"label":"SubTerm 1"},{"arrows":"to","to":126,"from":66,"label":"SubTerm 3"},{"arrows":"to","to":10,"from":68,"label":"SubTerm 0"},{"arrows":"to","to":120,"from":68,"label":"StepsTo BoringStep"},{"arrows":"to","to":5,"from":70,"label":"SubTerm 0"},{"arrows":"to","to":30,"from":70,"label":"StepsTo BoringStep"},{"arrows":"to","to":106,"from":70,"label":"SubTerm 2"},{"arrows":"to","to":119,"from":70,"label":"SubTerm 1"},{"arrows":"to","to":72,"from":71,"label":"SubTerm 0"},{"arrows":"to","to":3,"from":74,"label":"SubTerm 0"},{"arrows":"to","to":75,"from":74,"label":"StepsTo BoringStep"},{"arrows":"to","to":108,"from":74,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":75,"label":"SubTerm 0"},{"arrows":"to","to":56,"from":75,"label":"StepsTo ReturnStep"},{"arrows":"to","to":109,"from":75,"label":"SubTerm 1"},{"arrows":"to","to":17,"from":77,"label":"SubTerm 1"},{"arrows":"to","to":40,"from":77,"label":"SubTerm 3"},{"arrows":"to","to":81,"from":77,"label":"StepsTo CallStep"},{"arrows":"to","to":91,"from":77,"label":"SubTerm 2"},{"arrows":"to","to":118,"from":77,"label":"SubTerm 0"},{"arrows":"to","to":4,"from":81,"label":"SubTerm 0"},{"arrows":"to","to":70,"from":81,"label":"StepsTo BoringStep"},{"arrows":"to","to":106,"from":81,"label":"SubTerm 2"},{"arrows":"to","to":119,"from":81,"label":"SubTerm 1"},{"arrows":"to","to":40,"from":85,"label":"StepsTo BoringStep"},{"arrows":"to","to":20,"from":86,"label":"SubTerm 3"},{"arrows":"to","to":29,"from":86,"label":"SubTerm 0"},{"arrows":"to","to":61,"from":86,"label":"StepsTo ReturnStep"},{"arrows":"to","to":65,"from":86,"label":"SubTerm 1"},{"arrows":"to","to":94,"from":86,"label":"SubTerm 2"},{"arrows":"to","to":0,"from":87,"label":"SubTerm 1"},{"arrows":"to","to":88,"from":87,"label":"SubTerm 0"},{"arrows":"to","to":91,"from":90,"label":"StepsTo BoringStep"},{"arrows":"to","to":115,"from":91,"label":"SubTerm 0"},{"arrows":"to","to":123,"from":91,"label":"SubTerm 1"},{"arrows":"to","to":41,"from":93,"label":"SubTerm 2"},{"arrows":"to","to":65,"from":93,"label":"SubTerm 0"},{"arrows":"to","to":94,"from":93,"label":"StepsTo CallStep"},{"arrows":"to","to":110,"from":93,"label":"SubTerm 1"},{"arrows":"to","to":41,"from":94,"label":"StepsTo ReturnStep"},{"arrows":"to","to":3,"from":95,"label":"SubTerm 0"},{"arrows":"to","to":39,"from":95,"label":"StepsTo BoringStep"},{"arrows":"to","to":61,"from":95,"label":"SubTerm 1"},{"arrows":"to","to":87,"from":101,"label":"SubTerm 0"},{"arrows":"to","to":137,"from":101,"label":"SubTerm 1"},{"arrows":"to","to":65,"from":104,"label":"SubTerm 0"},{"arrows":"to","to":93,"from":104,"label":"StepsTo BoringStep"},{"arrows":"to","to":110,"from":104,"label":"SubTerm 1"},{"arrows":"to","to":128,"from":104,"label":"SubTerm 2"},{"arrows":"to","to":65,"from":105,"label":"SubTerm 0"},{"arrows":"to","to":104,"from":105,"label":"StepsTo BoringStep"},{"arrows":"to","to":114,"from":105,"label":"SubTerm 1"},{"arrows":"to","to":128,"from":105,"label":"SubTerm 2"},{"arrows":"to","to":49,"from":106,"label":"SubTerm 2"},{"arrows":"to","to":50,"from":106,"label":"SubTerm 1"},{"arrows":"to","to":127,"from":106,"label":"SubTerm 3"},{"arrows":"to","to":134,"from":106,"label":"SubTerm 0"},{"arrows":"to","to":22,"from":108,"label":"SubTerm 0"},{"arrows":"to","to":66,"from":108,"label":"SubTerm 2"},{"arrows":"to","to":109,"from":108,"label":"StepsTo BoringStep"},{"arrows":"to","to":117,"from":108,"label":"SubTerm 1"},{"arrows":"to","to":41,"from":109,"label":"StepsTo ReturnStep"},{"arrows":"to","to":112,"from":110,"label":"SubTerm 0"},{"arrows":"to","to":122,"from":110,"label":"SubTerm 1"},{"arrows":"to","to":3,"from":113,"label":"SubTerm 0"},{"arrows":"to","to":26,"from":113,"label":"StepsTo BoringStep"},{"arrows":"to","to":81,"from":113,"label":"SubTerm 1"},{"arrows":"to","to":110,"from":114,"label":"StepsTo BoringStep"},{"arrows":"to","to":117,"from":116,"label":"SubTerm 1"},{"arrows":"to","to":125,"from":116,"label":"SubTerm 0"},{"arrows":"to","to":129,"from":116,"label":"SubTerm 2"},{"arrows":"to","to":33,"from":120,"label":"SubTerm 1"},{"arrows":"to","to":101,"from":120,"label":"SubTerm 0"},{"arrows":"to","to":121,"from":120,"label":"StepsTo BoringStep"},{"arrows":"to","to":11,"from":121,"label":"StepsTo BoringStep"},{"arrows":"to","to":12,"from":121,"label":"SubTerm 0"},{"arrows":"to","to":124,"from":121,"label":"SubTerm 1"},{"arrows":"to","to":71,"from":124,"label":"StepsTo BoringStep"},{"arrows":"to","to":41,"from":128,"label":"StepsTo ReturnStep"},{"arrows":"to","to":2,"from":135,"label":"StepsTo BoringStep"},{"arrows":"to","to":3,"from":135,"label":"SubTerm 0"},{"arrows":"to","to":16,"from":135,"label":"SubTerm 1"}],"nodes":[{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[["f","fun a -> fun x -> x"]],"annots":[[17,4,"Redex"],[22,4,"Redex"]],"id":0,"label":"List.fold_left f base args"},{"span":{"startLine":5,"endLine":5,"endCol":33,"startCol":32},"env":[["f","fun a -> fun x -> x"]],"annots":[],"id":1,"label":"f"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"],["args","[9]"]],"annots":[[61,4,"Redex"]],"id":2,"label":"let (_ , res) =\n  List.fold_left f (0 , [])\n                 args in\nres"},{"span":{"startLine":6,"endLine":6,"endCol":8,"startCol":5},"env":[],"annots":[[0,3,"Redex"]],"id":3,"label":"res"},{"span":null,"env":[["xs","[9]"]],"annots":[[0,2,"Redex"]],"id":4,"label":"xs"},{"span":null,"env":[],"annots":[],"id":5,"label":"[9]"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["xs_1","[]"],["b_1","9"],["f_2","fun a -> fun x -> x"]],"annots":[[24,4,"Redex"]],"id":8,"label":"let (_ , res) =\n  match xs_1 with\n  | [] -> b_1\n  | y :: ys -> List.fold_left f_2\n                              (f_2 b_1 y) ys in\nres"},{"span":{"startLine":3,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"]],"annots":[],"id":10,"label":"let base = (0 , []) in\nlet args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":4,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"],["base","(0 , [])"]],"annots":[[0,69,"Redex"]],"id":11,"label":"let args = [9] in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"],["base","(0 , [])"]],"annots":[[35,4,"Redex"],[40,4,"Redex"]],"id":12,"label":"let (_ , res) =\n  List.fold_left f base args in\nres"},{"span":null,"env":[],"annots":[],"id":14,"label":"[9]"},{"span":{"startLine":2,"endLine":2,"endCol":16,"startCol":9},"env":[],"annots":[],"id":15,"label":"fun a -> fun x -> x"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[["f","fun a -> fun x -> x"],["base","(0 , [])"],["args","[9]"]],"annots":[[17,4,"Redex"],[22,4,"Redex"]],"id":16,"label":"List.fold_left f base args"},{"span":{"startLine":5,"endLine":5,"endCol":33,"startCol":32},"env":[["f","fun a -> fun x -> x"]],"annots":[],"id":17,"label":"f"},{"span":{"startLine":5,"endLine":5,"endCol":31,"startCol":17},"env":[],"annots":[],"id":18,"label":"List.fold_left"},{"span":null,"env":[["ys","[]"]],"annots":[[0,2,"Redex"]],"id":20,"label":"ys"},{"span":null,"env":[["xs_1","[]"]],"annots":[[0,4,"Redex"]],"id":21,"label":"xs_1"},{"span":null,"env":[],"annots":[],"id":22,"label":"[]"},{"span":{"startLine":8,"endLine":8,"endCol":23,"startCol":9},"env":[["bigMul","fun l1 ->\n  fun l2 -> (let f =\n               fun a -> fun x -> x in\n             let base = (0 , []) in\n             let args = l1 in\n             let (_ , res) =\n               List.fold_left f base args in\n             res)"]],"annots":[],"id":23,"label":"bigMul [9] [9]"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"]],"annots":[[18,46,"Redex"]],"id":25,"label":"let (_ , res) =\n  List.fold_left f (0 , [])\n                 [9] in\nres"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["b","(0 , [])"],["f_1","fun a -> fun x -> x"]],"annots":[[16,189,"Redex"]],"id":26,"label":"let (_ , res) = match [9] with\n                | [] -> b\n                | y :: ys -> List.fold_left f_1\n                                            (f_1 b y)\n                                            ys in res"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"],["b","(0 , [])"],["y","9"],["ys","[]"]],"annots":[[42,1,"Redex"],[44,1,"Redex"],[64,2,"Redex"]],"id":27,"label":"let (_ , res) =\n  List.fold_left f_1 (f_1 b y)\n                 ys in\nres"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["ys","[]"]],"annots":[[34,16,"Redex"],[51,2,"Redex"]],"id":28,"label":"List.fold_left f_1\n               (f_1 (0 , []) 9) ys"},{"span":null,"env":[],"annots":[],"id":29,"label":"List.fold_left"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["b","(0 , [])"],["y","9"],["ys","[]"]],"annots":[[24,1,"Redex"],[26,1,"Redex"],[44,2,"Redex"]],"id":30,"label":"List.fold_left f_1 (f_1 b y)\n               ys"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"],["x","9"],["ys","[]"]],"annots":[[37,1,"Redex"],[39,2,"Redex"]],"id":31,"label":"let (_ , res) =\n  List.fold_left f_1 x ys in\nres"},{"span":{"startLine":3,"endLine":3,"endCol":20,"startCol":15},"env":[],"annots":[],"id":33,"label":"(0 , [])"},{"span":null,"env":[],"annots":[],"id":34,"label":"[]"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["y","9"],["ys","[]"]],"annots":[[48,1,"Redex"],[51,2,"Redex"]],"id":35,"label":"List.fold_left f_1\n               (f_1 (0 , []) y) ys"},{"span":{"startLine":4,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"]],"annots":[[11,2,"Redex"]],"id":36,"label":"let args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":4,"endLine":4,"endCol":16,"startCol":14},"env":[["l1","[9]"]],"annots":[[0,2,"Redex"]],"id":37,"label":"l1"},{"span":null,"env":[["f_1","fun a -> fun x -> x"]],"annots":[[0,23,"Redex"]],"id":38,"label":"List.fold_left f_1 9 []"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"]],"annots":[[18,23,"Redex"]],"id":39,"label":"let (_ , res) =\n  List.fold_left f_1 9 [] in\nres"},{"span":null,"env":[],"annots":[],"id":40,"label":"[9]"},{"span":{"startLine":8,"endLine":8,"endCol":18,"startCol":17},"env":[],"annots":[],"id":41,"label":"9"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[["f","fun a -> fun x -> x"],["base","(0 , [])"]],"annots":[[17,4,"Redex"],[22,4,"Redex"]],"id":42,"label":"List.fold_left f base args"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"],["ys","[]"]],"annots":[[54,16,"Redex"],[71,2,"Redex"]],"id":43,"label":"let (_ , res) =\n  List.fold_left f_1\n                 (f_1 (0 , []) 9) ys in\nres"},{"span":null,"env":[],"annots":[],"id":44,"label":"[]"},{"span":{"startLine":5,"endLine":5,"endCol":38,"startCol":34},"env":[["base","(0 , [])"]],"annots":[[0,4,"Redex"]],"id":45,"label":"base"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[],"annots":[[15,1,"Redex"],[17,4,"Redex"],[22,4,"Redex"]],"id":46,"label":"List.fold_left f base args"},{"span":{"startLine":5,"endLine":5,"endCol":38,"startCol":34},"env":[],"annots":[[0,4,"Redex"]],"id":47,"label":"base"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[["f","fun a -> fun x -> x"],["args","[9]"]],"annots":[[26,4,"Redex"]],"id":48,"label":"List.fold_left f (0 , []) args"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["b","(0 , [])"]],"annots":[[4,1,"Redex"],[6,1,"Redex"]],"id":49,"label":"f_1 b y"},{"span":null,"env":[["f_1","fun a -> fun x -> x"]],"annots":[],"id":50,"label":"f_1"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"],["y","9"],["ys","[]"]],"annots":[[68,1,"Redex"],[71,2,"Redex"]],"id":51,"label":"let (_ , res) =\n  List.fold_left f_1\n                 (f_1 (0 , []) y) ys in\nres"},{"span":{"startLine":2,"endLine":2,"endCol":16,"startCol":11},"env":[],"annots":[],"id":52,"label":"fun x -> x"},{"span":null,"env":[],"annots":[],"id":53,"label":"[9]"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[],"annots":[[0,24,"Redex"]],"id":56,"label":"let (_ , res) = 9 in res"},{"span":{"startLine":5,"endLine":5,"endCol":31,"startCol":17},"env":[],"annots":[],"id":57,"label":"List.fold_left"},{"span":{"startLine":3,"endLine":3,"endCol":20,"startCol":15},"env":[],"annots":[],"id":58,"label":"(0 , [])"},{"span":{"startLine":3,"endLine":3,"endCol":20,"startCol":18},"env":[],"annots":[],"id":59,"label":"[]"},{"span":{"startLine":6,"endLine":6,"endCol":8,"startCol":5},"env":[],"annots":[[0,3,"Redex"]],"id":60,"label":"res"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["ys","[]"]],"annots":[[21,2,"Redex"]],"id":61,"label":"List.fold_left f_1 9 ys"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[],"annots":[[33,1,"Redex"],[35,4,"Redex"],[40,4,"Redex"]],"id":62,"label":"let (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":6,"endLine":6,"endCol":8,"startCol":5},"env":[],"annots":[[0,3,"Redex"]],"id":63,"label":"res"},{"span":null,"env":[["xs_1","[]"],["b_1","9"],["f_2","fun a -> fun x -> x"]],"annots":[[6,4,"Redex"]],"id":64,"label":"match xs_1 with\n| [] -> b_1\n| y :: ys -> List.fold_left f_2\n                            (f_2 b_1 y) ys"},{"span":null,"env":[["f_1","fun a -> fun x -> x"]],"annots":[],"id":65,"label":"f_1"},{"span":null,"env":[["f_2","fun a -> fun x -> x"],["b_1","9"]],"annots":[[24,3,"Redex"],[28,1,"Redex"],[46,2,"Redex"]],"id":66,"label":"List.fold_left f_2 (f_2 b_1 y)\n               ys"},{"span":null,"env":[],"annots":[],"id":67,"label":"List.fold_left"},{"span":{"startLine":2,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"]],"annots":[[0,122,"Redex"]],"id":68,"label":"let f = fun a -> fun x -> x in\nlet base = (0 , []) in\nlet args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":39},"env":[],"annots":[[0,4,"Redex"]],"id":69,"label":"args"},{"span":null,"env":[["b","(0 , [])"],["f_1","fun a -> fun x -> x"]],"annots":[[0,97,"Redex"]],"id":70,"label":"match [9] with\n| [] -> b\n| y :: ys -> List.fold_left f_1\n                            (f_1 b y) ys"},{"span":null,"env":[],"annots":[],"id":71,"label":"[9]"},{"span":{"startLine":8,"endLine":8,"endCol":18,"startCol":17},"env":[],"annots":[],"id":72,"label":"9"},{"span":{"startLine":8,"endLine":8,"endCol":18,"startCol":17},"env":[],"annots":[],"id":73,"label":"9"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["b_1","9"],["f_2","fun a -> fun x -> x"]],"annots":[[16,192,"Redex"]],"id":74,"label":"let (_ , res) = match [] with\n                | [] -> b_1\n                | y :: ys -> List.fold_left f_2\n                                            (f_2 b_1 y)\n                                            ys in res"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["b_1","9"]],"annots":[[16,3,"Redex"]],"id":75,"label":"let (_ , res) = b_1 in res"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":17},"env":[["f","fun a -> fun x -> x"]],"annots":[[0,29,"Redex"]],"id":77,"label":"List.fold_left f (0 , []) [9]"},{"span":{"startLine":5,"endLine":5,"endCol":38,"startCol":34},"env":[],"annots":[[0,4,"Redex"]],"id":80,"label":"base"},{"span":null,"env":[["xs","[9]"],["b","(0 , [])"],["f_1","fun a -> fun x -> x"]],"annots":[[6,2,"Redex"]],"id":81,"label":"match xs with\n| [] -> b\n| y :: ys -> List.fold_left f_1\n                            (f_1 b y) ys"},{"span":{"startLine":8,"endLine":8,"endCol":22,"startCol":21},"env":[],"annots":[],"id":82,"label":"9"},{"span":null,"env":[],"annots":[[0,1,"Redex"]],"id":83,"label":"y"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":39},"env":[["args","[9]"]],"annots":[[0,4,"Redex"]],"id":85,"label":"args"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["x","9"],["ys","[]"]],"annots":[[19,1,"Redex"],[21,2,"Redex"]],"id":86,"label":"List.fold_left f_1 x ys"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"]],"annots":[[35,4,"Redex"],[40,4,"Redex"]],"id":87,"label":"let (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":6,"endLine":6,"endCol":8,"startCol":5},"env":[],"annots":[[0,3,"Redex"]],"id":88,"label":"res"},{"span":{"startLine":5,"endLine":5,"endCol":38,"startCol":34},"env":[["base","(0 , [])"]],"annots":[[0,4,"Redex"]],"id":90,"label":"base"},{"span":{"startLine":3,"endLine":3,"endCol":20,"startCol":15},"env":[],"annots":[],"id":91,"label":"(0 , [])"},{"span":null,"env":[["f_1","fun a -> fun x -> x"]],"annots":[[0,14,"Redex"]],"id":93,"label":"f_1 (0 , []) 9"},{"span":{"startLine":2,"endLine":2,"endCol":16,"startCol":15},"env":[["x","9"]],"annots":[[0,1,"Redex"]],"id":94,"label":"x"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f_1","fun a -> fun x -> x"],["ys","[]"]],"annots":[[39,2,"Redex"]],"id":95,"label":"let (_ , res) =\n  List.fold_left f_1 9 ys in\nres"},{"span":{"startLine":3,"endLine":3,"endCol":16,"startCol":15},"env":[],"annots":[],"id":98,"label":"0"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":39},"env":[],"annots":[[0,4,"Redex"]],"id":99,"label":"args"},{"span":{"startLine":4,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"],["f","fun a -> fun x -> x"]],"annots":[[11,2,"Redex"]],"id":101,"label":"let args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":8,"endLine":8,"endCol":15,"startCol":9},"env":[["bigMul","fun l1 ->\n  fun l2 -> (let f =\n               fun a -> fun x -> x in\n             let base = (0 , []) in\n             let args = l1 in\n             let (_ , res) =\n               List.fold_left f base args in\n             res)"]],"annots":[],"id":102,"label":"bigMul"},{"span":{"startLine":5,"endLine":5,"endCol":33,"startCol":32},"env":[],"annots":[[0,1,"Redex"]],"id":103,"label":"f"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["y","9"]],"annots":[[13,1,"Redex"]],"id":104,"label":"f_1 (0 , []) y"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["b","(0 , [])"],["y","9"]],"annots":[[4,1,"Redex"],[6,1,"Redex"]],"id":105,"label":"f_1 b y"},{"span":null,"env":[["f_1","fun a -> fun x -> x"],["b","(0 , [])"]],"annots":[[24,1,"Redex"],[26,1,"Redex"],[44,2,"Redex"]],"id":106,"label":"List.fold_left f_1 (f_1 b y)\n               ys"},{"span":null,"env":[["b_1","9"],["f_2","fun a -> fun x -> x"]],"annots":[[0,100,"Redex"]],"id":108,"label":"match [] with\n| [] -> b_1\n| y :: ys -> List.fold_left f_2\n                            (f_2 b_1 y) ys"},{"span":null,"env":[["b_1","9"]],"annots":[[0,3,"Redex"]],"id":109,"label":"b_1"},{"span":{"startLine":3,"endLine":3,"endCol":20,"startCol":15},"env":[],"annots":[],"id":110,"label":"(0 , [])"},{"span":{"startLine":3,"endLine":3,"endCol":16,"startCol":15},"env":[],"annots":[],"id":112,"label":"0"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["xs","[9]"],["b","(0 , [])"],["f_1","fun a -> fun x -> x"]],"annots":[[24,2,"Redex"]],"id":113,"label":"let (_ , res) =\n  match xs with\n  | [] -> b\n  | y :: ys -> List.fold_left f_1\n                              (f_1 b y) ys in\nres"},{"span":null,"env":[["b","(0 , [])"]],"annots":[[0,1,"Redex"]],"id":114,"label":"b"},{"span":{"startLine":3,"endLine":3,"endCol":16,"startCol":15},"env":[],"annots":[],"id":115,"label":"0"},{"span":null,"env":[["f_2","fun a -> fun x -> x"],["b_1","9"]],"annots":[[4,3,"Redex"],[8,1,"Redex"]],"id":116,"label":"f_2 b_1 y"},{"span":null,"env":[["b_1","9"]],"annots":[[0,3,"Redex"]],"id":117,"label":"b_1"},{"span":{"startLine":5,"endLine":5,"endCol":31,"startCol":17},"env":[],"annots":[],"id":118,"label":"List.fold_left"},{"span":null,"env":[["b","(0 , [])"]],"annots":[[0,1,"Redex"]],"id":119,"label":"b"},{"span":{"startLine":3,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"],["f","fun a -> fun x -> x"]],"annots":[[0,91,"Redex"]],"id":120,"label":"let base = (0 , []) in\nlet args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":4,"endLine":6,"endCol":8,"startCol":3},"env":[["l1","[9]"],["f","fun a -> fun x -> x"],["base","(0 , [])"]],"annots":[[11,2,"Redex"]],"id":121,"label":"let args = l1 in\nlet (_ , res) =\n  List.fold_left f base args in\nres"},{"span":null,"env":[],"annots":[],"id":122,"label":"[]"},{"span":null,"env":[],"annots":[],"id":123,"label":"[]"},{"span":{"startLine":4,"endLine":4,"endCol":16,"startCol":14},"env":[["l1","[9]"]],"annots":[[0,2,"Redex"]],"id":124,"label":"l1"},{"span":null,"env":[["f_2","fun a -> fun x -> x"]],"annots":[],"id":125,"label":"f_2"},{"span":null,"env":[],"annots":[[0,2,"Redex"]],"id":126,"label":"ys"},{"span":null,"env":[],"annots":[[0,2,"Redex"]],"id":127,"label":"ys"},{"span":null,"env":[["y","9"]],"annots":[[0,1,"Redex"]],"id":128,"label":"y"},{"span":null,"env":[],"annots":[[0,1,"Redex"]],"id":129,"label":"y"},{"span":{"startLine":5,"endLine":5,"endCol":31,"startCol":17},"env":[],"annots":[],"id":130,"label":"List.fold_left"},{"span":{"startLine":2,"endLine":2,"endCol":16,"startCol":15},"env":[],"annots":[[0,1,"Redex"]],"id":131,"label":"x"},{"span":{"startLine":5,"endLine":5,"endCol":43,"startCol":39},"env":[],"annots":[[0,4,"Redex"]],"id":132,"label":"args"},{"span":{"startLine":3,"endLine":3,"endCol":16,"startCol":15},"env":[],"annots":[],"id":133,"label":"0"},{"span":null,"env":[],"annots":[],"id":134,"label":"List.fold_left"},{"span":{"startLine":5,"endLine":6,"endCol":8,"startCol":3},"env":[["f","fun a -> fun x -> x"],["base","(0 , [])"],["args","[9]"]],"annots":[[35,4,"Redex"],[40,4,"Redex"]],"id":135,"label":"let (_ , res) =\n  List.fold_left f base args in\nres"},{"span":{"startLine":5,"endLine":5,"endCol":33,"startCol":32},"env":[["f","fun a -> fun x -> x"]],"annots":[],"id":136,"label":"f"},{"span":{"startLine":4,"endLine":4,"endCol":16,"startCol":14},"env":[["l1","[9]"]],"annots":[[0,2,"Redex"]],"id":137,"label":"l1"}]}